{
  "vulnerabilities": {
    "descriptor": {
      "configuration": "",
      "db": {
        "built": "2023-02-07T08:18:32Z",
        "checksum": "sha256:a8c694063a8d35fca047284ab8f55025664acc1f9cc9f8da30ffa05b9553c52f",
        "error": null,
        "location": "/var/folders/2v/z_0jd7gn30qcym54rz_z2__m0000gq/T/veracode_cli_cache/5",
        "schemaVersion": 5
      },
      "name": "grype",
      "version": "[not provided]"
    },
    "distro": {
      "idLike": null,
      "name": "",
      "version": ""
    },
    "matches": [
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:junit:junit:4.12:*:*:*:*:*:*:*"
          ],
          "language": "java",
          "licenses": [],
          "locations": [
            {
              "path": "packages/pom.xml"
            }
          ],
          "metadata": {
            "archiveDigests": null,
            "manifestName": "",
            "pomArtifactID": "",
            "pomGroupID": "",
            "virtualPath": ""
          },
          "metadataType": "JavaMetadata",
          "name": "junit",
          "purl": "pkg:maven/junit/junit@4.12",
          "type": "java-archive",
          "upstreams": [],
          "version": "4.12"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003e=4.7,\u003c4.13.1 (unknown)"
            },
            "matcher": "java-matcher",
            "searchedBy": {
              "language": "java",
              "namespace": "github:language:java"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 1.9,
                  "exploitabilityScore": 3.4,
                  "impactScore": 2.9
                },
                "vector": "AV:L/AC:M/Au:N/C:P/I:N/A:N",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 5.5,
                  "exploitabilityScore": 1.8,
                  "impactScore": 3.6
                },
                "vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2020-15250",
            "description": "In JUnit4 from version 4.7 and before 4.13.1, the test rule TemporaryFolder contains a local information disclosure vulnerability. On Unix like systems, the system's temporary directory is shared between all users on that system. Because of this, when files and directories are written into this directory they are, by default, readable by other users on that same system. This vulnerability does not allow other users to overwrite the contents of these directories or files. This is purely an information disclosure vulnerability. This vulnerability impacts you if the JUnit tests write sensitive information, like API keys or passwords, into the temporary folder, and the JUnit tests execute in an environment where the OS has other untrusted users. Because certain JDK file system APIs were only added in JDK 1.7, this this fix is dependent upon the version of the JDK you are using. For Java 1.7 and higher users: this vulnerability is fixed in 4.13.1. For Java 1.6 and lower users: no patch is available, you must use the workaround below. If you are unable to patch, or are stuck running on Java 1.6, specifying the `java.io.tmpdir` system environment variable to a directory that is exclusively owned by the executing user will fix this vulnerability. For more information, including an example of vulnerable code, see the referenced GitHub Security Advisory.",
            "id": "CVE-2020-15250",
            "namespace": "nvd:cpe",
            "severity": "Medium",
            "urls": [
              "https://github.com/junit-team/junit4/commit/610155b8c22138329f0723eec22521627dbc52ae",
              "https://github.com/junit-team/junit4/security/advisories/GHSA-269g-pwp5-87pp",
              "https://github.com/junit-team/junit4/blob/7852b90cfe1cea1e0cdaa19d490c83f0d8684b50/doc/ReleaseNotes4.13.1.md",
              "https://junit.org/junit4/javadoc/4.13/org/junit/rules/TemporaryFolder.html",
              "https://lists.apache.org/thread.html/r5f8841507576f595bb783ccec6a7cb285ea90d4e6f5043eae0e61a41@%3Cdev.creadur.apache.org%3E",
              "https://lists.apache.org/thread.html/rb2771949c676ca984e58a5cd5ca79c2634dee1945e0406e48e0f8457@%3Cdev.creadur.apache.org%3E",
              "https://lists.apache.org/thread.html/r717877028482c55acf604d7a0106af4ca05da4208c708fb157b53672@%3Ccommits.creadur.apache.org%3E",
              "https://lists.apache.org/thread.html/rde385b8b53ed046600ef68dd6b4528dea7566aaddb02c3e702cc28bc@%3Ccommits.creadur.apache.org%3E",
              "https://lists.apache.org/thread.html/r95f8ef60c4b3a5284b647bb3132cda08e6fadad888a66b84f49da0b0@%3Ccommits.creadur.apache.org%3E",
              "https://lists.apache.org/thread.html/rc49cf1547ef6cac1be4b3c92339b2cae0acacf5acaba13cfa429a872@%3Cdev.creadur.apache.org%3E",
              "https://lists.apache.org/thread.html/r500517c23200fb2fdb0b82770a62dd6c88b3521cfb01cfd0c76e3f8b@%3Cdev.creadur.apache.org%3E",
              "https://lists.apache.org/thread.html/rbaec90e699bc7c7bd9a053f76707a36fda48b6d558f31dc79147dbf9@%3Cdev.creadur.apache.org%3E",
              "https://github.com/junit-team/junit4/issues/1676",
              "https://lists.debian.org/debian-lts-announce/2020/11/msg00003.html",
              "https://lists.apache.org/thread.html/ra1bdb9efae84794e8ffa2f8474be8290ba57830eefe9714b95da714b@%3Cdev.pdfbox.apache.org%3E",
              "https://lists.apache.org/thread.html/rb33212dab7beccaf1ffef9b88610047c644f644c7a0ebdc44d77e381@%3Ccommits.turbine.apache.org%3E",
              "https://lists.apache.org/thread.html/raebf13f53cd5d23d990712e3d11c80da9a7bae94a6284050f148ed99@%3Ccommits.pulsar.apache.org%3E",
              "https://lists.apache.org/thread.html/rde8e70b95c992378e8570e4df400c6008a9839eabdfb8f800a3e5af6@%3Ccommits.pulsar.apache.org%3E",
              "https://lists.apache.org/thread.html/r01110833b63616ddbef59ae4e10c0fbd0060f0a51206defd4cb4d917@%3Ccommits.pulsar.apache.org%3E",
              "https://lists.apache.org/thread.html/rdef7d1380c86e7c0edf8a0f89a2a8db86fce5e363457d56b722691b4@%3Ccommits.pulsar.apache.org%3E",
              "https://lists.apache.org/thread.html/rdbdd30510a7c4d0908fd22075c02b75bbc2e0d977ec22249ef3133cb@%3Ccommits.pulsar.apache.org%3E",
              "https://lists.apache.org/thread.html/rf797d119cc3f51a8d7c3c5cbe50cb4524c8487282b986edde83a9467@%3Ccommits.pulsar.apache.org%3E",
              "https://lists.apache.org/thread.html/rea812d8612fdc46842a2a57248cad4b01ddfdb1e9b037c49e68fdbfb@%3Ccommits.pulsar.apache.org%3E",
              "https://lists.apache.org/thread.html/reb700e60b9642eafa4b7922bfee80796394135aa09c7a239ef9f7486@%3Ccommits.pulsar.apache.org%3E",
              "https://lists.apache.org/thread.html/rf2ec93f4ca9a97d1958eb4a31b1830f723419ce9bf2018a6e5741d5b@%3Ccommits.pulsar.apache.org%3E",
              "https://lists.apache.org/thread.html/r30f502d2f79e8d635361adb8108dcbb73095163fcbd776ee7984a094@%3Ccommits.creadur.apache.org%3E",
              "https://lists.apache.org/thread.html/r09cfbb5aedd76023691bbce9ca4ce2e16bb07dd37554a17efc19935d@%3Cpluto-dev.portals.apache.org%3E",
              "https://lists.apache.org/thread.html/r29d703d1986d9b871466ff24082a1828ac8ad27bb0965a93a383872e@%3Cpluto-scm.portals.apache.org%3E",
              "https://lists.apache.org/thread.html/r925eaae7dd8f77dd61eefc49c1fcf54bd9ecfe605486870d7b1e9390@%3Cpluto-dev.portals.apache.org%3E",
              "https://lists.apache.org/thread.html/r687f489b10b0d14e46f626aa88476545e1a2600b24c4ebd3c0d2a10b@%3Cdev.knox.apache.org%3E",
              "https://lists.apache.org/thread.html/r2b78f23bc2711a76a7fc73ad67b7fcd6817c5cfccefd6f30a4f54943@%3Cdev.knox.apache.org%3E",
              "https://lists.apache.org/thread.html/rf6e5d894d4b03bef537c9d6641272e0197c047c0d1982b4e176d0353@%3Cdev.knox.apache.org%3E",
              "https://lists.apache.org/thread.html/r934208a520b38f5cf0cae199b6b076bfe7d081809528b0eff2459e40@%3Cdev.knox.apache.org%3E",
              "https://lists.apache.org/thread.html/r1209986f79359b518d09513ff05a88e5b3c398540e775edea76a4774@%3Cdev.knox.apache.org%3E",
              "https://lists.apache.org/thread.html/r8b02dc6f18df11ff39eedb3038f1e31e6f90a779b1959bae65107279@%3Cdev.knox.apache.org%3E",
              "https://lists.apache.org/thread.html/r742b44fd75215fc75963b8ecc22b2e4372e68d67d3d859d2b5e8743f@%3Cdev.knox.apache.org%3E",
              "https://lists.apache.org/thread.html/rb2ffe2993f4dccc48d832e1a0f1c419477781b6ea16e725ca2276dbb@%3Cdev.knox.apache.org%3E",
              "https://lists.apache.org/thread.html/r9710067c7096b83cb6ae8f53a2f6f94e9c042d1bf1d6929f8f2a2b7a@%3Ccommits.knox.apache.org%3E",
              "https://www.oracle.com/security-alerts/cpuapr2022.html"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-269g-pwp5-87pp",
          "description": "TemporaryFolder on unix-like systems does not limit access to created files",
          "fix": {
            "state": "fixed",
            "versions": [
              "4.13.1"
            ]
          },
          "id": "GHSA-269g-pwp5-87pp",
          "namespace": "github:language:java",
          "severity": "Medium",
          "urls": [
            "https://github.com/advisories/GHSA-269g-pwp5-87pp"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:engine.io:engine.io:6.1.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:engine.io:6.1.0:*:*:*:*:*:*:*"
          ],
          "language": "javascript",
          "licenses": [],
          "locations": [
            {
              "path": "packages/node/base/package-lock.json"
            }
          ],
          "name": "engine.io",
          "purl": "pkg:npm/engine.io@6.1.0",
          "type": "npm",
          "upstreams": [],
          "version": "6.1.0"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003e=6.0.0,\u003c6.1.1 (unknown)"
            },
            "matcher": "javascript-matcher",
            "searchedBy": {
              "language": "javascript",
              "namespace": "github:language:javascript"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 5,
                  "exploitabilityScore": 10,
                  "impactScore": 2.9
                },
                "vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 7.5,
                  "exploitabilityScore": 3.9,
                  "impactScore": 3.6
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2022-21676",
            "description": "Engine.IO is the implementation of transport-based cross-browser/cross-device bi-directional communication layer for Socket.IO. A specially crafted HTTP request can trigger an uncaught exception on the Engine.IO server, thus killing the Node.js process. This impacts all the users of the `engine.io` package starting from version `4.0.0`, including those who uses depending packages like `socket.io`. Versions prior to `4.0.0` are not impacted. A fix has been released for each major branch, namely `4.1.2` for the `4.x.x` branch, `5.2.1` for the `5.x.x` branch, and `6.1.1` for the `6.x.x` branch. There is no known workaround except upgrading to a safe version.",
            "id": "CVE-2022-21676",
            "namespace": "nvd:cpe",
            "severity": "High",
            "urls": [
              "https://github.com/socketio/engine.io/security/advisories/GHSA-273r-mgr4-v34f",
              "https://github.com/socketio/engine.io/commit/c0e194d44933bd83bf9a4b126fca68ba7bf5098c",
              "https://github.com/socketio/engine.io/commit/66f889fc1d966bf5bfa0de1939069153643874ab",
              "https://github.com/socketio/engine.io/commit/a70800d7e96da32f6e6622804ef659ebc58659db",
              "https://github.com/socketio/engine.io/releases/tag/6.1.1",
              "https://github.com/socketio/engine.io/releases/tag/5.2.1",
              "https://github.com/socketio/engine.io/releases/tag/4.1.2",
              "https://security.netapp.com/advisory/ntap-20220209-0002/"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-273r-mgr4-v34f",
          "description": "Uncaught Exception in engine.io",
          "fix": {
            "state": "fixed",
            "versions": [
              "6.1.1"
            ]
          },
          "id": "GHSA-273r-mgr4-v34f",
          "namespace": "github:language:javascript",
          "severity": "High",
          "urls": [
            "https://github.com/advisories/GHSA-273r-mgr4-v34f"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:node-forge:node-forge:0.10.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:node-forge:node_forge:0.10.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:node_forge:node-forge:0.10.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:node_forge:node_forge:0.10.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:node:node-forge:0.10.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:node:node_forge:0.10.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:node-forge:0.10.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:node_forge:0.10.0:*:*:*:*:*:*:*"
          ],
          "language": "javascript",
          "licenses": [],
          "locations": [
            {
              "path": "packages/node/base/package-lock.json"
            }
          ],
          "name": "node-forge",
          "purl": "pkg:npm/node-forge@0.10.0",
          "type": "npm",
          "upstreams": [],
          "version": "0.10.0"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c1.3.0 (unknown)"
            },
            "matcher": "javascript-matcher",
            "searchedBy": {
              "language": "javascript",
              "namespace": "github:language:javascript"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 5,
                  "exploitabilityScore": 10,
                  "impactScore": 2.9
                },
                "vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 5.3,
                  "exploitabilityScore": 3.9,
                  "impactScore": 1.4
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2022-24773",
            "description": "Forge (also called `node-forge`) is a native implementation of Transport Layer Security in JavaScript. Prior to version 1.3.0, RSA PKCS#1 v1.5 signature verification code does not properly check `DigestInfo` for a proper ASN.1 structure. This can lead to successful verification with signatures that contain invalid structures but a valid digest. The issue has been addressed in `node-forge` version 1.3.0. There are currently no known workarounds.",
            "id": "CVE-2022-24773",
            "namespace": "nvd:cpe",
            "severity": "Medium",
            "urls": [
              "https://github.com/digitalbazaar/forge/commit/3f0b49a0573ef1bb7af7f5673c0cfebf00424df1",
              "https://github.com/digitalbazaar/forge/security/advisories/GHSA-2r2c-g63r-vccr",
              "https://github.com/digitalbazaar/forge/commit/bb822c02df0b61211836472e29b9790cc541cdb2"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-2r2c-g63r-vccr",
          "description": "Improper Verification of Cryptographic Signature in `node-forge`",
          "fix": {
            "state": "fixed",
            "versions": [
              "1.3.0"
            ]
          },
          "id": "GHSA-2r2c-g63r-vccr",
          "namespace": "github:language:javascript",
          "severity": "Medium",
          "urls": [
            "https://github.com/advisories/GHSA-2r2c-g63r-vccr"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:python-django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:django:1.2:*:*:*:*:*:*:*"
          ],
          "language": "python",
          "licenses": [],
          "locations": [
            {
              "path": "packages/sub/.hidden/requirements.txt"
            }
          ],
          "name": "django",
          "purl": "pkg:pypi/django@1.2",
          "type": "python",
          "upstreams": [],
          "version": "1.2"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c1.11.18 (python)"
            },
            "matcher": "python-matcher",
            "searchedBy": {
              "language": "python",
              "namespace": "github:language:python"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 4.3,
                  "exploitabilityScore": 8.6,
                  "impactScore": 2.9
                },
                "vector": "AV:N/AC:M/Au:N/C:N/I:P/A:N",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 6.5,
                  "exploitabilityScore": 2.8,
                  "impactScore": 3.6
                },
                "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N",
                "vendorMetadata": {},
                "version": "3.0"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2019-3498",
            "description": "In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",
            "id": "CVE-2019-3498",
            "namespace": "nvd:cpe",
            "severity": "Medium",
            "urls": [
              "https://www.djangoproject.com/weblog/2019/jan/04/security-releases/",
              "https://groups.google.com/forum/#!topic/django-announce/VYU7xQQTEPQ",
              "https://docs.djangoproject.com/en/dev/releases/security/",
              "https://www.debian.org/security/2019/dsa-4363",
              "https://usn.ubuntu.com/3851-1/",
              "https://lists.debian.org/debian-lts-announce/2019/01/msg00005.html",
              "http://www.securityfocus.com/bid/106453",
              "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HVXDOVCXLD74SHR2BENGCE2OOYYYWJHZ/"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-337x-4q8g-prc5",
          "description": "Improper Input Validation Django",
          "fix": {
            "state": "fixed",
            "versions": [
              "1.11.18"
            ]
          },
          "id": "GHSA-337x-4q8g-prc5",
          "namespace": "github:language:python",
          "severity": "Medium",
          "urls": [
            "https://github.com/advisories/GHSA-337x-4q8g-prc5"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:python-django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:django:1.2:*:*:*:*:*:*:*"
          ],
          "language": "python",
          "licenses": [],
          "locations": [
            {
              "path": "packages/requirements.txt"
            }
          ],
          "name": "django",
          "purl": "pkg:pypi/django@1.2",
          "type": "python",
          "upstreams": [],
          "version": "1.2"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c1.11.18 (python)"
            },
            "matcher": "python-matcher",
            "searchedBy": {
              "language": "python",
              "namespace": "github:language:python"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 4.3,
                  "exploitabilityScore": 8.6,
                  "impactScore": 2.9
                },
                "vector": "AV:N/AC:M/Au:N/C:N/I:P/A:N",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 6.5,
                  "exploitabilityScore": 2.8,
                  "impactScore": 3.6
                },
                "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N",
                "vendorMetadata": {},
                "version": "3.0"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2019-3498",
            "description": "In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",
            "id": "CVE-2019-3498",
            "namespace": "nvd:cpe",
            "severity": "Medium",
            "urls": [
              "https://www.djangoproject.com/weblog/2019/jan/04/security-releases/",
              "https://groups.google.com/forum/#!topic/django-announce/VYU7xQQTEPQ",
              "https://docs.djangoproject.com/en/dev/releases/security/",
              "https://www.debian.org/security/2019/dsa-4363",
              "https://usn.ubuntu.com/3851-1/",
              "https://lists.debian.org/debian-lts-announce/2019/01/msg00005.html",
              "http://www.securityfocus.com/bid/106453",
              "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HVXDOVCXLD74SHR2BENGCE2OOYYYWJHZ/"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-337x-4q8g-prc5",
          "description": "Improper Input Validation Django",
          "fix": {
            "state": "fixed",
            "versions": [
              "1.11.18"
            ]
          },
          "id": "GHSA-337x-4q8g-prc5",
          "namespace": "github:language:python",
          "severity": "Medium",
          "urls": [
            "https://github.com/advisories/GHSA-337x-4q8g-prc5"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:jszip:jszip:3.7.1:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:jszip:3.7.1:*:*:*:*:*:*:*"
          ],
          "language": "javascript",
          "licenses": [],
          "locations": [
            {
              "path": "packages/node/base/package-lock.json"
            }
          ],
          "name": "jszip",
          "purl": "pkg:npm/jszip@3.7.1",
          "type": "npm",
          "upstreams": [],
          "version": "3.7.1"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c3.8.0 (unknown)"
            },
            "matcher": "javascript-matcher",
            "searchedBy": {
              "language": "javascript",
              "namespace": "github:language:javascript"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2022-48285",
            "description": "loadAsync in JSZip before 3.8.0 allows Directory Traversal via a crafted ZIP archive.",
            "id": "CVE-2022-48285",
            "namespace": "nvd:cpe",
            "severity": "Unknown",
            "urls": [
              "https://github.com/Stuk/jszip/compare/v3.7.1...v3.8.0",
              "https://www.mend.io/vulnerability-database/WS-2023-0004",
              "https://exchange.xforce.ibmcloud.com/vulnerabilities/244499",
              "https://github.com/Stuk/jszip/commit/2edab366119c9ee948357c02f1206c28566cdf15"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-36fh-84j7-cv5h",
          "description": "JSZip contains Path Traversal via loadAsync",
          "fix": {
            "state": "fixed",
            "versions": [
              "3.8.0"
            ]
          },
          "id": "GHSA-36fh-84j7-cv5h",
          "namespace": "github:language:javascript",
          "severity": "Critical",
          "urls": [
            "https://github.com/advisories/GHSA-36fh-84j7-cv5h"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:python-django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:django:1.2:*:*:*:*:*:*:*"
          ],
          "language": "python",
          "licenses": [],
          "locations": [
            {
              "path": "packages/sub/.hidden/requirements.txt"
            }
          ],
          "name": "django",
          "purl": "pkg:pypi/django@1.2",
          "type": "python",
          "upstreams": [],
          "version": "1.2"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c1.11.29 (python)"
            },
            "matcher": "python-matcher",
            "searchedBy": {
              "language": "python",
              "namespace": "github:language:python"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 6.5,
                  "exploitabilityScore": 8,
                  "impactScore": 6.4
                },
                "vector": "AV:N/AC:L/Au:S/C:P/I:P/A:P",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 8.8,
                  "exploitabilityScore": 2.8,
                  "impactScore": 5.9
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2020-9402",
            "description": "Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",
            "id": "CVE-2020-9402",
            "namespace": "nvd:cpe",
            "severity": "High",
            "urls": [
              "https://groups.google.com/forum/#!topic/django-announce/fLUh_pOaKrY",
              "https://www.djangoproject.com/weblog/2020/mar/04/security-releases/",
              "https://docs.djangoproject.com/en/3.0/releases/security/",
              "https://usn.ubuntu.com/4296-1/",
              "https://security.netapp.com/advisory/ntap-20200327-0004/",
              "https://security.gentoo.org/glsa/202004-17",
              "https://www.debian.org/security/2020/dsa-4705",
              "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4A2AP4T7RKPBCLTI2NNQG3T6MINDUUMZ/",
              "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UZMN2NKAGTFE3YKMNM2JVJG7R2W7LLHY/",
              "https://lists.debian.org/debian-lts-announce/2022/05/msg00035.html"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-3gh2-xw74-jmcw",
          "description": "SQL injection in Django",
          "fix": {
            "state": "fixed",
            "versions": [
              "1.11.29"
            ]
          },
          "id": "GHSA-3gh2-xw74-jmcw",
          "namespace": "github:language:python",
          "severity": "High",
          "urls": [
            "https://github.com/advisories/GHSA-3gh2-xw74-jmcw"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:python-django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:django:1.2:*:*:*:*:*:*:*"
          ],
          "language": "python",
          "licenses": [],
          "locations": [
            {
              "path": "packages/requirements.txt"
            }
          ],
          "name": "django",
          "purl": "pkg:pypi/django@1.2",
          "type": "python",
          "upstreams": [],
          "version": "1.2"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c1.11.29 (python)"
            },
            "matcher": "python-matcher",
            "searchedBy": {
              "language": "python",
              "namespace": "github:language:python"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 6.5,
                  "exploitabilityScore": 8,
                  "impactScore": 6.4
                },
                "vector": "AV:N/AC:L/Au:S/C:P/I:P/A:P",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 8.8,
                  "exploitabilityScore": 2.8,
                  "impactScore": 5.9
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2020-9402",
            "description": "Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",
            "id": "CVE-2020-9402",
            "namespace": "nvd:cpe",
            "severity": "High",
            "urls": [
              "https://groups.google.com/forum/#!topic/django-announce/fLUh_pOaKrY",
              "https://www.djangoproject.com/weblog/2020/mar/04/security-releases/",
              "https://docs.djangoproject.com/en/3.0/releases/security/",
              "https://usn.ubuntu.com/4296-1/",
              "https://security.netapp.com/advisory/ntap-20200327-0004/",
              "https://security.gentoo.org/glsa/202004-17",
              "https://www.debian.org/security/2020/dsa-4705",
              "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4A2AP4T7RKPBCLTI2NNQG3T6MINDUUMZ/",
              "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UZMN2NKAGTFE3YKMNM2JVJG7R2W7LLHY/",
              "https://lists.debian.org/debian-lts-announce/2022/05/msg00035.html"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-3gh2-xw74-jmcw",
          "description": "SQL injection in Django",
          "fix": {
            "state": "fixed",
            "versions": [
              "1.11.29"
            ]
          },
          "id": "GHSA-3gh2-xw74-jmcw",
          "namespace": "github:language:python",
          "severity": "High",
          "urls": [
            "https://github.com/advisories/GHSA-3gh2-xw74-jmcw"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:python-django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:django:1.2:*:*:*:*:*:*:*"
          ],
          "language": "python",
          "licenses": [],
          "locations": [
            {
              "path": "packages/sub/.hidden/requirements.txt"
            }
          ],
          "name": "django",
          "purl": "pkg:pypi/django@1.2",
          "type": "python",
          "upstreams": [],
          "version": "1.2"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003e=1.2.0,\u003c1.2.7 (python)"
            },
            "matcher": "python-matcher",
            "searchedBy": {
              "language": "python",
              "namespace": "github:language:python"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 5,
                  "exploitabilityScore": 10,
                  "impactScore": 2.9
                },
                "vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P",
                "vendorMetadata": {},
                "version": "2.0"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2011-4137",
            "description": "The verify_exists functionality in the URLField implementation in Django before 1.2.7 and 1.3.x before 1.3.1 relies on Python libraries that attempt access to an arbitrary URL with no timeout, which allows remote attackers to cause a denial of service (resource consumption) via a URL associated with (1) a slow response, (2) a completed TCP connection with no application data sent, or (3) a large amount of application data, a related issue to CVE-2011-1521.",
            "id": "CVE-2011-4137",
            "namespace": "nvd:cpe",
            "severity": "Medium",
            "urls": [
              "https://bugzilla.redhat.com/show_bug.cgi?id=737366",
              "https://www.djangoproject.com/weblog/2011/sep/10/127/",
              "http://openwall.com/lists/oss-security/2011/09/13/2",
              "http://openwall.com/lists/oss-security/2011/09/15/5",
              "https://www.djangoproject.com/weblog/2011/sep/09/",
              "http://openwall.com/lists/oss-security/2011/09/11/1",
              "http://secunia.com/advisories/46614",
              "http://www.debian.org/security/2011/dsa-2332",
              "https://hermes.opensuse.org/messages/14700881"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-3jqw-crqj-w8qw",
          "description": "Moderate severity vulnerability that affects django",
          "fix": {
            "state": "fixed",
            "versions": [
              "1.2.7"
            ]
          },
          "id": "GHSA-3jqw-crqj-w8qw",
          "namespace": "github:language:python",
          "severity": "Medium",
          "urls": [
            "https://github.com/advisories/GHSA-3jqw-crqj-w8qw"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:python-django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:django:1.2:*:*:*:*:*:*:*"
          ],
          "language": "python",
          "licenses": [],
          "locations": [
            {
              "path": "packages/requirements.txt"
            }
          ],
          "name": "django",
          "purl": "pkg:pypi/django@1.2",
          "type": "python",
          "upstreams": [],
          "version": "1.2"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003e=1.2.0,\u003c1.2.7 (python)"
            },
            "matcher": "python-matcher",
            "searchedBy": {
              "language": "python",
              "namespace": "github:language:python"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 5,
                  "exploitabilityScore": 10,
                  "impactScore": 2.9
                },
                "vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P",
                "vendorMetadata": {},
                "version": "2.0"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2011-4137",
            "description": "The verify_exists functionality in the URLField implementation in Django before 1.2.7 and 1.3.x before 1.3.1 relies on Python libraries that attempt access to an arbitrary URL with no timeout, which allows remote attackers to cause a denial of service (resource consumption) via a URL associated with (1) a slow response, (2) a completed TCP connection with no application data sent, or (3) a large amount of application data, a related issue to CVE-2011-1521.",
            "id": "CVE-2011-4137",
            "namespace": "nvd:cpe",
            "severity": "Medium",
            "urls": [
              "https://bugzilla.redhat.com/show_bug.cgi?id=737366",
              "https://www.djangoproject.com/weblog/2011/sep/10/127/",
              "http://openwall.com/lists/oss-security/2011/09/13/2",
              "http://openwall.com/lists/oss-security/2011/09/15/5",
              "https://www.djangoproject.com/weblog/2011/sep/09/",
              "http://openwall.com/lists/oss-security/2011/09/11/1",
              "http://secunia.com/advisories/46614",
              "http://www.debian.org/security/2011/dsa-2332",
              "https://hermes.opensuse.org/messages/14700881"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-3jqw-crqj-w8qw",
          "description": "Moderate severity vulnerability that affects django",
          "fix": {
            "state": "fixed",
            "versions": [
              "1.2.7"
            ]
          },
          "id": "GHSA-3jqw-crqj-w8qw",
          "namespace": "github:language:python",
          "severity": "Medium",
          "urls": [
            "https://github.com/advisories/GHSA-3jqw-crqj-w8qw"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:loader-utils:loader-utils:3.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:loader-utils:loader_utils:3.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:loader_utils:loader-utils:3.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:loader_utils:loader_utils:3.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:loader:loader-utils:3.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:loader:loader_utils:3.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:loader-utils:3.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:loader_utils:3.0.0:*:*:*:*:*:*:*"
          ],
          "language": "javascript",
          "licenses": [],
          "locations": [
            {
              "path": "packages/node/base/package-lock.json"
            }
          ],
          "name": "loader-utils",
          "purl": "pkg:npm/loader-utils@3.0.0",
          "type": "npm",
          "upstreams": [],
          "version": "3.0.0"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003e=3.0.0,\u003c3.2.1 (unknown)"
            },
            "matcher": "javascript-matcher",
            "searchedBy": {
              "language": "javascript",
              "namespace": "github:language:javascript"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 7.5,
                  "exploitabilityScore": 3.9,
                  "impactScore": 3.6
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2022-37603",
            "description": "A Regular expression denial of service (ReDoS) flaw was found in Function interpolateName in interpolateName.js in webpack loader-utils 2.0.0 via the url variable in interpolateName.js.",
            "id": "CVE-2022-37603",
            "namespace": "nvd:cpe",
            "severity": "High",
            "urls": [
              "https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/interpolateName.js#L38",
              "https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/interpolateName.js#L107",
              "https://github.com/webpack/loader-utils/issues/213"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-3rfm-jhwj-7488",
          "description": "loader-utils is vulnerable to Regular Expression Denial of Service (ReDoS) via url variable",
          "fix": {
            "state": "fixed",
            "versions": [
              "3.2.1"
            ]
          },
          "id": "GHSA-3rfm-jhwj-7488",
          "namespace": "github:language:javascript",
          "severity": "High",
          "urls": [
            "https://github.com/advisories/GHSA-3rfm-jhwj-7488"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:semver-regex:semver-regex:2.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:semver-regex:semver_regex:2.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:semver_regex:semver-regex:2.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:semver_regex:semver_regex:2.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:semver:semver-regex:2.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:semver:semver_regex:2.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:semver-regex:2.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:semver_regex:2.0.0:*:*:*:*:*:*:*"
          ],
          "language": "javascript",
          "licenses": [],
          "locations": [
            {
              "path": "packages/node/base/package-lock.json"
            }
          ],
          "name": "semver-regex",
          "purl": "pkg:npm/semver-regex@2.0.0",
          "type": "npm",
          "upstreams": [],
          "version": "2.0.0"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c3.1.3 (unknown)"
            },
            "matcher": "javascript-matcher",
            "searchedBy": {
              "language": "javascript",
              "namespace": "github:language:javascript"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 5,
                  "exploitabilityScore": 10,
                  "impactScore": 2.9
                },
                "vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 7.5,
                  "exploitabilityScore": 3.9,
                  "impactScore": 3.6
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2021-3795",
            "description": "semver-regex is vulnerable to Inefficient Regular Expression Complexity",
            "id": "CVE-2021-3795",
            "namespace": "nvd:cpe",
            "severity": "High",
            "urls": [
              "https://github.com/sindresorhus/semver-regex/commit/11c66245f4e1976dccc52977ed183696a21a3fd7",
              "https://huntr.dev/bounties/006624e3-35ac-448f-aab9-7b5183f30e28"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-44c6-4v22-4mhx",
          "description": "Regular Expression Denial of Service (ReDOS)",
          "fix": {
            "state": "fixed",
            "versions": [
              "3.1.3"
            ]
          },
          "id": "GHSA-44c6-4v22-4mhx",
          "namespace": "github:language:javascript",
          "severity": "High",
          "urls": [
            "https://github.com/advisories/GHSA-44c6-4v22-4mhx"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:shelljs:shelljs:0.8.4:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:shelljs:0.8.4:*:*:*:*:*:*:*"
          ],
          "language": "javascript",
          "licenses": [],
          "locations": [
            {
              "path": "packages/node/base/package-lock.json"
            }
          ],
          "name": "shelljs",
          "purl": "pkg:npm/shelljs@0.8.4",
          "type": "npm",
          "upstreams": [],
          "version": "0.8.4"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c0.8.5 (unknown)"
            },
            "matcher": "javascript-matcher",
            "searchedBy": {
              "language": "javascript",
              "namespace": "github:language:javascript"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 3.6,
                  "exploitabilityScore": 3.9,
                  "impactScore": 4.9
                },
                "vector": "AV:L/AC:L/Au:N/C:P/I:N/A:P",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 7.1,
                  "exploitabilityScore": 1.8,
                  "impactScore": 5.2
                },
                "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:H",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2022-0144",
            "description": "shelljs is vulnerable to Improper Privilege Management",
            "id": "CVE-2022-0144",
            "namespace": "nvd:cpe",
            "severity": "High",
            "urls": [
              "https://huntr.dev/bounties/50996581-c08e-4eed-a90e-c0bac082679c",
              "https://github.com/shelljs/shelljs/commit/d919d22dd6de385edaa9d90313075a77f74b338c"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-4rq4-32rv-6wp6",
          "description": "Improper Privilege Management in shelljs",
          "fix": {
            "state": "fixed",
            "versions": [
              "0.8.5"
            ]
          },
          "id": "GHSA-4rq4-32rv-6wp6",
          "namespace": "github:language:javascript",
          "severity": "High",
          "urls": [
            "https://github.com/advisories/GHSA-4rq4-32rv-6wp6"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:vm2:vm2:3.9.5:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:vm2:3.9.5:*:*:*:*:*:*:*"
          ],
          "language": "javascript",
          "licenses": [],
          "locations": [
            {
              "path": "packages/node/base/package-lock.json"
            }
          ],
          "name": "vm2",
          "purl": "pkg:npm/vm2@3.9.5",
          "type": "npm",
          "upstreams": [],
          "version": "3.9.5"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c3.9.10 (unknown)"
            },
            "matcher": "javascript-matcher",
            "searchedBy": {
              "language": "javascript",
              "namespace": "github:language:javascript"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 9.8,
                  "exploitabilityScore": 3.9,
                  "impactScore": 5.9
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2022-25893",
            "description": "The package vm2 before 3.9.10 are vulnerable to Arbitrary Code Execution due to the usage of prototype lookup for the WeakMap.prototype.set method. Exploiting this vulnerability leads to access to a host object and a sandbox compromise.",
            "id": "CVE-2022-25893",
            "namespace": "nvd:cpe",
            "severity": "Critical",
            "urls": [
              "https://github.com/patriksimek/vm2/pull/445/commits/3a9876482be487b78a90ac459675da7f83f46d69",
              "https://github.com/patriksimek/vm2/pull/445",
              "https://security.snyk.io/vuln/SNYK-JS-VM2-2990237",
              "https://github.com/patriksimek/vm2/issues/444"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-4w2j-2rg4-5mjw",
          "description": "vm2 vulnerable to Arbitrary Code Execution",
          "fix": {
            "state": "fixed",
            "versions": [
              "3.9.10"
            ]
          },
          "id": "GHSA-4w2j-2rg4-5mjw",
          "namespace": "github:language:javascript",
          "severity": "Critical",
          "urls": [
            "https://github.com/advisories/GHSA-4w2j-2rg4-5mjw"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:terser:terser:5.10.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:terser:5.10.0:*:*:*:*:*:*:*"
          ],
          "language": "javascript",
          "licenses": [],
          "locations": [
            {
              "path": "packages/node/base/package-lock.json"
            }
          ],
          "name": "terser",
          "purl": "pkg:npm/terser@5.10.0",
          "type": "npm",
          "upstreams": [],
          "version": "5.10.0"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003e=5.0.0,\u003c5.14.2 (unknown)"
            },
            "matcher": "javascript-matcher",
            "searchedBy": {
              "language": "javascript",
              "namespace": "github:language:javascript"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 7.5,
                  "exploitabilityScore": 3.9,
                  "impactScore": 3.6
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2022-25858",
            "description": "The package terser before 4.8.1, from 5.0.0 and before 5.14.2 are vulnerable to Regular Expression Denial of Service (ReDoS) due to insecure usage of regular expressions.",
            "id": "CVE-2022-25858",
            "namespace": "nvd:cpe",
            "severity": "High",
            "urls": [
              "https://github.com/terser/terser/commit/a4da7349fdc92c05094f41d33d06d8cd4e90e76b",
              "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-2949722",
              "https://github.com/terser/terser/commit/d8cc5691be980d663c29cc4d5ce67e852d597012",
              "https://snyk.io/vuln/SNYK-JS-TERSER-2806366",
              "https://github.com/terser/terser/blob/master/lib/compress/evaluate.js%23L135"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-4wf5-vphf-c2xc",
          "description": "Terser insecure use of regular expressions before v4.8.1 and v5.14.2 leads to ReDoS",
          "fix": {
            "state": "fixed",
            "versions": [
              "5.14.2"
            ]
          },
          "id": "GHSA-4wf5-vphf-c2xc",
          "namespace": "github:language:javascript",
          "severity": "High",
          "urls": [
            "https://github.com/advisories/GHSA-4wf5-vphf-c2xc"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:semver-regex:semver-regex:2.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:semver-regex:semver_regex:2.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:semver_regex:semver-regex:2.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:semver_regex:semver_regex:2.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:semver:semver-regex:2.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:semver:semver_regex:2.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:semver-regex:2.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:semver_regex:2.0.0:*:*:*:*:*:*:*"
          ],
          "language": "javascript",
          "licenses": [],
          "locations": [
            {
              "path": "packages/node/base/package-lock.json"
            }
          ],
          "name": "semver-regex",
          "purl": "pkg:npm/semver-regex@2.0.0",
          "type": "npm",
          "upstreams": [],
          "version": "2.0.0"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c3.1.4 (unknown)"
            },
            "matcher": "javascript-matcher",
            "searchedBy": {
              "language": "javascript",
              "namespace": "github:language:javascript"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 5,
                  "exploitabilityScore": 10,
                  "impactScore": 2.9
                },
                "vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 7.5,
                  "exploitabilityScore": 3.9,
                  "impactScore": 3.6
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2021-43307",
            "description": "An exponential ReDoS (Regular Expression Denial of Service) can be triggered in the semver-regex npm package, when an attacker is able to supply arbitrary input to the test() method",
            "id": "CVE-2021-43307",
            "namespace": "nvd:cpe",
            "severity": "High",
            "urls": [
              "https://research.jfrog.com/vulnerabilities/semver-regex-redos-xray-211349/"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-4x5v-gmq8-25ch",
          "description": "Regular expression denial of service in semver-regex",
          "fix": {
            "state": "fixed",
            "versions": [
              "3.1.4"
            ]
          },
          "id": "GHSA-4x5v-gmq8-25ch",
          "namespace": "github:language:javascript",
          "severity": "Low",
          "urls": [
            "https://github.com/advisories/GHSA-4x5v-gmq8-25ch"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:commons-compress:commons-compress:1.15:*:*:*:*:*:*:*",
            "cpe:2.3:a:commons-compress:commons_compress:1.15:*:*:*:*:*:*:*",
            "cpe:2.3:a:commons_compress:commons-compress:1.15:*:*:*:*:*:*:*",
            "cpe:2.3:a:commons_compress:commons_compress:1.15:*:*:*:*:*:*:*",
            "cpe:2.3:a:commons:commons-compress:1.15:*:*:*:*:*:*:*",
            "cpe:2.3:a:commons:commons_compress:1.15:*:*:*:*:*:*:*"
          ],
          "language": "java",
          "licenses": [],
          "locations": [
            {
              "path": "packages/pom.xml"
            }
          ],
          "metadata": {
            "archiveDigests": null,
            "manifestName": "",
            "pomArtifactID": "",
            "pomGroupID": "",
            "virtualPath": ""
          },
          "metadataType": "JavaMetadata",
          "name": "commons-compress",
          "purl": "pkg:maven/org.apache.commons/commons-compress@1.15",
          "type": "java-archive",
          "upstreams": [],
          "version": "1.15"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003e=1.15,\u003c1.19 (unknown)"
            },
            "matcher": "java-matcher",
            "searchedBy": {
              "language": "java",
              "namespace": "github:language:java"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 5,
                  "exploitabilityScore": 10,
                  "impactScore": 2.9
                },
                "vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 7.5,
                  "exploitabilityScore": 3.9,
                  "impactScore": 3.6
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2019-12402",
            "description": "The file name encoding algorithm used internally in Apache Commons Compress 1.15 to 1.18 can get into an infinite loop when faced with specially crafted inputs. This can lead to a denial of service attack if an attacker can choose the file names inside of an archive created by Compress.",
            "id": "CVE-2019-12402",
            "namespace": "nvd:cpe",
            "severity": "High",
            "urls": [
              "https://lists.apache.org/thread.html/308cc15f1f1dc53e97046fddbac240e6cd16de89a2746cf257be7f5b@%3Cdev.commons.apache.org%3E",
              "https://lists.apache.org/thread.html/54cc4e9fa6b24520135f6fa4724dfb3465bc14703c7dc7e52353a0ea@%3Ccommits.creadur.apache.org%3E",
              "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/QLJIK2AUOZOWXR3S5XXBUNMOF3RTHTI7/",
              "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WZB3GB7YXIOUKIOQ27VTIP6KKGJJ3CKL/",
              "https://lists.apache.org/thread.html/9317fd092b257a0815434b116a8af8daea6e920b6673f4fd5583d5fe@%3Ccommits.druid.apache.org%3E",
              "https://lists.apache.org/thread.html/r5caf4fcb69d2749225391e61db7216282955204849ba94f83afe011f@%3Cissues.flink.apache.org%3E",
              "https://lists.apache.org/thread.html/rcc35ab6be300365de5ff9587e0479d10d7d7c79070921837e3693162@%3Cissues.flink.apache.org%3E",
              "https://lists.apache.org/thread.html/re13bd219dd4b651134f6357f12bd07a0344eea7518c577bbdd185265@%3Cissues.flink.apache.org%3E",
              "https://lists.apache.org/thread.html/r5103b1c9242c0f812ac96e524344144402cbff9b6e078d1557bc7b1e@%3Cissues.flink.apache.org%3E",
              "https://lists.apache.org/thread.html/r05cf37c1e1e662e968cfece1102fcd50fe207181fdbf2c30aadfafd3@%3Cissues.flink.apache.org%3E",
              "https://lists.apache.org/thread.html/r590c15cebee9b8e757e2f738127a9a71e48ede647a3044c504e050a4@%3Cissues.flink.apache.org%3E",
              "https://lists.apache.org/thread.html/rdebc1830d6c09c11d5a4804ca26769dbd292d17d361c61dea50915f0@%3Cissues.flink.apache.org%3E",
              "https://lists.apache.org/thread.html/rd3f99d732baed459b425fb0a9e9e14f7843c9459b12037e4a9d753b5@%3Cissues.flink.apache.org%3E",
              "https://lists.apache.org/thread.html/r21d64797914001119d2fc766b88c6da181dc2308d20f14e7a7f46117@%3Cissues.flink.apache.org%3E",
              "https://lists.apache.org/thread.html/r233267e24519bacd0f9fb9f61a1287cb9f4bcb6e75d83f34f405c521@%3Cissues.flink.apache.org%3E",
              "https://lists.apache.org/thread.html/r25422df9ad22fec56d9eeca3ab8bd6d66365e9f6bfe311b64730edf5@%3Cissues.flink.apache.org%3E",
              "https://lists.apache.org/thread.html/r972f82d821b805d04602976a9736c01b6bf218cfe0c3f48b472db488@%3Cissues.flink.apache.org%3E",
              "https://lists.apache.org/thread.html/r4363c994c8bca033569a98da9218cc0c62bb695c1e47a98e5084e5a0@%3Cissues.flink.apache.org%3E",
              "https://lists.apache.org/thread.html/r204ba2a9ea750f38d789d2bb429cc0925ad6133deea7cbc3001d96b5@%3Csolr-user.lucene.apache.org%3E",
              "https://lists.apache.org/thread.html/rf5230a049d989dbfdd404b4320a265dceeeba459a4d04ec21873bd55@%3Csolr-user.lucene.apache.org%3E",
              "https://lists.apache.org/thread.html/r7af60fbd8b2350d49d14e53a3ab2801998b9d1af2d6fcac60b060a53@%3Cdev.brooklyn.apache.org%3E",
              "https://www.oracle.com/security-alerts/cpuapr2020.html",
              "https://www.oracle.com/security-alerts/cpujul2020.html",
              "https://www.oracle.com/security-alerts/cpuoct2020.html",
              "https://www.oracle.com/security-alerts/cpujan2021.html",
              "https://www.oracle.com/security-alerts/cpuApr2021.html",
              "https://www.oracle.com//security-alerts/cpujul2021.html",
              "https://www.oracle.com/security-alerts/cpuoct2021.html",
              "https://www.oracle.com/security-alerts/cpuapr2022.html"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-53x6-4x5p-rrvv",
          "description": "Denial of Service in Apache Commons Compress",
          "fix": {
            "state": "fixed",
            "versions": [
              "1.19"
            ]
          },
          "id": "GHSA-53x6-4x5p-rrvv",
          "namespace": "github:language:java",
          "severity": "High",
          "urls": [
            "https://github.com/advisories/GHSA-53x6-4x5p-rrvv"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:jackson-databind:jackson-databind:2.12.4:*:*:*:*:*:*:*",
            "cpe:2.3:a:jackson-databind:jackson_databind:2.12.4:*:*:*:*:*:*:*",
            "cpe:2.3:a:jackson_databind:jackson-databind:2.12.4:*:*:*:*:*:*:*",
            "cpe:2.3:a:jackson_databind:jackson_databind:2.12.4:*:*:*:*:*:*:*",
            "cpe:2.3:a:jackson:jackson-databind:2.12.4:*:*:*:*:*:*:*",
            "cpe:2.3:a:jackson:jackson_databind:2.12.4:*:*:*:*:*:*:*"
          ],
          "language": "java",
          "licenses": [],
          "locations": [
            {
              "path": "packages/sub/pom.xml"
            }
          ],
          "metadata": {
            "archiveDigests": null,
            "manifestName": "",
            "pomArtifactID": "",
            "pomGroupID": "",
            "virtualPath": ""
          },
          "metadataType": "JavaMetadata",
          "name": "jackson-databind",
          "purl": "pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.12.4",
          "type": "java-archive",
          "upstreams": [],
          "version": "2.12.4"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c=2.12.6.0 (unknown)"
            },
            "matcher": "java-matcher",
            "searchedBy": {
              "language": "java",
              "namespace": "github:language:java"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 5,
                  "exploitabilityScore": 10,
                  "impactScore": 2.9
                },
                "vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 7.5,
                  "exploitabilityScore": 3.9,
                  "impactScore": 3.6
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2020-36518",
            "description": "jackson-databind before 2.13.0 allows a Java StackOverflow exception and denial of service via a large depth of nested objects.",
            "id": "CVE-2020-36518",
            "namespace": "nvd:cpe",
            "severity": "High",
            "urls": [
              "https://github.com/FasterXML/jackson-databind/issues/2816",
              "https://www.oracle.com/security-alerts/cpuapr2022.html",
              "https://lists.debian.org/debian-lts-announce/2022/05/msg00001.html",
              "https://security.netapp.com/advisory/ntap-20220506-0004/",
              "https://www.oracle.com/security-alerts/cpujul2022.html",
              "https://www.debian.org/security/2022/dsa-5283",
              "https://lists.debian.org/debian-lts-announce/2022/11/msg00035.html"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-57j2-w4cx-62h2",
          "description": "Deeply nested json in jackson-databind",
          "fix": {
            "state": "fixed",
            "versions": [
              "2.12.6.1"
            ]
          },
          "id": "GHSA-57j2-w4cx-62h2",
          "namespace": "github:language:java",
          "severity": "High",
          "urls": [
            "https://github.com/advisories/GHSA-57j2-w4cx-62h2"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:xmldom:xmldom:0.5.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:xmldom:0.5.0:*:*:*:*:*:*:*"
          ],
          "language": "javascript",
          "licenses": [
            ""
          ],
          "locations": [
            {
              "path": "packages/node/twistcli_test/package-lock.json"
            }
          ],
          "name": "xmldom",
          "purl": "pkg:npm/xmldom@0.5.0",
          "type": "npm",
          "upstreams": [],
          "version": "0.5.0"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c0.7.0 (unknown)"
            },
            "matcher": "javascript-matcher",
            "searchedBy": {
              "language": "javascript",
              "namespace": "github:language:javascript"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 5,
                  "exploitabilityScore": 10,
                  "impactScore": 2.9
                },
                "vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 5.3,
                  "exploitabilityScore": 3.9,
                  "impactScore": 1.4
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2021-32796",
            "description": "xmldom is an open source pure JavaScript W3C standard-based (XML DOM Level 2 Core) DOMParser and XMLSerializer module. xmldom versions 0.6.0 and older do not correctly escape special characters when serializing elements removed from their ancestor. This may lead to unexpected syntactic changes during XML processing in some downstream applications. This issue has been resolved in version 0.7.0. As a workaround downstream applications can validate the input and reject the maliciously crafted documents.",
            "id": "CVE-2021-32796",
            "namespace": "nvd:cpe",
            "severity": "Medium",
            "urls": [
              "https://mattermost.com/blog/coordinated-disclosure-go-xml-vulnerabilities/",
              "https://github.com/xmldom/xmldom/security/advisories/GHSA-5fg8-2547-mr8q",
              "https://github.com/xmldom/xmldom/commit/7b4b743917a892d407356e055b296dcd6d107e8b"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-5fg8-2547-mr8q",
          "description": "Misinterpretation of malicious XML input",
          "fix": {
            "state": "fixed",
            "versions": [
              "0.7.0"
            ]
          },
          "id": "GHSA-5fg8-2547-mr8q",
          "namespace": "github:language:javascript",
          "severity": "Medium",
          "urls": [
            "https://github.com/advisories/GHSA-5fg8-2547-mr8q"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:xmldom:xmldom:0.5.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:xmldom:0.5.0:*:*:*:*:*:*:*"
          ],
          "language": "javascript",
          "licenses": [],
          "locations": [
            {
              "path": "packages/node/base/package-lock.json"
            }
          ],
          "name": "xmldom",
          "purl": "pkg:npm/xmldom@0.5.0",
          "type": "npm",
          "upstreams": [],
          "version": "0.5.0"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c0.7.0 (unknown)"
            },
            "matcher": "javascript-matcher",
            "searchedBy": {
              "language": "javascript",
              "namespace": "github:language:javascript"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 5,
                  "exploitabilityScore": 10,
                  "impactScore": 2.9
                },
                "vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 5.3,
                  "exploitabilityScore": 3.9,
                  "impactScore": 1.4
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2021-32796",
            "description": "xmldom is an open source pure JavaScript W3C standard-based (XML DOM Level 2 Core) DOMParser and XMLSerializer module. xmldom versions 0.6.0 and older do not correctly escape special characters when serializing elements removed from their ancestor. This may lead to unexpected syntactic changes during XML processing in some downstream applications. This issue has been resolved in version 0.7.0. As a workaround downstream applications can validate the input and reject the maliciously crafted documents.",
            "id": "CVE-2021-32796",
            "namespace": "nvd:cpe",
            "severity": "Medium",
            "urls": [
              "https://mattermost.com/blog/coordinated-disclosure-go-xml-vulnerabilities/",
              "https://github.com/xmldom/xmldom/security/advisories/GHSA-5fg8-2547-mr8q",
              "https://github.com/xmldom/xmldom/commit/7b4b743917a892d407356e055b296dcd6d107e8b"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-5fg8-2547-mr8q",
          "description": "Misinterpretation of malicious XML input",
          "fix": {
            "state": "fixed",
            "versions": [
              "0.7.0"
            ]
          },
          "id": "GHSA-5fg8-2547-mr8q",
          "namespace": "github:language:javascript",
          "severity": "Medium",
          "urls": [
            "https://github.com/advisories/GHSA-5fg8-2547-mr8q"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:python-django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:django:1.2:*:*:*:*:*:*:*"
          ],
          "language": "python",
          "licenses": [],
          "locations": [
            {
              "path": "packages/requirements.txt"
            }
          ],
          "name": "django",
          "purl": "pkg:pypi/django@1.2",
          "type": "python",
          "upstreams": [],
          "version": "1.2"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003e=1.2.0,\u003c1.2.5 (python)"
            },
            "matcher": "python-matcher",
            "searchedBy": {
              "language": "python",
              "namespace": "github:language:python"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 6.8,
                  "exploitabilityScore": 8.6,
                  "impactScore": 6.4
                },
                "vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
                "vendorMetadata": {},
                "version": "2.0"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2011-0696",
            "description": "Django 1.1.x before 1.1.4 and 1.2.x before 1.2.5 does not properly validate HTTP requests that contain an X-Requested-With header, which makes it easier for remote attackers to conduct cross-site request forgery (CSRF) attacks via forged AJAX requests that leverage a \"combination of browser plugins and redirects,\" a related issue to CVE-2011-0447.",
            "id": "CVE-2011-0696",
            "namespace": "nvd:cpe",
            "severity": "Medium",
            "urls": [
              "https://bugzilla.redhat.com/show_bug.cgi?id=676357",
              "http://openwall.com/lists/oss-security/2011/02/09/6",
              "http://www.djangoproject.com/weblog/2011/feb/08/security/",
              "http://lists.fedoraproject.org/pipermail/package-announce/2011-February/054207.html",
              "http://secunia.com/advisories/43297",
              "http://www.vupen.com/english/advisories/2011/0439",
              "http://secunia.com/advisories/43230",
              "http://www.ubuntu.com/usn/USN-1066-1",
              "http://www.debian.org/security/2011/dsa-2163",
              "http://secunia.com/advisories/43382",
              "http://www.vupen.com/english/advisories/2011/0372",
              "http://www.vupen.com/english/advisories/2011/0388",
              "http://lists.fedoraproject.org/pipermail/package-announce/2011-February/054208.html",
              "http://www.securityfocus.com/bid/46296",
              "http://www.mandriva.com/security/advisories?name=MDVSA-2011:031",
              "http://www.vupen.com/english/advisories/2011/0429",
              "http://secunia.com/advisories/43426",
              "http://www.vupen.com/english/advisories/2011/0441"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-5j2h-h5hg-3wf8",
          "description": "Moderate severity vulnerability that affects django",
          "fix": {
            "state": "fixed",
            "versions": [
              "1.2.5"
            ]
          },
          "id": "GHSA-5j2h-h5hg-3wf8",
          "namespace": "github:language:python",
          "severity": "Medium",
          "urls": [
            "https://github.com/advisories/GHSA-5j2h-h5hg-3wf8"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:python-django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:django:1.2:*:*:*:*:*:*:*"
          ],
          "language": "python",
          "licenses": [],
          "locations": [
            {
              "path": "packages/sub/.hidden/requirements.txt"
            }
          ],
          "name": "django",
          "purl": "pkg:pypi/django@1.2",
          "type": "python",
          "upstreams": [],
          "version": "1.2"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003e=1.2.0,\u003c1.2.5 (python)"
            },
            "matcher": "python-matcher",
            "searchedBy": {
              "language": "python",
              "namespace": "github:language:python"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 6.8,
                  "exploitabilityScore": 8.6,
                  "impactScore": 6.4
                },
                "vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
                "vendorMetadata": {},
                "version": "2.0"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2011-0696",
            "description": "Django 1.1.x before 1.1.4 and 1.2.x before 1.2.5 does not properly validate HTTP requests that contain an X-Requested-With header, which makes it easier for remote attackers to conduct cross-site request forgery (CSRF) attacks via forged AJAX requests that leverage a \"combination of browser plugins and redirects,\" a related issue to CVE-2011-0447.",
            "id": "CVE-2011-0696",
            "namespace": "nvd:cpe",
            "severity": "Medium",
            "urls": [
              "https://bugzilla.redhat.com/show_bug.cgi?id=676357",
              "http://openwall.com/lists/oss-security/2011/02/09/6",
              "http://www.djangoproject.com/weblog/2011/feb/08/security/",
              "http://lists.fedoraproject.org/pipermail/package-announce/2011-February/054207.html",
              "http://secunia.com/advisories/43297",
              "http://www.vupen.com/english/advisories/2011/0439",
              "http://secunia.com/advisories/43230",
              "http://www.ubuntu.com/usn/USN-1066-1",
              "http://www.debian.org/security/2011/dsa-2163",
              "http://secunia.com/advisories/43382",
              "http://www.vupen.com/english/advisories/2011/0372",
              "http://www.vupen.com/english/advisories/2011/0388",
              "http://lists.fedoraproject.org/pipermail/package-announce/2011-February/054208.html",
              "http://www.securityfocus.com/bid/46296",
              "http://www.mandriva.com/security/advisories?name=MDVSA-2011:031",
              "http://www.vupen.com/english/advisories/2011/0429",
              "http://secunia.com/advisories/43426",
              "http://www.vupen.com/english/advisories/2011/0441"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-5j2h-h5hg-3wf8",
          "description": "Moderate severity vulnerability that affects django",
          "fix": {
            "state": "fixed",
            "versions": [
              "1.2.5"
            ]
          },
          "id": "GHSA-5j2h-h5hg-3wf8",
          "namespace": "github:language:python",
          "severity": "Medium",
          "urls": [
            "https://github.com/advisories/GHSA-5j2h-h5hg-3wf8"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:node-forge:node-forge:0.10.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:node-forge:node_forge:0.10.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:node_forge:node-forge:0.10.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:node_forge:node_forge:0.10.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:node:node-forge:0.10.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:node:node_forge:0.10.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:node-forge:0.10.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:node_forge:0.10.0:*:*:*:*:*:*:*"
          ],
          "language": "javascript",
          "licenses": [],
          "locations": [
            {
              "path": "packages/node/base/package-lock.json"
            }
          ],
          "name": "node-forge",
          "purl": "pkg:npm/node-forge@0.10.0",
          "type": "npm",
          "upstreams": [],
          "version": "0.10.0"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c1.0.0 (unknown)"
            },
            "matcher": "javascript-matcher",
            "searchedBy": {
              "language": "javascript",
              "namespace": "github:language:javascript"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-5rrq-pxf6-6jx5",
          "description": "Prototype Pollution in node-forge debug API.",
          "fix": {
            "state": "fixed",
            "versions": [
              "1.0.0"
            ]
          },
          "id": "GHSA-5rrq-pxf6-6jx5",
          "namespace": "github:language:javascript",
          "severity": "Low",
          "urls": [
            "https://github.com/advisories/GHSA-5rrq-pxf6-6jx5"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:marked:marked:0.7.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:marked:0.7.0:*:*:*:*:*:*:*"
          ],
          "language": "javascript",
          "licenses": [],
          "locations": [
            {
              "path": "packages/node/base/package-lock.json"
            }
          ],
          "name": "marked",
          "purl": "pkg:npm/marked@0.7.0",
          "type": "npm",
          "upstreams": [],
          "version": "0.7.0"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c4.0.10 (unknown)"
            },
            "matcher": "javascript-matcher",
            "searchedBy": {
              "language": "javascript",
              "namespace": "github:language:javascript"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 5,
                  "exploitabilityScore": 10,
                  "impactScore": 2.9
                },
                "vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 7.5,
                  "exploitabilityScore": 3.9,
                  "impactScore": 3.6
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2022-21681",
            "description": "Marked is a markdown parser and compiler. Prior to version 4.0.10, the regular expression `inline.reflinkSearch` may cause catastrophic backtracking against some strings and lead to a denial of service (DoS). Anyone who runs untrusted markdown through a vulnerable version of marked and does not use a worker with a time limit may be affected. This issue is patched in version 4.0.10. As a workaround, avoid running untrusted markdown through marked or run marked on a worker thread and set a reasonable time limit to prevent draining resources.",
            "id": "CVE-2022-21681",
            "namespace": "nvd:cpe",
            "severity": "High",
            "urls": [
              "https://github.com/markedjs/marked/security/advisories/GHSA-5v2h-r2cx-5xgj",
              "https://github.com/markedjs/marked/commit/8f806573a3f6c6b7a39b8cdb66ab5ebb8d55a5f5",
              "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/AIXDMC3CSHYW3YWVSQOXAWLUYQHAO5UX/"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-5v2h-r2cx-5xgj",
          "description": "Inefficient Regular Expression Complexity in marked",
          "fix": {
            "state": "fixed",
            "versions": [
              "4.0.10"
            ]
          },
          "id": "GHSA-5v2h-r2cx-5xgj",
          "namespace": "github:language:javascript",
          "severity": "High",
          "urls": [
            "https://github.com/advisories/GHSA-5v2h-r2cx-5xgj"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:shelljs:shelljs:0.8.4:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:shelljs:0.8.4:*:*:*:*:*:*:*"
          ],
          "language": "javascript",
          "licenses": [],
          "locations": [
            {
              "path": "packages/node/base/package-lock.json"
            }
          ],
          "name": "shelljs",
          "purl": "pkg:npm/shelljs@0.8.4",
          "type": "npm",
          "upstreams": [],
          "version": "0.8.4"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c0.8.5 (unknown)"
            },
            "matcher": "javascript-matcher",
            "searchedBy": {
              "language": "javascript",
              "namespace": "github:language:javascript"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-64g7-mvw6-v9qj",
          "description": "Improper Privilege Management in shelljs",
          "fix": {
            "state": "fixed",
            "versions": [
              "0.8.5"
            ]
          },
          "id": "GHSA-64g7-mvw6-v9qj",
          "namespace": "github:language:javascript",
          "severity": "Medium",
          "urls": [
            "https://github.com/advisories/GHSA-64g7-mvw6-v9qj"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:python-django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:django:1.2:*:*:*:*:*:*:*"
          ],
          "language": "python",
          "licenses": [],
          "locations": [
            {
              "path": "packages/sub/.hidden/requirements.txt"
            }
          ],
          "name": "django",
          "purl": "pkg:pypi/django@1.2",
          "type": "python",
          "upstreams": [],
          "version": "1.2"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c2.2.24 (python)"
            },
            "matcher": "python-matcher",
            "searchedBy": {
              "language": "python",
              "namespace": "github:language:python"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 4,
                  "exploitabilityScore": 8,
                  "impactScore": 2.9
                },
                "vector": "AV:N/AC:L/Au:S/C:P/I:N/A:N",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 4.9,
                  "exploitabilityScore": 1.2,
                  "impactScore": 3.6
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2021-33203",
            "description": "Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",
            "id": "CVE-2021-33203",
            "namespace": "nvd:cpe",
            "severity": "Medium",
            "urls": [
              "https://docs.djangoproject.com/en/3.2/releases/security/",
              "https://www.djangoproject.com/weblog/2021/jun/02/security-releases/",
              "https://groups.google.com/forum/#!forum/django-announce",
              "https://security.netapp.com/advisory/ntap-20210727-0004/",
              "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/B4SQG2EAF4WCI2SLRL6XRDJ3RPK3ZRDV/"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-68w8-qjq3-2gfm",
          "description": "Path Traversal in Django",
          "fix": {
            "state": "fixed",
            "versions": [
              "2.2.24"
            ]
          },
          "id": "GHSA-68w8-qjq3-2gfm",
          "namespace": "github:language:python",
          "severity": "Medium",
          "urls": [
            "https://github.com/advisories/GHSA-68w8-qjq3-2gfm"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:python-django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:django:1.2:*:*:*:*:*:*:*"
          ],
          "language": "python",
          "licenses": [],
          "locations": [
            {
              "path": "packages/requirements.txt"
            }
          ],
          "name": "django",
          "purl": "pkg:pypi/django@1.2",
          "type": "python",
          "upstreams": [],
          "version": "1.2"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c2.2.24 (python)"
            },
            "matcher": "python-matcher",
            "searchedBy": {
              "language": "python",
              "namespace": "github:language:python"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 4,
                  "exploitabilityScore": 8,
                  "impactScore": 2.9
                },
                "vector": "AV:N/AC:L/Au:S/C:P/I:N/A:N",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 4.9,
                  "exploitabilityScore": 1.2,
                  "impactScore": 3.6
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2021-33203",
            "description": "Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",
            "id": "CVE-2021-33203",
            "namespace": "nvd:cpe",
            "severity": "Medium",
            "urls": [
              "https://docs.djangoproject.com/en/3.2/releases/security/",
              "https://www.djangoproject.com/weblog/2021/jun/02/security-releases/",
              "https://groups.google.com/forum/#!forum/django-announce",
              "https://security.netapp.com/advisory/ntap-20210727-0004/",
              "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/B4SQG2EAF4WCI2SLRL6XRDJ3RPK3ZRDV/"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-68w8-qjq3-2gfm",
          "description": "Path Traversal in Django",
          "fix": {
            "state": "fixed",
            "versions": [
              "2.2.24"
            ]
          },
          "id": "GHSA-68w8-qjq3-2gfm",
          "namespace": "github:language:python",
          "severity": "Medium",
          "urls": [
            "https://github.com/advisories/GHSA-68w8-qjq3-2gfm"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:springsource-spring-framework:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource_spring_framework:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource-spring:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource_spring:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:pivotal_software:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring-framework:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring_framework:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource-spring-framework:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource_spring_framework:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring-core:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring_core:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource-spring-framework:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource-spring-framework:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource_spring_framework:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource_spring_framework:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource-spring:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource_spring:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:vmware:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:pivotal_software:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring-framework:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring_framework:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource-spring:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource-spring:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource_spring:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource_spring:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:pivotal_software:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:pivotal_software:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring-core:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring-framework:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring-framework:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring_core:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring_framework:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring_framework:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring-core:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring-core:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring_core:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring_core:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:vmware:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:vmware:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:vmware:spring_core:5.3.0:*:*:*:*:*:*:*"
          ],
          "language": "java",
          "licenses": [],
          "locations": [
            {
              "path": "packages/sub/pom.xml"
            }
          ],
          "metadata": {
            "archiveDigests": null,
            "manifestName": "",
            "pomArtifactID": "",
            "pomGroupID": "",
            "virtualPath": ""
          },
          "metadataType": "JavaMetadata",
          "name": "spring-core",
          "purl": "pkg:maven/org.springframework/spring-core@5.3.0",
          "type": "java-archive",
          "upstreams": [],
          "version": "5.3.0"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003e=5.3.0,\u003c5.3.14 (unknown)"
            },
            "matcher": "java-matcher",
            "searchedBy": {
              "language": "java",
              "namespace": "github:language:java"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 4,
                  "exploitabilityScore": 8,
                  "impactScore": 2.9
                },
                "vector": "AV:N/AC:L/Au:S/C:N/I:P/A:N",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 4.3,
                  "exploitabilityScore": 2.8,
                  "impactScore": 1.4
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:N",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2021-22060",
            "description": "In Spring Framework versions 5.3.0 - 5.3.13, 5.2.0 - 5.2.18, and older unsupported versions, it is possible for a user to provide malicious input to cause the insertion of additional log entries. This is a follow-up to CVE-2021-22096 that protects against additional types of input and in more places of the Spring Framework codebase.",
            "id": "CVE-2021-22060",
            "namespace": "nvd:cpe",
            "severity": "Medium",
            "urls": [
              "https://tanzu.vmware.com/security/cve-2021-22060",
              "https://www.oracle.com/security-alerts/cpuapr2022.html"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-6gf2-pvqw-37ph",
          "description": "Log entry injection in Spring Framework",
          "fix": {
            "state": "fixed",
            "versions": [
              "5.3.14"
            ]
          },
          "id": "GHSA-6gf2-pvqw-37ph",
          "namespace": "github:language:java",
          "severity": "Medium",
          "urls": [
            "https://github.com/advisories/GHSA-6gf2-pvqw-37ph"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:vm2:vm2:3.9.5:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:vm2:3.9.5:*:*:*:*:*:*:*"
          ],
          "language": "javascript",
          "licenses": [],
          "locations": [
            {
              "path": "packages/node/base/package-lock.json"
            }
          ],
          "name": "vm2",
          "purl": "pkg:npm/vm2@3.9.5",
          "type": "npm",
          "upstreams": [],
          "version": "3.9.5"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c3.9.6 (unknown)"
            },
            "matcher": "javascript-matcher",
            "searchedBy": {
              "language": "javascript",
              "namespace": "github:language:javascript"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 10,
                  "exploitabilityScore": 10,
                  "impactScore": 10
                },
                "vector": "AV:N/AC:L/Au:N/C:C/I:C/A:C",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 9.8,
                  "exploitabilityScore": 3.9,
                  "impactScore": 5.9
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2021-23555",
            "description": "The package vm2 before 3.9.6 are vulnerable to Sandbox Bypass via direct access to host error objects generated by node internals during generation of a stacktraces, which can lead to execution of arbitrary code on the host machine.",
            "id": "CVE-2021-23555",
            "namespace": "nvd:cpe",
            "severity": "Critical",
            "urls": [
              "https://snyk.io/vuln/SNYK-JS-VM2-2309905",
              "https://github.com/patriksimek/vm2/commit/532120d5cdec7da8225fc6242e154ebabc63fe4d"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-6pw2-5hjv-9pf7",
          "description": "Sandbox bypass in vm2",
          "fix": {
            "state": "fixed",
            "versions": [
              "3.9.6"
            ]
          },
          "id": "GHSA-6pw2-5hjv-9pf7",
          "namespace": "github:language:javascript",
          "severity": "Critical",
          "urls": [
            "https://github.com/advisories/GHSA-6pw2-5hjv-9pf7"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:follow-redirects:follow-redirects:1.14.6:*:*:*:*:*:*:*",
            "cpe:2.3:a:follow-redirects:follow_redirects:1.14.6:*:*:*:*:*:*:*",
            "cpe:2.3:a:follow_redirects:follow-redirects:1.14.6:*:*:*:*:*:*:*",
            "cpe:2.3:a:follow_redirects:follow_redirects:1.14.6:*:*:*:*:*:*:*",
            "cpe:2.3:a:follow:follow-redirects:1.14.6:*:*:*:*:*:*:*",
            "cpe:2.3:a:follow:follow_redirects:1.14.6:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:follow-redirects:1.14.6:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:follow_redirects:1.14.6:*:*:*:*:*:*:*"
          ],
          "language": "javascript",
          "licenses": [],
          "locations": [
            {
              "path": "packages/node/base/package-lock.json"
            }
          ],
          "name": "follow-redirects",
          "purl": "pkg:npm/follow-redirects@1.14.6",
          "type": "npm",
          "upstreams": [],
          "version": "1.14.6"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c1.14.7 (unknown)"
            },
            "matcher": "javascript-matcher",
            "searchedBy": {
              "language": "javascript",
              "namespace": "github:language:javascript"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 4.3,
                  "exploitabilityScore": 8.6,
                  "impactScore": 2.9
                },
                "vector": "AV:N/AC:M/Au:N/C:P/I:N/A:N",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 6.5,
                  "exploitabilityScore": 2.8,
                  "impactScore": 3.6
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2022-0155",
            "description": "follow-redirects is vulnerable to Exposure of Private Personal Information to an Unauthorized Actor",
            "id": "CVE-2022-0155",
            "namespace": "nvd:cpe",
            "severity": "Medium",
            "urls": [
              "https://huntr.dev/bounties/fc524e4b-ebb6-427d-ab67-a64181020406",
              "https://github.com/follow-redirects/follow-redirects/commit/8b347cbcef7c7b72a6e9be20f5710c17d6163c22",
              "https://cert-portal.siemens.com/productcert/pdf/ssa-637483.pdf"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-74fj-2j2h-c42q",
          "description": "Exposure of sensitive information in follow-redirects",
          "fix": {
            "state": "fixed",
            "versions": [
              "1.14.7"
            ]
          },
          "id": "GHSA-74fj-2j2h-c42q",
          "namespace": "github:language:javascript",
          "severity": "High",
          "urls": [
            "https://github.com/advisories/GHSA-74fj-2j2h-c42q"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:materialize-css:materialize-css:1.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:materialize-css:materialize_css:1.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:materialize_css:materialize-css:1.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:materialize_css:materialize_css:1.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:materialize:materialize-css:1.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:materialize:materialize_css:1.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:materialize-css:1.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:materialize_css:1.0.0:*:*:*:*:*:*:*"
          ],
          "language": "javascript",
          "licenses": [],
          "locations": [
            {
              "path": "packages/node/base/package-lock.json"
            }
          ],
          "name": "materialize-css",
          "purl": "pkg:npm/materialize-css@1.0.0",
          "type": "npm",
          "upstreams": [],
          "version": "1.0.0"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c=1.0.0 (unknown)"
            },
            "matcher": "javascript-matcher",
            "searchedBy": {
              "language": "javascript",
              "namespace": "github:language:javascript"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 4.3,
                  "exploitabilityScore": 8.6,
                  "impactScore": 2.9
                },
                "vector": "AV:N/AC:M/Au:N/C:N/I:P/A:N",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 6.1,
                  "exploitabilityScore": 2.8,
                  "impactScore": 2.7
                },
                "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
                "vendorMetadata": {},
                "version": "3.0"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2019-11003",
            "description": "In Materialize through 1.0.0, XSS is possible via the Autocomplete feature.",
            "id": "CVE-2019-11003",
            "namespace": "nvd:cpe",
            "severity": "Medium",
            "urls": [
              "https://github.com/Dogfalo/materialize/issues/6286"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-7752-f4gf-94gc",
          "description": "Cross-Site Scripting in materialize-css",
          "fix": {
            "state": "not-fixed",
            "versions": []
          },
          "id": "GHSA-7752-f4gf-94gc",
          "namespace": "github:language:javascript",
          "severity": "Medium",
          "urls": [
            "https://github.com/advisories/GHSA-7752-f4gf-94gc"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:materialize-css:materialize-css:1.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:materialize-css:materialize_css:1.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:materialize_css:materialize-css:1.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:materialize_css:materialize_css:1.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:materialize:materialize-css:1.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:materialize:materialize_css:1.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:materialize-css:1.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:materialize_css:1.0.0:*:*:*:*:*:*:*"
          ],
          "language": "javascript",
          "licenses": [
            ""
          ],
          "locations": [
            {
              "path": "packages/node/twistcli_test/package-lock.json"
            }
          ],
          "name": "materialize-css",
          "purl": "pkg:npm/materialize-css@1.0.0",
          "type": "npm",
          "upstreams": [],
          "version": "1.0.0"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c=1.0.0 (unknown)"
            },
            "matcher": "javascript-matcher",
            "searchedBy": {
              "language": "javascript",
              "namespace": "github:language:javascript"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 4.3,
                  "exploitabilityScore": 8.6,
                  "impactScore": 2.9
                },
                "vector": "AV:N/AC:M/Au:N/C:N/I:P/A:N",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 6.1,
                  "exploitabilityScore": 2.8,
                  "impactScore": 2.7
                },
                "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
                "vendorMetadata": {},
                "version": "3.0"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2019-11003",
            "description": "In Materialize through 1.0.0, XSS is possible via the Autocomplete feature.",
            "id": "CVE-2019-11003",
            "namespace": "nvd:cpe",
            "severity": "Medium",
            "urls": [
              "https://github.com/Dogfalo/materialize/issues/6286"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-7752-f4gf-94gc",
          "description": "Cross-Site Scripting in materialize-css",
          "fix": {
            "state": "not-fixed",
            "versions": []
          },
          "id": "GHSA-7752-f4gf-94gc",
          "namespace": "github:language:javascript",
          "severity": "Medium",
          "urls": [
            "https://github.com/advisories/GHSA-7752-f4gf-94gc"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:python-django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:django:1.2:*:*:*:*:*:*:*"
          ],
          "language": "python",
          "licenses": [],
          "locations": [
            {
              "path": "packages/requirements.txt"
            }
          ],
          "name": "django",
          "purl": "pkg:pypi/django@1.2",
          "type": "python",
          "upstreams": [],
          "version": "1.2"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003e=1.2.0,\u003c1.2.5 (python)"
            },
            "matcher": "python-matcher",
            "searchedBy": {
              "language": "python",
              "namespace": "github:language:python"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 7.5,
                  "exploitabilityScore": 10,
                  "impactScore": 6.4
                },
                "vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P",
                "vendorMetadata": {},
                "version": "2.0"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2011-0698",
            "description": "Directory traversal vulnerability in Django 1.1.x before 1.1.4 and 1.2.x before 1.2.5 on Windows might allow remote attackers to read or execute files via a / (slash) character in a key in a session cookie, related to session replays.",
            "id": "CVE-2011-0698",
            "namespace": "nvd:cpe",
            "severity": "High",
            "urls": [
              "http://www.djangoproject.com/weblog/2011/feb/08/security/",
              "http://openwall.com/lists/oss-security/2011/02/09/6",
              "http://www.securityfocus.com/bid/46296",
              "http://secunia.com/advisories/43230",
              "http://www.vupen.com/english/advisories/2011/0372",
              "http://www.mandriva.com/security/advisories?name=MDVSA-2011:031",
              "http://www.vupen.com/english/advisories/2011/0439"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-7g9h-c88w-r7h2",
          "description": "High severity vulnerability that affects django",
          "fix": {
            "state": "fixed",
            "versions": [
              "1.2.5"
            ]
          },
          "id": "GHSA-7g9h-c88w-r7h2",
          "namespace": "github:language:python",
          "severity": "High",
          "urls": [
            "https://github.com/advisories/GHSA-7g9h-c88w-r7h2"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:python-django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:django:1.2:*:*:*:*:*:*:*"
          ],
          "language": "python",
          "licenses": [],
          "locations": [
            {
              "path": "packages/sub/.hidden/requirements.txt"
            }
          ],
          "name": "django",
          "purl": "pkg:pypi/django@1.2",
          "type": "python",
          "upstreams": [],
          "version": "1.2"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003e=1.2.0,\u003c1.2.5 (python)"
            },
            "matcher": "python-matcher",
            "searchedBy": {
              "language": "python",
              "namespace": "github:language:python"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 7.5,
                  "exploitabilityScore": 10,
                  "impactScore": 6.4
                },
                "vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P",
                "vendorMetadata": {},
                "version": "2.0"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2011-0698",
            "description": "Directory traversal vulnerability in Django 1.1.x before 1.1.4 and 1.2.x before 1.2.5 on Windows might allow remote attackers to read or execute files via a / (slash) character in a key in a session cookie, related to session replays.",
            "id": "CVE-2011-0698",
            "namespace": "nvd:cpe",
            "severity": "High",
            "urls": [
              "http://www.djangoproject.com/weblog/2011/feb/08/security/",
              "http://openwall.com/lists/oss-security/2011/02/09/6",
              "http://www.securityfocus.com/bid/46296",
              "http://secunia.com/advisories/43230",
              "http://www.vupen.com/english/advisories/2011/0372",
              "http://www.mandriva.com/security/advisories?name=MDVSA-2011:031",
              "http://www.vupen.com/english/advisories/2011/0439"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-7g9h-c88w-r7h2",
          "description": "High severity vulnerability that affects django",
          "fix": {
            "state": "fixed",
            "versions": [
              "1.2.5"
            ]
          },
          "id": "GHSA-7g9h-c88w-r7h2",
          "namespace": "github:language:python",
          "severity": "High",
          "urls": [
            "https://github.com/advisories/GHSA-7g9h-c88w-r7h2"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:commons-compress:commons-compress:1.15:*:*:*:*:*:*:*",
            "cpe:2.3:a:commons-compress:commons_compress:1.15:*:*:*:*:*:*:*",
            "cpe:2.3:a:commons_compress:commons-compress:1.15:*:*:*:*:*:*:*",
            "cpe:2.3:a:commons_compress:commons_compress:1.15:*:*:*:*:*:*:*",
            "cpe:2.3:a:commons:commons-compress:1.15:*:*:*:*:*:*:*",
            "cpe:2.3:a:commons:commons_compress:1.15:*:*:*:*:*:*:*"
          ],
          "language": "java",
          "licenses": [],
          "locations": [
            {
              "path": "packages/pom.xml"
            }
          ],
          "metadata": {
            "archiveDigests": null,
            "manifestName": "",
            "pomArtifactID": "",
            "pomGroupID": "",
            "virtualPath": ""
          },
          "metadataType": "JavaMetadata",
          "name": "commons-compress",
          "purl": "pkg:maven/org.apache.commons/commons-compress@1.15",
          "type": "java-archive",
          "upstreams": [],
          "version": "1.15"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c1.21 (unknown)"
            },
            "matcher": "java-matcher",
            "searchedBy": {
              "language": "java",
              "namespace": "github:language:java"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 5,
                  "exploitabilityScore": 10,
                  "impactScore": 2.9
                },
                "vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 7.5,
                  "exploitabilityScore": 3.9,
                  "impactScore": 3.6
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2021-35515",
            "description": "When reading a specially crafted 7Z archive, the construction of the list of codecs that decompress an entry can result in an infinite loop. This could be used to mount a denial of service attack against services that use Compress' sevenz package.",
            "id": "CVE-2021-35515",
            "namespace": "nvd:cpe",
            "severity": "High",
            "urls": [
              "https://commons.apache.org/proper/commons-compress/security-reports.html",
              "https://lists.apache.org/thread.html/r19ebfd71770ec0617a9ea180e321ef927b3fefb4c81ec5d1902d20ab%40%3Cuser.commons.apache.org%3E",
              "http://www.openwall.com/lists/oss-security/2021/07/13/1",
              "https://lists.apache.org/thread.html/rbaea15ddc5a7c0c6b66660f1d6403b28595e2561bb283eade7d7cd69@%3Cannounce.apache.org%3E",
              "https://lists.apache.org/thread.html/rb064d705fdfa44b5dae4c366b369ef6597951083196321773b983e71@%3Ccommits.pulsar.apache.org%3E",
              "https://lists.apache.org/thread.html/rf2f4d7940371a7c7c5b679f50e28fc7fcc82cd00670ced87e013ac88@%3Ccommits.druid.apache.org%3E",
              "https://lists.apache.org/thread.html/rbe91c512c5385181149ab087b6c909825d34299f5c491c6482a2ed57@%3Ccommits.druid.apache.org%3E",
              "https://lists.apache.org/thread.html/rab292091eadd1ecc63c516e9541a7f241091cf2e652b8185a6059945@%3Ccommits.druid.apache.org%3E",
              "https://lists.apache.org/thread.html/rd4332baaf6debd03d60deb7ec93bee49e5fdbe958cb6800dff7fb00e@%3Cnotifications.skywalking.apache.org%3E",
              "https://lists.apache.org/thread.html/rb7adf3e55359819e77230b4586521e5c6874ce5ed93384bdc14d6aee@%3Cnotifications.skywalking.apache.org%3E",
              "https://lists.apache.org/thread.html/r9f54c0caa462267e0cc68b49f141e91432b36b23348d18c65bd0d040@%3Cnotifications.skywalking.apache.org%3E",
              "https://lists.apache.org/thread.html/rba65ed5ddb0586f5b12598f55ec7db3633e7b7fede60466367fbf86a@%3Cnotifications.skywalking.apache.org%3E",
              "https://lists.apache.org/thread.html/rb6e1fa80d34e5ada45f72655d84bfd90db0ca44ef19236a49198c88c@%3Cnotifications.skywalking.apache.org%3E",
              "https://lists.apache.org/thread.html/rfba19167efc785ad3561e7ef29f340d65ac8f0d897aed00e0731e742@%3Cnotifications.skywalking.apache.org%3E",
              "https://lists.apache.org/thread.html/racd0c0381c8404f298b226cd9db2eaae965b14c9c568224aa3f437ae@%3Cnotifications.skywalking.apache.org%3E",
              "https://lists.apache.org/thread.html/r67ef3c07fe3b8c1b02d48012149d280ad6da8e4cec253b527520fb2b@%3Cdev.poi.apache.org%3E",
              "https://www.oracle.com/security-alerts/cpuoct2021.html",
              "https://security.netapp.com/advisory/ntap-20211022-0001/",
              "https://www.oracle.com/security-alerts/cpujan2022.html",
              "https://www.oracle.com/security-alerts/cpuapr2022.html",
              "https://www.oracle.com/security-alerts/cpujul2022.html"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-7hfm-57qf-j43q",
          "description": "Excessive Iteration in Compress",
          "fix": {
            "state": "fixed",
            "versions": [
              "1.21"
            ]
          },
          "id": "GHSA-7hfm-57qf-j43q",
          "namespace": "github:language:java",
          "severity": "High",
          "urls": [
            "https://github.com/advisories/GHSA-7hfm-57qf-j43q"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:commons-compress:commons-compress:1.20:*:*:*:*:*:*:*",
            "cpe:2.3:a:commons-compress:commons_compress:1.20:*:*:*:*:*:*:*",
            "cpe:2.3:a:commons_compress:commons-compress:1.20:*:*:*:*:*:*:*",
            "cpe:2.3:a:commons_compress:commons_compress:1.20:*:*:*:*:*:*:*",
            "cpe:2.3:a:commons:commons-compress:1.20:*:*:*:*:*:*:*",
            "cpe:2.3:a:commons:commons_compress:1.20:*:*:*:*:*:*:*"
          ],
          "language": "java",
          "licenses": [],
          "locations": [
            {
              "path": "packages/sub/pom.xml"
            }
          ],
          "metadata": {
            "archiveDigests": null,
            "manifestName": "",
            "pomArtifactID": "",
            "pomGroupID": "",
            "virtualPath": ""
          },
          "metadataType": "JavaMetadata",
          "name": "commons-compress",
          "purl": "pkg:maven/org.apache.commons/commons-compress@1.20",
          "type": "java-archive",
          "upstreams": [],
          "version": "1.20"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c1.21 (unknown)"
            },
            "matcher": "java-matcher",
            "searchedBy": {
              "language": "java",
              "namespace": "github:language:java"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 5,
                  "exploitabilityScore": 10,
                  "impactScore": 2.9
                },
                "vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 7.5,
                  "exploitabilityScore": 3.9,
                  "impactScore": 3.6
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2021-35515",
            "description": "When reading a specially crafted 7Z archive, the construction of the list of codecs that decompress an entry can result in an infinite loop. This could be used to mount a denial of service attack against services that use Compress' sevenz package.",
            "id": "CVE-2021-35515",
            "namespace": "nvd:cpe",
            "severity": "High",
            "urls": [
              "https://commons.apache.org/proper/commons-compress/security-reports.html",
              "https://lists.apache.org/thread.html/r19ebfd71770ec0617a9ea180e321ef927b3fefb4c81ec5d1902d20ab%40%3Cuser.commons.apache.org%3E",
              "http://www.openwall.com/lists/oss-security/2021/07/13/1",
              "https://lists.apache.org/thread.html/rbaea15ddc5a7c0c6b66660f1d6403b28595e2561bb283eade7d7cd69@%3Cannounce.apache.org%3E",
              "https://lists.apache.org/thread.html/rb064d705fdfa44b5dae4c366b369ef6597951083196321773b983e71@%3Ccommits.pulsar.apache.org%3E",
              "https://lists.apache.org/thread.html/rf2f4d7940371a7c7c5b679f50e28fc7fcc82cd00670ced87e013ac88@%3Ccommits.druid.apache.org%3E",
              "https://lists.apache.org/thread.html/rbe91c512c5385181149ab087b6c909825d34299f5c491c6482a2ed57@%3Ccommits.druid.apache.org%3E",
              "https://lists.apache.org/thread.html/rab292091eadd1ecc63c516e9541a7f241091cf2e652b8185a6059945@%3Ccommits.druid.apache.org%3E",
              "https://lists.apache.org/thread.html/rd4332baaf6debd03d60deb7ec93bee49e5fdbe958cb6800dff7fb00e@%3Cnotifications.skywalking.apache.org%3E",
              "https://lists.apache.org/thread.html/rb7adf3e55359819e77230b4586521e5c6874ce5ed93384bdc14d6aee@%3Cnotifications.skywalking.apache.org%3E",
              "https://lists.apache.org/thread.html/r9f54c0caa462267e0cc68b49f141e91432b36b23348d18c65bd0d040@%3Cnotifications.skywalking.apache.org%3E",
              "https://lists.apache.org/thread.html/rba65ed5ddb0586f5b12598f55ec7db3633e7b7fede60466367fbf86a@%3Cnotifications.skywalking.apache.org%3E",
              "https://lists.apache.org/thread.html/rb6e1fa80d34e5ada45f72655d84bfd90db0ca44ef19236a49198c88c@%3Cnotifications.skywalking.apache.org%3E",
              "https://lists.apache.org/thread.html/rfba19167efc785ad3561e7ef29f340d65ac8f0d897aed00e0731e742@%3Cnotifications.skywalking.apache.org%3E",
              "https://lists.apache.org/thread.html/racd0c0381c8404f298b226cd9db2eaae965b14c9c568224aa3f437ae@%3Cnotifications.skywalking.apache.org%3E",
              "https://lists.apache.org/thread.html/r67ef3c07fe3b8c1b02d48012149d280ad6da8e4cec253b527520fb2b@%3Cdev.poi.apache.org%3E",
              "https://www.oracle.com/security-alerts/cpuoct2021.html",
              "https://security.netapp.com/advisory/ntap-20211022-0001/",
              "https://www.oracle.com/security-alerts/cpujan2022.html",
              "https://www.oracle.com/security-alerts/cpuapr2022.html",
              "https://www.oracle.com/security-alerts/cpujul2022.html"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-7hfm-57qf-j43q",
          "description": "Excessive Iteration in Compress",
          "fix": {
            "state": "fixed",
            "versions": [
              "1.21"
            ]
          },
          "id": "GHSA-7hfm-57qf-j43q",
          "namespace": "github:language:java",
          "severity": "High",
          "urls": [
            "https://github.com/advisories/GHSA-7hfm-57qf-j43q"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:materialize-css:materialize-css:1.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:materialize-css:materialize_css:1.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:materialize_css:materialize-css:1.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:materialize_css:materialize_css:1.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:materialize:materialize-css:1.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:materialize:materialize_css:1.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:materialize-css:1.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:materialize_css:1.0.0:*:*:*:*:*:*:*"
          ],
          "language": "javascript",
          "licenses": [
            ""
          ],
          "locations": [
            {
              "path": "packages/node/twistcli_test/package-lock.json"
            }
          ],
          "name": "materialize-css",
          "purl": "pkg:npm/materialize-css@1.0.0",
          "type": "npm",
          "upstreams": [],
          "version": "1.0.0"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c=1.0.0 (unknown)"
            },
            "matcher": "javascript-matcher",
            "searchedBy": {
              "language": "javascript",
              "namespace": "github:language:javascript"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 4.3,
                  "exploitabilityScore": 8.6,
                  "impactScore": 2.9
                },
                "vector": "AV:N/AC:M/Au:N/C:N/I:P/A:N",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 5.4,
                  "exploitabilityScore": 2.8,
                  "impactScore": 2.5
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:N",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2022-25349",
            "description": "All versions of package materialize-css are vulnerable to Cross-site Scripting (XSS) due to improper escape of user input (such as \u0026lt;not-a-tag /\u0026gt;) that is being parsed as HTML/JavaScript, and inserted into the Document Object Model (DOM). This vulnerability can be exploited when the user-input is provided to the autocomplete component.",
            "id": "CVE-2022-25349",
            "namespace": "nvd:cpe",
            "severity": "Medium",
            "urls": [
              "https://snyk.io/vuln/SNYK-JS-MATERIALIZECSS-2324800",
              "https://github.com/Dogfalo/materialize/blob/v1-dev/js/autocomplete.js%23L285%20",
              "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-2766498"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-7jvx-f994-rfw2",
          "description": "materialize-css vulnerable to cross-site Scripting (XSS) due to improper escape of user input",
          "fix": {
            "state": "not-fixed",
            "versions": []
          },
          "id": "GHSA-7jvx-f994-rfw2",
          "namespace": "github:language:javascript",
          "severity": "Medium",
          "urls": [
            "https://github.com/advisories/GHSA-7jvx-f994-rfw2"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:materialize-css:materialize-css:1.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:materialize-css:materialize_css:1.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:materialize_css:materialize-css:1.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:materialize_css:materialize_css:1.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:materialize:materialize-css:1.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:materialize:materialize_css:1.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:materialize-css:1.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:materialize_css:1.0.0:*:*:*:*:*:*:*"
          ],
          "language": "javascript",
          "licenses": [],
          "locations": [
            {
              "path": "packages/node/base/package-lock.json"
            }
          ],
          "name": "materialize-css",
          "purl": "pkg:npm/materialize-css@1.0.0",
          "type": "npm",
          "upstreams": [],
          "version": "1.0.0"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c=1.0.0 (unknown)"
            },
            "matcher": "javascript-matcher",
            "searchedBy": {
              "language": "javascript",
              "namespace": "github:language:javascript"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 4.3,
                  "exploitabilityScore": 8.6,
                  "impactScore": 2.9
                },
                "vector": "AV:N/AC:M/Au:N/C:N/I:P/A:N",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 5.4,
                  "exploitabilityScore": 2.8,
                  "impactScore": 2.5
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:N",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2022-25349",
            "description": "All versions of package materialize-css are vulnerable to Cross-site Scripting (XSS) due to improper escape of user input (such as \u0026lt;not-a-tag /\u0026gt;) that is being parsed as HTML/JavaScript, and inserted into the Document Object Model (DOM). This vulnerability can be exploited when the user-input is provided to the autocomplete component.",
            "id": "CVE-2022-25349",
            "namespace": "nvd:cpe",
            "severity": "Medium",
            "urls": [
              "https://snyk.io/vuln/SNYK-JS-MATERIALIZECSS-2324800",
              "https://github.com/Dogfalo/materialize/blob/v1-dev/js/autocomplete.js%23L285%20",
              "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-2766498"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-7jvx-f994-rfw2",
          "description": "materialize-css vulnerable to cross-site Scripting (XSS) due to improper escape of user input",
          "fix": {
            "state": "not-fixed",
            "versions": []
          },
          "id": "GHSA-7jvx-f994-rfw2",
          "namespace": "github:language:javascript",
          "severity": "Medium",
          "urls": [
            "https://github.com/advisories/GHSA-7jvx-f994-rfw2"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:@actions/core:@actions/core:1.6.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:@actions/core:1.6.0:*:*:*:*:*:*:*"
          ],
          "language": "javascript",
          "licenses": [],
          "locations": [
            {
              "path": "packages/node/base/package-lock.json"
            }
          ],
          "name": "@actions/core",
          "purl": "pkg:npm/%40actions/core@1.6.0",
          "type": "npm",
          "upstreams": [],
          "version": "1.6.0"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c=1.9.0 (unknown)"
            },
            "matcher": "javascript-matcher",
            "searchedBy": {
              "language": "javascript",
              "namespace": "github:language:javascript"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 5,
                  "exploitabilityScore": 3.1,
                  "impactScore": 1.4
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:N/I:L/A:N",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2022-35954",
            "description": "The GitHub Actions ToolKit provides a set of packages to make creating actions easier. The `core.exportVariable` function uses a well known delimiter that attackers can use to break out of that specific variable and assign values to other arbitrary variables. Workflows that write untrusted values to the `GITHUB_ENV` file may cause the path or other environment variables to be modified without the intention of the workflow or action author. Users should upgrade to `@actions/core v1.9.1`. If you are unable to upgrade the `@actions/core` package, you can modify your action to ensure that any user input does not contain the delimiter `_GitHubActionsFileCommandDelimeter_` before calling `core.exportVariable`.",
            "id": "CVE-2022-35954",
            "namespace": "nvd:cpe",
            "severity": "Medium",
            "urls": [
              "https://github.com/actions/toolkit/security/advisories/GHSA-7r3h-m5j6-3q42",
              "https://github.com/actions/toolkit/commit/4beda9cbc00ba6eefe387a937c21087ccb8ee9df"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-7r3h-m5j6-3q42",
          "description": "@actions/core has Delimiter Injection Vulnerability in exportVariable",
          "fix": {
            "state": "fixed",
            "versions": [
              "1.9.1"
            ]
          },
          "id": "GHSA-7r3h-m5j6-3q42",
          "namespace": "github:language:javascript",
          "severity": "Medium",
          "urls": [
            "https://github.com/advisories/GHSA-7r3h-m5j6-3q42"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:log4j-core:log4j-core:2.14.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:log4j-core:log4j_core:2.14.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:log4j_core:log4j-core:2.14.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:log4j_core:log4j_core:2.14.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:log4j:log4j-core:2.14.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:log4j:log4j_core:2.14.0:*:*:*:*:*:*:*"
          ],
          "language": "java",
          "licenses": [],
          "locations": [
            {
              "path": "packages/sub/pom.xml"
            }
          ],
          "metadata": {
            "archiveDigests": null,
            "manifestName": "",
            "pomArtifactID": "",
            "pomGroupID": "",
            "virtualPath": ""
          },
          "metadataType": "JavaMetadata",
          "name": "log4j-core",
          "purl": "pkg:maven/org.apache.logging.log4j/log4j-core@2.14.0",
          "type": "java-archive",
          "upstreams": [],
          "version": "2.14.0"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003e=2.13.0,\u003c2.16.0 (unknown)"
            },
            "matcher": "java-matcher",
            "searchedBy": {
              "language": "java",
              "namespace": "github:language:java"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 5.1,
                  "exploitabilityScore": 4.9,
                  "impactScore": 6.4
                },
                "vector": "AV:N/AC:H/Au:N/C:P/I:P/A:P",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 9,
                  "exploitabilityScore": 2.2,
                  "impactScore": 6
                },
                "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:H/I:H/A:H",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2021-45046",
            "description": "It was found that the fix to address CVE-2021-44228 in Apache Log4j 2.15.0 was incomplete in certain non-default configurations. This could allows attackers with control over Thread Context Map (MDC) input data when the logging configuration uses a non-default Pattern Layout with either a Context Lookup (for example, $${ctx:loginId}) or a Thread Context Map pattern (%X, %mdc, or %MDC) to craft malicious input data using a JNDI Lookup pattern resulting in an information leak and remote code execution in some environments and local code execution in all environments. Log4j 2.16.0 (Java 8) and 2.12.2 (Java 7) fix this issue by removing support for message lookup patterns and disabling JNDI functionality by default.",
            "id": "CVE-2021-45046",
            "namespace": "nvd:cpe",
            "severity": "Critical",
            "urls": [
              "http://www.openwall.com/lists/oss-security/2021/12/14/4",
              "https://logging.apache.org/log4j/2.x/security.html",
              "https://www.cve.org/CVERecord?id=CVE-2021-44228",
              "https://www.intel.com/content/www/us/en/security-center/advisory/intel-sa-00646.html",
              "https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-apache-log4j-qRuKNEbd",
              "http://www.openwall.com/lists/oss-security/2021/12/15/3",
              "https://cert-portal.siemens.com/productcert/pdf/ssa-661247.pdf",
              "https://www.kb.cert.org/vuls/id/930724",
              "https://cert-portal.siemens.com/productcert/pdf/ssa-714170.pdf",
              "https://www.debian.org/security/2021/dsa-5022",
              "https://www.oracle.com/security-alerts/alert-cve-2021-44228.html",
              "https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2021-0032",
              "http://www.openwall.com/lists/oss-security/2021/12/18/1",
              "https://cert-portal.siemens.com/productcert/pdf/ssa-397453.pdf",
              "https://cert-portal.siemens.com/productcert/pdf/ssa-479842.pdf",
              "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/EOKPQGV24RRBBI4TBZUDQMM4MEH7MXCY/",
              "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/SIG7FZULMNK2XF6FZRU4VWYDQXNMUGAJ/",
              "https://www.oracle.com/security-alerts/cpujan2022.html",
              "https://www.oracle.com/security-alerts/cpuapr2022.html",
              "https://www.oracle.com/security-alerts/cpujul2022.html"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-7rjr-3q55-vv33",
          "description": "Incomplete fix for Apache Log4j vulnerability",
          "fix": {
            "state": "fixed",
            "versions": [
              "2.16.0"
            ]
          },
          "id": "GHSA-7rjr-3q55-vv33",
          "namespace": "github:language:java",
          "severity": "Critical",
          "urls": [
            "https://github.com/advisories/GHSA-7rjr-3q55-vv33"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:python-django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:django:1.2:*:*:*:*:*:*:*"
          ],
          "language": "python",
          "licenses": [],
          "locations": [
            {
              "path": "packages/requirements.txt"
            }
          ],
          "name": "django",
          "purl": "pkg:pypi/django@1.2",
          "type": "python",
          "upstreams": [],
          "version": "1.2"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003e=1.2.0,\u003c1.2.4 (python)"
            },
            "matcher": "python-matcher",
            "searchedBy": {
              "language": "python",
              "namespace": "github:language:python"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 5,
                  "exploitabilityScore": 10,
                  "impactScore": 2.9
                },
                "vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P",
                "vendorMetadata": {},
                "version": "2.0"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2010-4535",
            "description": "The password reset functionality in django.contrib.auth in Django before 1.1.3, 1.2.x before 1.2.4, and 1.3.x before 1.3 beta 1 does not validate the length of a string representing a base36 timestamp, which allows remote attackers to cause a denial of service (resource consumption) via a URL that specifies a large base36 integer.",
            "id": "CVE-2010-4535",
            "namespace": "nvd:cpe",
            "severity": "Medium",
            "urls": [
              "http://www.djangoproject.com/weblog/2010/dec/22/security/",
              "https://bugzilla.redhat.com/show_bug.cgi?id=665373",
              "http://secunia.com/advisories/42715",
              "http://www.openwall.com/lists/oss-security/2010/12/23/4",
              "http://www.openwall.com/lists/oss-security/2011/01/03/5",
              "http://code.djangoproject.com/changeset/15032",
              "http://www.securityfocus.com/bid/45563",
              "http://lists.fedoraproject.org/pipermail/package-announce/2011-January/053072.html",
              "http://www.vupen.com/english/advisories/2011/0048",
              "http://secunia.com/advisories/42827",
              "http://www.ubuntu.com/usn/USN-1040-1",
              "http://lists.fedoraproject.org/pipermail/package-announce/2011-January/053041.html",
              "http://www.vupen.com/english/advisories/2011/0098",
              "http://secunia.com/advisories/42913"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-7wph-fc4w-wqp2",
          "description": "Moderate severity vulnerability that affects django",
          "fix": {
            "state": "fixed",
            "versions": [
              "1.2.4"
            ]
          },
          "id": "GHSA-7wph-fc4w-wqp2",
          "namespace": "github:language:python",
          "severity": "Medium",
          "urls": [
            "https://github.com/advisories/GHSA-7wph-fc4w-wqp2"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:python-django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:django:1.2:*:*:*:*:*:*:*"
          ],
          "language": "python",
          "licenses": [],
          "locations": [
            {
              "path": "packages/sub/.hidden/requirements.txt"
            }
          ],
          "name": "django",
          "purl": "pkg:pypi/django@1.2",
          "type": "python",
          "upstreams": [],
          "version": "1.2"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003e=1.2.0,\u003c1.2.4 (python)"
            },
            "matcher": "python-matcher",
            "searchedBy": {
              "language": "python",
              "namespace": "github:language:python"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 5,
                  "exploitabilityScore": 10,
                  "impactScore": 2.9
                },
                "vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P",
                "vendorMetadata": {},
                "version": "2.0"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2010-4535",
            "description": "The password reset functionality in django.contrib.auth in Django before 1.1.3, 1.2.x before 1.2.4, and 1.3.x before 1.3 beta 1 does not validate the length of a string representing a base36 timestamp, which allows remote attackers to cause a denial of service (resource consumption) via a URL that specifies a large base36 integer.",
            "id": "CVE-2010-4535",
            "namespace": "nvd:cpe",
            "severity": "Medium",
            "urls": [
              "http://www.djangoproject.com/weblog/2010/dec/22/security/",
              "https://bugzilla.redhat.com/show_bug.cgi?id=665373",
              "http://secunia.com/advisories/42715",
              "http://www.openwall.com/lists/oss-security/2010/12/23/4",
              "http://www.openwall.com/lists/oss-security/2011/01/03/5",
              "http://code.djangoproject.com/changeset/15032",
              "http://www.securityfocus.com/bid/45563",
              "http://lists.fedoraproject.org/pipermail/package-announce/2011-January/053072.html",
              "http://www.vupen.com/english/advisories/2011/0048",
              "http://secunia.com/advisories/42827",
              "http://www.ubuntu.com/usn/USN-1040-1",
              "http://lists.fedoraproject.org/pipermail/package-announce/2011-January/053041.html",
              "http://www.vupen.com/english/advisories/2011/0098",
              "http://secunia.com/advisories/42913"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-7wph-fc4w-wqp2",
          "description": "Moderate severity vulnerability that affects django",
          "fix": {
            "state": "fixed",
            "versions": [
              "1.2.4"
            ]
          },
          "id": "GHSA-7wph-fc4w-wqp2",
          "namespace": "github:language:python",
          "severity": "Medium",
          "urls": [
            "https://github.com/advisories/GHSA-7wph-fc4w-wqp2"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:karma:karma:6.3.9:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:karma:6.3.9:*:*:*:*:*:*:*"
          ],
          "language": "javascript",
          "licenses": [],
          "locations": [
            {
              "path": "packages/node/base/package-lock.json"
            }
          ],
          "name": "karma",
          "purl": "pkg:npm/karma@6.3.9",
          "type": "npm",
          "upstreams": [],
          "version": "6.3.9"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c6.3.14 (unknown)"
            },
            "matcher": "javascript-matcher",
            "searchedBy": {
              "language": "javascript",
              "namespace": "github:language:javascript"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 4.3,
                  "exploitabilityScore": 8.6,
                  "impactScore": 2.9
                },
                "vector": "AV:N/AC:M/Au:N/C:N/I:P/A:N",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 6.1,
                  "exploitabilityScore": 2.8,
                  "impactScore": 2.7
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2022-0437",
            "description": "Cross-site Scripting (XSS) - DOM in NPM karma prior to 6.3.14.",
            "id": "CVE-2022-0437",
            "namespace": "nvd:cpe",
            "severity": "Medium",
            "urls": [
              "https://huntr.dev/bounties/64b67ea1-5487-4382-a5f6-e8a95f798885",
              "https://github.com/karma-runner/karma/commit/839578c45a8ac42fbc1d72105f97eab77dd3eb8a"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-7x7c-qm48-pq9c",
          "description": "Cross-site Scripting in karma",
          "fix": {
            "state": "fixed",
            "versions": [
              "6.3.14"
            ]
          },
          "id": "GHSA-7x7c-qm48-pq9c",
          "namespace": "github:language:javascript",
          "severity": "Medium",
          "urls": [
            "https://github.com/advisories/GHSA-7x7c-qm48-pq9c"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:log4js:log4js:6.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:log4js:6.3.0:*:*:*:*:*:*:*"
          ],
          "language": "javascript",
          "licenses": [],
          "locations": [
            {
              "path": "packages/node/base/package-lock.json"
            }
          ],
          "name": "log4js",
          "purl": "pkg:npm/log4js@6.3.0",
          "type": "npm",
          "upstreams": [],
          "version": "6.3.0"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c6.4.0 (unknown)"
            },
            "matcher": "javascript-matcher",
            "searchedBy": {
              "language": "javascript",
              "namespace": "github:language:javascript"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 2.1,
                  "exploitabilityScore": 3.9,
                  "impactScore": 2.9
                },
                "vector": "AV:L/AC:L/Au:N/C:P/I:N/A:N",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 5.5,
                  "exploitabilityScore": 1.8,
                  "impactScore": 3.6
                },
                "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2022-21704",
            "description": "log4js-node is a port of log4js to node.js. In affected versions default file permissions for log files created by the file, fileSync and dateFile appenders are world-readable (in unix). This could cause problems if log files contain sensitive information. This would affect any users that have not supplied their own permissions for the files via the mode parameter in the config. Users are advised to update.",
            "id": "CVE-2022-21704",
            "namespace": "nvd:cpe",
            "severity": "Medium",
            "urls": [
              "https://github.com/log4js-node/log4js-node/blob/v6.4.0/CHANGELOG.md#640",
              "https://github.com/log4js-node/log4js-node/pull/1141/commits/8042252861a1b65adb66931fdf702ead34fa9b76",
              "https://github.com/log4js-node/streamroller/pull/87",
              "https://github.com/log4js-node/log4js-node/security/advisories/GHSA-82v2-mx6x-wq7q",
              "https://lists.debian.org/debian-lts-announce/2022/12/msg00014.html"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-82v2-mx6x-wq7q",
          "description": "Incorrect Default Permissions in log4js",
          "fix": {
            "state": "fixed",
            "versions": [
              "6.4.0"
            ]
          },
          "id": "GHSA-82v2-mx6x-wq7q",
          "namespace": "github:language:javascript",
          "severity": "Medium",
          "urls": [
            "https://github.com/advisories/GHSA-82v2-mx6x-wq7q"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:log4j-core:log4j-core:2.14.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:log4j-core:log4j_core:2.14.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:log4j_core:log4j-core:2.14.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:log4j_core:log4j_core:2.14.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:log4j:log4j-core:2.14.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:log4j:log4j_core:2.14.0:*:*:*:*:*:*:*"
          ],
          "language": "java",
          "licenses": [],
          "locations": [
            {
              "path": "packages/sub/pom.xml"
            }
          ],
          "metadata": {
            "archiveDigests": null,
            "manifestName": "",
            "pomArtifactID": "",
            "pomGroupID": "",
            "virtualPath": ""
          },
          "metadataType": "JavaMetadata",
          "name": "log4j-core",
          "purl": "pkg:maven/org.apache.logging.log4j/log4j-core@2.14.0",
          "type": "java-archive",
          "upstreams": [],
          "version": "2.14.0"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003e=2.13.0,\u003c2.17.1 (unknown)"
            },
            "matcher": "java-matcher",
            "searchedBy": {
              "language": "java",
              "namespace": "github:language:java"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 8.5,
                  "exploitabilityScore": 6.8,
                  "impactScore": 10
                },
                "vector": "AV:N/AC:M/Au:S/C:C/I:C/A:C",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 6.6,
                  "exploitabilityScore": 0.7,
                  "impactScore": 5.9
                },
                "vector": "CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:H/I:H/A:H",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2021-44832",
            "description": "Apache Log4j2 versions 2.0-beta7 through 2.17.0 (excluding security fix releases 2.3.2 and 2.12.4) are vulnerable to a remote code execution (RCE) attack when a configuration uses a JDBC Appender with a JNDI LDAP data source URI when an attacker has control of the target LDAP server. This issue is fixed by limiting JNDI data source names to the java protocol in Log4j2 versions 2.17.1, 2.12.4, and 2.3.2.",
            "id": "CVE-2021-44832",
            "namespace": "nvd:cpe",
            "severity": "Medium",
            "urls": [
              "https://lists.apache.org/thread/s1o5vlo78ypqxnzn6p8zf6t9shtq5143",
              "https://issues.apache.org/jira/browse/LOG4J2-3293",
              "http://www.openwall.com/lists/oss-security/2021/12/28/1",
              "https://cert-portal.siemens.com/productcert/pdf/ssa-784507.pdf",
              "https://lists.debian.org/debian-lts-announce/2021/12/msg00036.html",
              "https://security.netapp.com/advisory/ntap-20220104-0001/",
              "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/T57MPJUW3MA6QGWZRTMCHHMMPQNVKGFC/",
              "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/EVV25FXL4FU5X6X5BSL7RLQ7T6F65MRA/",
              "https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-apache-log4j-qRuKNEbd",
              "https://www.oracle.com/security-alerts/cpujan2022.html",
              "https://www.oracle.com/security-alerts/cpuapr2022.html",
              "https://www.oracle.com/security-alerts/cpujul2022.html"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-8489-44mv-ggj8",
          "description": "Improper Input Validation and Injection in Apache Log4j2",
          "fix": {
            "state": "fixed",
            "versions": [
              "2.17.1"
            ]
          },
          "id": "GHSA-8489-44mv-ggj8",
          "namespace": "github:language:java",
          "severity": "Medium",
          "urls": [
            "https://github.com/advisories/GHSA-8489-44mv-ggj8"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:jsonwebtoken:jsonwebtoken:8.5.1:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:jsonwebtoken:8.5.1:*:*:*:*:*:*:*"
          ],
          "language": "javascript",
          "licenses": [],
          "locations": [
            {
              "path": "packages/node/base/package-lock.json"
            }
          ],
          "name": "jsonwebtoken",
          "purl": "pkg:npm/jsonwebtoken@8.5.1",
          "type": "npm",
          "upstreams": [],
          "version": "8.5.1"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c=8.5.1 (unknown)"
            },
            "matcher": "javascript-matcher",
            "searchedBy": {
              "language": "javascript",
              "namespace": "github:language:javascript"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 8.1,
                  "exploitabilityScore": 2.8,
                  "impactScore": 5.2
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2022-23539",
            "description": "Versions `\u003c=8.5.1` of `jsonwebtoken` library could be misconfigured so that legacy, insecure key types are used for signature verification. For example, DSA keys could be used with the RS256 algorithm. You are affected if you are using an algorithm and a key type other than a combination listed in the GitHub Security Advisory as unaffected. This issue has been fixed, please update to version 9.0.0. This version validates for asymmetric key type and algorithm combinations. Please refer to the above mentioned algorithm / key type combinations for the valid secure configuration. After updating to version 9.0.0, if you still intend to continue with signing or verifying tokens using invalid key type/algorithm value combinations, you’ll need to set the `allowInvalidAsymmetricKeyTypes` option to `true` in the `sign()` and/or `verify()` functions.",
            "id": "CVE-2022-23539",
            "namespace": "nvd:cpe",
            "severity": "High",
            "urls": [
              "https://github.com/auth0/node-jsonwebtoken/security/advisories/GHSA-8cf7-32gw-wr33",
              "https://github.com/auth0/node-jsonwebtoken/commit/e1fa9dcc12054a8681db4e6373da1b30cf7016e3"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-8cf7-32gw-wr33",
          "description": "jsonwebtoken unrestricted key type could lead to legacy keys usage ",
          "fix": {
            "state": "fixed",
            "versions": [
              "9.0.0"
            ]
          },
          "id": "GHSA-8cf7-32gw-wr33",
          "namespace": "github:language:javascript",
          "severity": "Medium",
          "urls": [
            "https://github.com/advisories/GHSA-8cf7-32gw-wr33"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:node-forge:node-forge:0.10.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:node-forge:node_forge:0.10.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:node_forge:node-forge:0.10.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:node_forge:node_forge:0.10.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:node:node-forge:0.10.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:node:node_forge:0.10.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:node-forge:0.10.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:node_forge:0.10.0:*:*:*:*:*:*:*"
          ],
          "language": "javascript",
          "licenses": [],
          "locations": [
            {
              "path": "packages/node/base/package-lock.json"
            }
          ],
          "name": "node-forge",
          "purl": "pkg:npm/node-forge@0.10.0",
          "type": "npm",
          "upstreams": [],
          "version": "0.10.0"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c1.0.0 (unknown)"
            },
            "matcher": "javascript-matcher",
            "searchedBy": {
              "language": "javascript",
              "namespace": "github:language:javascript"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 5.8,
                  "exploitabilityScore": 8.6,
                  "impactScore": 4.9
                },
                "vector": "AV:N/AC:M/Au:N/C:P/I:P/A:N",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 6.1,
                  "exploitabilityScore": 2.8,
                  "impactScore": 2.7
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2022-0122",
            "description": "forge is vulnerable to URL Redirection to Untrusted Site",
            "id": "CVE-2022-0122",
            "namespace": "nvd:cpe",
            "severity": "Medium",
            "urls": [
              "https://github.com/digitalbazaar/forge/commit/db8016c805371e72b06d8e2edfe0ace0df934a5e",
              "https://huntr.dev/bounties/41852c50-3c6d-4703-8c55-4db27164a4ae"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-8fr3-hfg3-gpgp",
          "description": "Open Redirect in node-forge",
          "fix": {
            "state": "fixed",
            "versions": [
              "1.0.0"
            ]
          },
          "id": "GHSA-8fr3-hfg3-gpgp",
          "namespace": "github:language:javascript",
          "severity": "Medium",
          "urls": [
            "https://github.com/advisories/GHSA-8fr3-hfg3-gpgp"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:json-ptr:json-ptr:2.2.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:json-ptr:json_ptr:2.2.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:json_ptr:json-ptr:2.2.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:json_ptr:json_ptr:2.2.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:json:json-ptr:2.2.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:json:json_ptr:2.2.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:json-ptr:2.2.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:json_ptr:2.2.0:*:*:*:*:*:*:*"
          ],
          "language": "javascript",
          "licenses": [],
          "locations": [
            {
              "path": "packages/node/base/package-lock.json"
            }
          ],
          "name": "json-ptr",
          "purl": "pkg:npm/json-ptr@2.2.0",
          "type": "npm",
          "upstreams": [],
          "version": "2.2.0"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c3.0.0 (unknown)"
            },
            "matcher": "javascript-matcher",
            "searchedBy": {
              "language": "javascript",
              "namespace": "github:language:javascript"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 7.5,
                  "exploitabilityScore": 10,
                  "impactScore": 6.4
                },
                "vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 9.8,
                  "exploitabilityScore": 3.9,
                  "impactScore": 5.9
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2021-23509",
            "description": "This affects the package json-ptr before 3.0.0. A type confusion vulnerability can lead to a bypass of CVE-2020-7766 when the user-provided keys used in the pointer parameter are arrays.",
            "id": "CVE-2021-23509",
            "namespace": "nvd:cpe",
            "severity": "Critical",
            "urls": [
              "https://github.com/flitbit/json-ptr/commit/5dc458fbad1c382a2e3ca6d62e66ede3d92849ca",
              "https://snyk.io/vuln/SNYK-JS-JSONPTR-1577291",
              "https://github.com/flitbit/json-ptr%23security-vulnerabilities-resolved",
              "https://github.com/flitbit/json-ptr/pull/42",
              "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1767165"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-8gwj-8hxc-285w",
          "description": "Prototype Pollution in json-ptr",
          "fix": {
            "state": "fixed",
            "versions": [
              "3.0.0"
            ]
          },
          "id": "GHSA-8gwj-8hxc-285w",
          "namespace": "github:language:javascript",
          "severity": "Medium",
          "urls": [
            "https://github.com/advisories/GHSA-8gwj-8hxc-285w"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:python-django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:django:1.2:*:*:*:*:*:*:*"
          ],
          "language": "python",
          "licenses": [],
          "locations": [
            {
              "path": "packages/requirements.txt"
            }
          ],
          "name": "django",
          "purl": "pkg:pypi/django@1.2",
          "type": "python",
          "upstreams": [],
          "version": "1.2"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003e=1.2.0,\u003c1.2.5 (python)"
            },
            "matcher": "python-matcher",
            "searchedBy": {
              "language": "python",
              "namespace": "github:language:python"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 4.3,
                  "exploitabilityScore": 8.6,
                  "impactScore": 2.9
                },
                "vector": "AV:N/AC:M/Au:N/C:N/I:P/A:N",
                "vendorMetadata": {},
                "version": "2.0"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2011-0697",
            "description": "Cross-site scripting (XSS) vulnerability in Django 1.1.x before 1.1.4 and 1.2.x before 1.2.5 might allow remote attackers to inject arbitrary web script or HTML via a filename associated with a file upload.",
            "id": "CVE-2011-0697",
            "namespace": "nvd:cpe",
            "severity": "Medium",
            "urls": [
              "https://bugzilla.redhat.com/show_bug.cgi?id=676359",
              "http://openwall.com/lists/oss-security/2011/02/09/6",
              "http://www.djangoproject.com/weblog/2011/feb/08/security/",
              "http://lists.fedoraproject.org/pipermail/package-announce/2011-February/054207.html",
              "http://www.mandriva.com/security/advisories?name=MDVSA-2011:031",
              "http://www.ubuntu.com/usn/USN-1066-1",
              "http://secunia.com/advisories/43230",
              "http://lists.fedoraproject.org/pipermail/package-announce/2011-February/054208.html",
              "http://secunia.com/advisories/43297",
              "http://www.debian.org/security/2011/dsa-2163",
              "http://www.vupen.com/english/advisories/2011/0439",
              "http://www.vupen.com/english/advisories/2011/0388",
              "http://www.vupen.com/english/advisories/2011/0372",
              "http://www.vupen.com/english/advisories/2011/0429",
              "http://www.securityfocus.com/bid/46296",
              "http://secunia.com/advisories/43382",
              "http://secunia.com/advisories/43426",
              "http://www.vupen.com/english/advisories/2011/0441"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-8m3r-rv5g-fcpq",
          "description": "Moderate severity vulnerability that affects django",
          "fix": {
            "state": "fixed",
            "versions": [
              "1.2.5"
            ]
          },
          "id": "GHSA-8m3r-rv5g-fcpq",
          "namespace": "github:language:python",
          "severity": "Medium",
          "urls": [
            "https://github.com/advisories/GHSA-8m3r-rv5g-fcpq"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:python-django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:django:1.2:*:*:*:*:*:*:*"
          ],
          "language": "python",
          "licenses": [],
          "locations": [
            {
              "path": "packages/sub/.hidden/requirements.txt"
            }
          ],
          "name": "django",
          "purl": "pkg:pypi/django@1.2",
          "type": "python",
          "upstreams": [],
          "version": "1.2"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003e=1.2.0,\u003c1.2.5 (python)"
            },
            "matcher": "python-matcher",
            "searchedBy": {
              "language": "python",
              "namespace": "github:language:python"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 4.3,
                  "exploitabilityScore": 8.6,
                  "impactScore": 2.9
                },
                "vector": "AV:N/AC:M/Au:N/C:N/I:P/A:N",
                "vendorMetadata": {},
                "version": "2.0"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2011-0697",
            "description": "Cross-site scripting (XSS) vulnerability in Django 1.1.x before 1.1.4 and 1.2.x before 1.2.5 might allow remote attackers to inject arbitrary web script or HTML via a filename associated with a file upload.",
            "id": "CVE-2011-0697",
            "namespace": "nvd:cpe",
            "severity": "Medium",
            "urls": [
              "https://bugzilla.redhat.com/show_bug.cgi?id=676359",
              "http://openwall.com/lists/oss-security/2011/02/09/6",
              "http://www.djangoproject.com/weblog/2011/feb/08/security/",
              "http://lists.fedoraproject.org/pipermail/package-announce/2011-February/054207.html",
              "http://www.mandriva.com/security/advisories?name=MDVSA-2011:031",
              "http://www.ubuntu.com/usn/USN-1066-1",
              "http://secunia.com/advisories/43230",
              "http://lists.fedoraproject.org/pipermail/package-announce/2011-February/054208.html",
              "http://secunia.com/advisories/43297",
              "http://www.debian.org/security/2011/dsa-2163",
              "http://www.vupen.com/english/advisories/2011/0439",
              "http://www.vupen.com/english/advisories/2011/0388",
              "http://www.vupen.com/english/advisories/2011/0372",
              "http://www.vupen.com/english/advisories/2011/0429",
              "http://www.securityfocus.com/bid/46296",
              "http://secunia.com/advisories/43382",
              "http://secunia.com/advisories/43426",
              "http://www.vupen.com/english/advisories/2011/0441"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-8m3r-rv5g-fcpq",
          "description": "Moderate severity vulnerability that affects django",
          "fix": {
            "state": "fixed",
            "versions": [
              "1.2.5"
            ]
          },
          "id": "GHSA-8m3r-rv5g-fcpq",
          "namespace": "github:language:python",
          "severity": "Medium",
          "urls": [
            "https://github.com/advisories/GHSA-8m3r-rv5g-fcpq"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:materialize-css:materialize-css:1.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:materialize-css:materialize_css:1.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:materialize_css:materialize-css:1.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:materialize_css:materialize_css:1.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:materialize:materialize-css:1.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:materialize:materialize_css:1.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:materialize-css:1.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:materialize_css:1.0.0:*:*:*:*:*:*:*"
          ],
          "language": "javascript",
          "licenses": [],
          "locations": [
            {
              "path": "packages/node/base/package-lock.json"
            }
          ],
          "name": "materialize-css",
          "purl": "pkg:npm/materialize-css@1.0.0",
          "type": "npm",
          "upstreams": [],
          "version": "1.0.0"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c=1.0.0 (unknown)"
            },
            "matcher": "javascript-matcher",
            "searchedBy": {
              "language": "javascript",
              "namespace": "github:language:javascript"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 4.3,
                  "exploitabilityScore": 8.6,
                  "impactScore": 2.9
                },
                "vector": "AV:N/AC:M/Au:N/C:N/I:P/A:N",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 6.1,
                  "exploitabilityScore": 2.8,
                  "impactScore": 2.7
                },
                "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
                "vendorMetadata": {},
                "version": "3.0"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2019-11002",
            "description": "In Materialize through 1.0.0, XSS is possible via the Tooltip feature.",
            "id": "CVE-2019-11002",
            "namespace": "nvd:cpe",
            "severity": "Medium",
            "urls": [
              "https://github.com/Dogfalo/materialize/issues/6286"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-98f7-p5rc-jx67",
          "description": "Cross-Site Scripting in materialize-css",
          "fix": {
            "state": "not-fixed",
            "versions": []
          },
          "id": "GHSA-98f7-p5rc-jx67",
          "namespace": "github:language:javascript",
          "severity": "Medium",
          "urls": [
            "https://github.com/advisories/GHSA-98f7-p5rc-jx67"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:materialize-css:materialize-css:1.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:materialize-css:materialize_css:1.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:materialize_css:materialize-css:1.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:materialize_css:materialize_css:1.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:materialize:materialize-css:1.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:materialize:materialize_css:1.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:materialize-css:1.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:materialize_css:1.0.0:*:*:*:*:*:*:*"
          ],
          "language": "javascript",
          "licenses": [
            ""
          ],
          "locations": [
            {
              "path": "packages/node/twistcli_test/package-lock.json"
            }
          ],
          "name": "materialize-css",
          "purl": "pkg:npm/materialize-css@1.0.0",
          "type": "npm",
          "upstreams": [],
          "version": "1.0.0"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c=1.0.0 (unknown)"
            },
            "matcher": "javascript-matcher",
            "searchedBy": {
              "language": "javascript",
              "namespace": "github:language:javascript"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 4.3,
                  "exploitabilityScore": 8.6,
                  "impactScore": 2.9
                },
                "vector": "AV:N/AC:M/Au:N/C:N/I:P/A:N",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 6.1,
                  "exploitabilityScore": 2.8,
                  "impactScore": 2.7
                },
                "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
                "vendorMetadata": {},
                "version": "3.0"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2019-11002",
            "description": "In Materialize through 1.0.0, XSS is possible via the Tooltip feature.",
            "id": "CVE-2019-11002",
            "namespace": "nvd:cpe",
            "severity": "Medium",
            "urls": [
              "https://github.com/Dogfalo/materialize/issues/6286"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-98f7-p5rc-jx67",
          "description": "Cross-Site Scripting in materialize-css",
          "fix": {
            "state": "not-fixed",
            "versions": []
          },
          "id": "GHSA-98f7-p5rc-jx67",
          "namespace": "github:language:javascript",
          "severity": "Medium",
          "urls": [
            "https://github.com/advisories/GHSA-98f7-p5rc-jx67"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:json5:json5:2.2.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:json5:2.2.0:*:*:*:*:*:*:*"
          ],
          "language": "javascript",
          "licenses": [],
          "locations": [
            {
              "path": "packages/node/base/package-lock.json"
            }
          ],
          "name": "json5",
          "purl": "pkg:npm/json5@2.2.0",
          "type": "npm",
          "upstreams": [],
          "version": "2.2.0"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003e=2.0.0,\u003c2.2.2 (unknown)"
            },
            "matcher": "javascript-matcher",
            "searchedBy": {
              "language": "javascript",
              "namespace": "github:language:javascript"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 8.8,
                  "exploitabilityScore": 2.8,
                  "impactScore": 5.9
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2022-46175",
            "description": "JSON5 is an extension to the popular JSON file format that aims to be easier to write and maintain by hand (e.g. for config files). The `parse` method of the JSON5 library before and including versions 1.0.1 and 2.2.1 does not restrict parsing of keys named `__proto__`, allowing specially crafted strings to pollute the prototype of the resulting object. This vulnerability pollutes the prototype of the object returned by `JSON5.parse` and not the global Object prototype, which is the commonly understood definition of Prototype Pollution. However, polluting the prototype of a single object can have significant security impact for an application if the object is later used in trusted operations. This vulnerability could allow an attacker to set arbitrary and unexpected keys on the object returned from `JSON5.parse`. The actual impact will depend on how applications utilize the returned object and how they filter unwanted keys, but could include denial of service, cross-site scripting, elevation of privilege, and in extreme cases, remote code execution. `JSON5.parse` should restrict parsing of `__proto__` keys when parsing JSON strings to objects. As a point of reference, the `JSON.parse` method included in JavaScript ignores `__proto__` keys. Simply changing `JSON5.parse` to `JSON.parse` in the examples above mitigates this vulnerability. This vulnerability is patched in json5 versions 1.0.2, 2.2.2, and later.",
            "id": "CVE-2022-46175",
            "namespace": "nvd:cpe",
            "severity": "High",
            "urls": [
              "https://github.com/json5/json5/security/advisories/GHSA-9c47-m6qq-7p4h",
              "https://github.com/json5/json5/issues/199",
              "https://github.com/json5/json5/issues/295",
              "https://github.com/json5/json5/pull/298",
              "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/3S26TLPLVFAJTUN3VIXFDEBEXDYO22CE/"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-9c47-m6qq-7p4h",
          "description": "Prototype Pollution in JSON5 via Parse Method",
          "fix": {
            "state": "fixed",
            "versions": [
              "2.2.2"
            ]
          },
          "id": "GHSA-9c47-m6qq-7p4h",
          "namespace": "github:language:javascript",
          "severity": "High",
          "urls": [
            "https://github.com/advisories/GHSA-9c47-m6qq-7p4h"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:node-forge:node-forge:0.10.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:node-forge:node_forge:0.10.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:node_forge:node-forge:0.10.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:node_forge:node_forge:0.10.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:node:node-forge:0.10.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:node:node_forge:0.10.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:node-forge:0.10.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:node_forge:0.10.0:*:*:*:*:*:*:*"
          ],
          "language": "javascript",
          "licenses": [],
          "locations": [
            {
              "path": "packages/node/base/package-lock.json"
            }
          ],
          "name": "node-forge",
          "purl": "pkg:npm/node-forge@0.10.0",
          "type": "npm",
          "upstreams": [],
          "version": "0.10.0"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c1.3.0 (unknown)"
            },
            "matcher": "javascript-matcher",
            "searchedBy": {
              "language": "javascript",
              "namespace": "github:language:javascript"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 5,
                  "exploitabilityScore": 10,
                  "impactScore": 2.9
                },
                "vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 7.5,
                  "exploitabilityScore": 3.9,
                  "impactScore": 3.6
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2022-24771",
            "description": "Forge (also called `node-forge`) is a native implementation of Transport Layer Security in JavaScript. Prior to version 1.3.0, RSA PKCS#1 v1.5 signature verification code is lenient in checking the digest algorithm structure. This can allow a crafted structure that steals padding bytes and uses unchecked portion of the PKCS#1 encoded message to forge a signature when a low public exponent is being used. The issue has been addressed in `node-forge` version 1.3.0. There are currently no known workarounds.",
            "id": "CVE-2022-24771",
            "namespace": "nvd:cpe",
            "severity": "High",
            "urls": [
              "https://github.com/digitalbazaar/forge/security/advisories/GHSA-cfm4-qjh2-4765",
              "https://github.com/digitalbazaar/forge/commit/3f0b49a0573ef1bb7af7f5673c0cfebf00424df1"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-cfm4-qjh2-4765",
          "description": "Improper Verification of Cryptographic Signature in node-forge",
          "fix": {
            "state": "fixed",
            "versions": [
              "1.3.0"
            ]
          },
          "id": "GHSA-cfm4-qjh2-4765",
          "namespace": "github:language:javascript",
          "severity": "High",
          "urls": [
            "https://github.com/advisories/GHSA-cfm4-qjh2-4765"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:@xmldom/xmldom:@xmldom/xmldom:0.7.5:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:@xmldom/xmldom:0.7.5:*:*:*:*:*:*:*"
          ],
          "language": "javascript",
          "licenses": [],
          "locations": [
            {
              "path": "packages/node/base/package-lock.json"
            }
          ],
          "name": "@xmldom/xmldom",
          "purl": "pkg:npm/%40xmldom/xmldom@0.7.5",
          "type": "npm",
          "upstreams": [],
          "version": "0.7.5"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c0.7.7 (unknown)"
            },
            "matcher": "javascript-matcher",
            "searchedBy": {
              "language": "javascript",
              "namespace": "github:language:javascript"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 9.8,
                  "exploitabilityScore": 3.9,
                  "impactScore": 5.9
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2022-39353",
            "description": "xmldom is a pure JavaScript W3C standard-based (XML DOM Level 2 Core) `DOMParser` and `XMLSerializer` module. xmldom parses XML that is not well-formed because it contains multiple top level elements, and adds all root nodes to the `childNodes` collection of the `Document`, without reporting any error or throwing. This breaks the assumption that there is only a single root node in the tree, which led to issuance of CVE-2022-39299 as it is a potential issue for dependents. Update to @xmldom/xmldom@~0.7.7, @xmldom/xmldom@~0.8.4 (dist-tag latest) or @xmldom/xmldom@\u003e=0.9.0-beta.4 (dist-tag next). As a workaround, please one of the following approaches depending on your use case: instead of searching for elements in the whole DOM, only search in the `documentElement`or reject a document with a document that has more then 1 `childNode`.",
            "id": "CVE-2022-39353",
            "namespace": "nvd:cpe",
            "severity": "Critical",
            "urls": [
              "https://github.com/jindw/xmldom/issues/150",
              "https://github.com/xmldom/xmldom/security/advisories/GHSA-crh6-fp67-6883",
              "https://lists.debian.org/debian-lts-announce/2023/01/msg00000.html"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-crh6-fp67-6883",
          "description": "xmldom allows multiple root nodes in a DOM",
          "fix": {
            "state": "fixed",
            "versions": [
              "0.7.7"
            ]
          },
          "id": "GHSA-crh6-fp67-6883",
          "namespace": "github:language:javascript",
          "severity": "Critical",
          "urls": [
            "https://github.com/advisories/GHSA-crh6-fp67-6883"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:xmldom:xmldom:0.5.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:xmldom:0.5.0:*:*:*:*:*:*:*"
          ],
          "language": "javascript",
          "licenses": [
            ""
          ],
          "locations": [
            {
              "path": "packages/node/twistcli_test/package-lock.json"
            }
          ],
          "name": "xmldom",
          "purl": "pkg:npm/xmldom@0.5.0",
          "type": "npm",
          "upstreams": [],
          "version": "0.5.0"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c=0.6.0 (unknown)"
            },
            "matcher": "javascript-matcher",
            "searchedBy": {
              "language": "javascript",
              "namespace": "github:language:javascript"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 9.8,
                  "exploitabilityScore": 3.9,
                  "impactScore": 5.9
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2022-39353",
            "description": "xmldom is a pure JavaScript W3C standard-based (XML DOM Level 2 Core) `DOMParser` and `XMLSerializer` module. xmldom parses XML that is not well-formed because it contains multiple top level elements, and adds all root nodes to the `childNodes` collection of the `Document`, without reporting any error or throwing. This breaks the assumption that there is only a single root node in the tree, which led to issuance of CVE-2022-39299 as it is a potential issue for dependents. Update to @xmldom/xmldom@~0.7.7, @xmldom/xmldom@~0.8.4 (dist-tag latest) or @xmldom/xmldom@\u003e=0.9.0-beta.4 (dist-tag next). As a workaround, please one of the following approaches depending on your use case: instead of searching for elements in the whole DOM, only search in the `documentElement`or reject a document with a document that has more then 1 `childNode`.",
            "id": "CVE-2022-39353",
            "namespace": "nvd:cpe",
            "severity": "Critical",
            "urls": [
              "https://github.com/jindw/xmldom/issues/150",
              "https://github.com/xmldom/xmldom/security/advisories/GHSA-crh6-fp67-6883",
              "https://lists.debian.org/debian-lts-announce/2023/01/msg00000.html"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-crh6-fp67-6883",
          "description": "xmldom allows multiple root nodes in a DOM",
          "fix": {
            "state": "not-fixed",
            "versions": []
          },
          "id": "GHSA-crh6-fp67-6883",
          "namespace": "github:language:javascript",
          "severity": "Critical",
          "urls": [
            "https://github.com/advisories/GHSA-crh6-fp67-6883"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:xmldom:xmldom:0.5.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:xmldom:0.5.0:*:*:*:*:*:*:*"
          ],
          "language": "javascript",
          "licenses": [],
          "locations": [
            {
              "path": "packages/node/base/package-lock.json"
            }
          ],
          "name": "xmldom",
          "purl": "pkg:npm/xmldom@0.5.0",
          "type": "npm",
          "upstreams": [],
          "version": "0.5.0"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c=0.6.0 (unknown)"
            },
            "matcher": "javascript-matcher",
            "searchedBy": {
              "language": "javascript",
              "namespace": "github:language:javascript"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 9.8,
                  "exploitabilityScore": 3.9,
                  "impactScore": 5.9
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2022-39353",
            "description": "xmldom is a pure JavaScript W3C standard-based (XML DOM Level 2 Core) `DOMParser` and `XMLSerializer` module. xmldom parses XML that is not well-formed because it contains multiple top level elements, and adds all root nodes to the `childNodes` collection of the `Document`, without reporting any error or throwing. This breaks the assumption that there is only a single root node in the tree, which led to issuance of CVE-2022-39299 as it is a potential issue for dependents. Update to @xmldom/xmldom@~0.7.7, @xmldom/xmldom@~0.8.4 (dist-tag latest) or @xmldom/xmldom@\u003e=0.9.0-beta.4 (dist-tag next). As a workaround, please one of the following approaches depending on your use case: instead of searching for elements in the whole DOM, only search in the `documentElement`or reject a document with a document that has more then 1 `childNode`.",
            "id": "CVE-2022-39353",
            "namespace": "nvd:cpe",
            "severity": "Critical",
            "urls": [
              "https://github.com/jindw/xmldom/issues/150",
              "https://github.com/xmldom/xmldom/security/advisories/GHSA-crh6-fp67-6883",
              "https://lists.debian.org/debian-lts-announce/2023/01/msg00000.html"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-crh6-fp67-6883",
          "description": "xmldom allows multiple root nodes in a DOM",
          "fix": {
            "state": "not-fixed",
            "versions": []
          },
          "id": "GHSA-crh6-fp67-6883",
          "namespace": "github:language:javascript",
          "severity": "Critical",
          "urls": [
            "https://github.com/advisories/GHSA-crh6-fp67-6883"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:commons-compress:commons-compress:1.15:*:*:*:*:*:*:*",
            "cpe:2.3:a:commons-compress:commons_compress:1.15:*:*:*:*:*:*:*",
            "cpe:2.3:a:commons_compress:commons-compress:1.15:*:*:*:*:*:*:*",
            "cpe:2.3:a:commons_compress:commons_compress:1.15:*:*:*:*:*:*:*",
            "cpe:2.3:a:commons:commons-compress:1.15:*:*:*:*:*:*:*",
            "cpe:2.3:a:commons:commons_compress:1.15:*:*:*:*:*:*:*"
          ],
          "language": "java",
          "licenses": [],
          "locations": [
            {
              "path": "packages/pom.xml"
            }
          ],
          "metadata": {
            "archiveDigests": null,
            "manifestName": "",
            "pomArtifactID": "",
            "pomGroupID": "",
            "virtualPath": ""
          },
          "metadataType": "JavaMetadata",
          "name": "commons-compress",
          "purl": "pkg:maven/org.apache.commons/commons-compress@1.15",
          "type": "java-archive",
          "upstreams": [],
          "version": "1.15"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c1.21 (unknown)"
            },
            "matcher": "java-matcher",
            "searchedBy": {
              "language": "java",
              "namespace": "github:language:java"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 5,
                  "exploitabilityScore": 10,
                  "impactScore": 2.9
                },
                "vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 7.5,
                  "exploitabilityScore": 3.9,
                  "impactScore": 3.6
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2021-35516",
            "description": "When reading a specially crafted 7Z archive, Compress can be made to allocate large amounts of memory that finally leads to an out of memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' sevenz package.",
            "id": "CVE-2021-35516",
            "namespace": "nvd:cpe",
            "severity": "High",
            "urls": [
              "https://commons.apache.org/proper/commons-compress/security-reports.html",
              "https://lists.apache.org/thread.html/rf68442d67eb166f4b6cf0bbbe6c7f99098c12954f37332073c9822ca%40%3Cuser.commons.apache.org%3E",
              "http://www.openwall.com/lists/oss-security/2021/07/13/2",
              "https://lists.apache.org/thread.html/rf5b1016fb15b7118b9a5e16bb0b78cb4f1dfcf7821eb137ab5757c91@%3Cannounce.apache.org%3E",
              "https://lists.apache.org/thread.html/rb064d705fdfa44b5dae4c366b369ef6597951083196321773b983e71@%3Ccommits.pulsar.apache.org%3E",
              "https://lists.apache.org/thread.html/rd4332baaf6debd03d60deb7ec93bee49e5fdbe958cb6800dff7fb00e@%3Cnotifications.skywalking.apache.org%3E",
              "https://lists.apache.org/thread.html/rb7adf3e55359819e77230b4586521e5c6874ce5ed93384bdc14d6aee@%3Cnotifications.skywalking.apache.org%3E",
              "https://lists.apache.org/thread.html/rfba19167efc785ad3561e7ef29f340d65ac8f0d897aed00e0731e742@%3Cnotifications.skywalking.apache.org%3E",
              "https://lists.apache.org/thread.html/r9f54c0caa462267e0cc68b49f141e91432b36b23348d18c65bd0d040@%3Cnotifications.skywalking.apache.org%3E",
              "https://lists.apache.org/thread.html/rba65ed5ddb0586f5b12598f55ec7db3633e7b7fede60466367fbf86a@%3Cnotifications.skywalking.apache.org%3E",
              "https://lists.apache.org/thread.html/racd0c0381c8404f298b226cd9db2eaae965b14c9c568224aa3f437ae@%3Cnotifications.skywalking.apache.org%3E",
              "https://lists.apache.org/thread.html/rb6e1fa80d34e5ada45f72655d84bfd90db0ca44ef19236a49198c88c@%3Cnotifications.skywalking.apache.org%3E",
              "https://lists.apache.org/thread.html/r67ef3c07fe3b8c1b02d48012149d280ad6da8e4cec253b527520fb2b@%3Cdev.poi.apache.org%3E",
              "https://www.oracle.com/security-alerts/cpuoct2021.html",
              "https://security.netapp.com/advisory/ntap-20211022-0001/",
              "https://www.oracle.com/security-alerts/cpujan2022.html",
              "https://www.oracle.com/security-alerts/cpuapr2022.html",
              "https://www.oracle.com/security-alerts/cpujul2022.html"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-crv7-7245-f45f",
          "description": "Improper Handling of Length Parameter Inconsistency in Compress",
          "fix": {
            "state": "fixed",
            "versions": [
              "1.21"
            ]
          },
          "id": "GHSA-crv7-7245-f45f",
          "namespace": "github:language:java",
          "severity": "High",
          "urls": [
            "https://github.com/advisories/GHSA-crv7-7245-f45f"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:commons-compress:commons-compress:1.20:*:*:*:*:*:*:*",
            "cpe:2.3:a:commons-compress:commons_compress:1.20:*:*:*:*:*:*:*",
            "cpe:2.3:a:commons_compress:commons-compress:1.20:*:*:*:*:*:*:*",
            "cpe:2.3:a:commons_compress:commons_compress:1.20:*:*:*:*:*:*:*",
            "cpe:2.3:a:commons:commons-compress:1.20:*:*:*:*:*:*:*",
            "cpe:2.3:a:commons:commons_compress:1.20:*:*:*:*:*:*:*"
          ],
          "language": "java",
          "licenses": [],
          "locations": [
            {
              "path": "packages/sub/pom.xml"
            }
          ],
          "metadata": {
            "archiveDigests": null,
            "manifestName": "",
            "pomArtifactID": "",
            "pomGroupID": "",
            "virtualPath": ""
          },
          "metadataType": "JavaMetadata",
          "name": "commons-compress",
          "purl": "pkg:maven/org.apache.commons/commons-compress@1.20",
          "type": "java-archive",
          "upstreams": [],
          "version": "1.20"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c1.21 (unknown)"
            },
            "matcher": "java-matcher",
            "searchedBy": {
              "language": "java",
              "namespace": "github:language:java"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 5,
                  "exploitabilityScore": 10,
                  "impactScore": 2.9
                },
                "vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 7.5,
                  "exploitabilityScore": 3.9,
                  "impactScore": 3.6
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2021-35516",
            "description": "When reading a specially crafted 7Z archive, Compress can be made to allocate large amounts of memory that finally leads to an out of memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' sevenz package.",
            "id": "CVE-2021-35516",
            "namespace": "nvd:cpe",
            "severity": "High",
            "urls": [
              "https://commons.apache.org/proper/commons-compress/security-reports.html",
              "https://lists.apache.org/thread.html/rf68442d67eb166f4b6cf0bbbe6c7f99098c12954f37332073c9822ca%40%3Cuser.commons.apache.org%3E",
              "http://www.openwall.com/lists/oss-security/2021/07/13/2",
              "https://lists.apache.org/thread.html/rf5b1016fb15b7118b9a5e16bb0b78cb4f1dfcf7821eb137ab5757c91@%3Cannounce.apache.org%3E",
              "https://lists.apache.org/thread.html/rb064d705fdfa44b5dae4c366b369ef6597951083196321773b983e71@%3Ccommits.pulsar.apache.org%3E",
              "https://lists.apache.org/thread.html/rd4332baaf6debd03d60deb7ec93bee49e5fdbe958cb6800dff7fb00e@%3Cnotifications.skywalking.apache.org%3E",
              "https://lists.apache.org/thread.html/rb7adf3e55359819e77230b4586521e5c6874ce5ed93384bdc14d6aee@%3Cnotifications.skywalking.apache.org%3E",
              "https://lists.apache.org/thread.html/rfba19167efc785ad3561e7ef29f340d65ac8f0d897aed00e0731e742@%3Cnotifications.skywalking.apache.org%3E",
              "https://lists.apache.org/thread.html/r9f54c0caa462267e0cc68b49f141e91432b36b23348d18c65bd0d040@%3Cnotifications.skywalking.apache.org%3E",
              "https://lists.apache.org/thread.html/rba65ed5ddb0586f5b12598f55ec7db3633e7b7fede60466367fbf86a@%3Cnotifications.skywalking.apache.org%3E",
              "https://lists.apache.org/thread.html/racd0c0381c8404f298b226cd9db2eaae965b14c9c568224aa3f437ae@%3Cnotifications.skywalking.apache.org%3E",
              "https://lists.apache.org/thread.html/rb6e1fa80d34e5ada45f72655d84bfd90db0ca44ef19236a49198c88c@%3Cnotifications.skywalking.apache.org%3E",
              "https://lists.apache.org/thread.html/r67ef3c07fe3b8c1b02d48012149d280ad6da8e4cec253b527520fb2b@%3Cdev.poi.apache.org%3E",
              "https://www.oracle.com/security-alerts/cpuoct2021.html",
              "https://security.netapp.com/advisory/ntap-20211022-0001/",
              "https://www.oracle.com/security-alerts/cpujan2022.html",
              "https://www.oracle.com/security-alerts/cpuapr2022.html",
              "https://www.oracle.com/security-alerts/cpujul2022.html"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-crv7-7245-f45f",
          "description": "Improper Handling of Length Parameter Inconsistency in Compress",
          "fix": {
            "state": "fixed",
            "versions": [
              "1.21"
            ]
          },
          "id": "GHSA-crv7-7245-f45f",
          "namespace": "github:language:java",
          "severity": "High",
          "urls": [
            "https://github.com/advisories/GHSA-crv7-7245-f45f"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:minimatch:minimatch:3.0.4:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:minimatch:3.0.4:*:*:*:*:*:*:*"
          ],
          "language": "javascript",
          "licenses": [],
          "locations": [
            {
              "path": "packages/node/base/package-lock.json"
            }
          ],
          "name": "minimatch",
          "purl": "pkg:npm/minimatch@3.0.4",
          "type": "npm",
          "upstreams": [],
          "version": "3.0.4"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c3.0.5 (unknown)"
            },
            "matcher": "javascript-matcher",
            "searchedBy": {
              "language": "javascript",
              "namespace": "github:language:javascript"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 7.5,
                  "exploitabilityScore": 3.9,
                  "impactScore": 3.6
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2022-3517",
            "description": "A vulnerability was found in the minimatch package. This flaw allows a Regular Expression Denial of Service (ReDoS) when calling the braceExpand function with specific arguments, resulting in a Denial of Service.",
            "id": "CVE-2022-3517",
            "namespace": "nvd:cpe",
            "severity": "High",
            "urls": [
              "https://github.com/grafana/grafana-image-renderer/issues/329",
              "https://github.com/isaacs/minimatch/commit/a8763f4388e51956be62dc6025cec1126beeb5e6",
              "https://lists.debian.org/debian-lts-announce/2023/01/msg00011.html",
              "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MTEUUTNIEBHGKUKKLNUZSV7IEP6IP3Q3/",
              "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UM6XJ73Q3NAM5KSGCOKJ2ZIA6GUWUJLK/"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-f8q6-p94x-37v3",
          "description": "minimatch ReDoS vulnerability",
          "fix": {
            "state": "fixed",
            "versions": [
              "3.0.5"
            ]
          },
          "id": "GHSA-f8q6-p94x-37v3",
          "namespace": "github:language:javascript",
          "severity": "High",
          "urls": [
            "https://github.com/advisories/GHSA-f8q6-p94x-37v3"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:ua-parser-js:ua-parser-js:0.7.31:*:*:*:*:*:*:*",
            "cpe:2.3:a:ua-parser-js:ua_parser_js:0.7.31:*:*:*:*:*:*:*",
            "cpe:2.3:a:ua_parser_js:ua-parser-js:0.7.31:*:*:*:*:*:*:*",
            "cpe:2.3:a:ua_parser_js:ua_parser_js:0.7.31:*:*:*:*:*:*:*",
            "cpe:2.3:a:ua-parser:ua-parser-js:0.7.31:*:*:*:*:*:*:*",
            "cpe:2.3:a:ua-parser:ua_parser_js:0.7.31:*:*:*:*:*:*:*",
            "cpe:2.3:a:ua_parser:ua-parser-js:0.7.31:*:*:*:*:*:*:*",
            "cpe:2.3:a:ua_parser:ua_parser_js:0.7.31:*:*:*:*:*:*:*",
            "cpe:2.3:a:ua:ua-parser-js:0.7.31:*:*:*:*:*:*:*",
            "cpe:2.3:a:ua:ua_parser_js:0.7.31:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:ua-parser-js:0.7.31:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:ua_parser_js:0.7.31:*:*:*:*:*:*:*"
          ],
          "language": "javascript",
          "licenses": [],
          "locations": [
            {
              "path": "packages/node/base/package-lock.json"
            }
          ],
          "name": "ua-parser-js",
          "purl": "pkg:npm/ua-parser-js@0.7.31",
          "type": "npm",
          "upstreams": [],
          "version": "0.7.31"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c0.7.33 (unknown)"
            },
            "matcher": "javascript-matcher",
            "searchedBy": {
              "language": "javascript",
              "namespace": "github:language:javascript"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 7.5,
                  "exploitabilityScore": 3.9,
                  "impactScore": 3.6
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2022-25927",
            "description": "Versions of the package ua-parser-js from 0.7.30 and before 0.7.33, from 0.8.1 and before 1.0.33 are vulnerable to Regular Expression Denial of Service (ReDoS) via the trim() function.",
            "id": "CVE-2022-25927",
            "namespace": "nvd:cpe",
            "severity": "High",
            "urls": [
              "https://security.snyk.io/vuln/SNYK-JS-UAPARSERJS-3244450",
              "https://github.com/faisalman/ua-parser-js/commit/a6140a17dd0300a35cfc9cff999545f267889411"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-fhg7-m89q-25r3",
          "description": "ReDoS Vulnerability in ua-parser-js version ",
          "fix": {
            "state": "fixed",
            "versions": [
              "0.7.33"
            ]
          },
          "id": "GHSA-fhg7-m89q-25r3",
          "namespace": "github:language:javascript",
          "severity": "High",
          "urls": [
            "https://github.com/advisories/GHSA-fhg7-m89q-25r3"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:python-django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:django:1.2:*:*:*:*:*:*:*"
          ],
          "language": "python",
          "licenses": [],
          "locations": [
            {
              "path": "packages/sub/.hidden/requirements.txt"
            }
          ],
          "name": "django",
          "purl": "pkg:pypi/django@1.2",
          "type": "python",
          "upstreams": [],
          "version": "1.2"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003e=1.2.0,\u003c1.2.4 (python)"
            },
            "matcher": "python-matcher",
            "searchedBy": {
              "language": "python",
              "namespace": "github:language:python"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 4,
                  "exploitabilityScore": 8,
                  "impactScore": 2.9
                },
                "vector": "AV:N/AC:L/Au:S/C:P/I:N/A:N",
                "vendorMetadata": {},
                "version": "2.0"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2010-4534",
            "description": "The administrative interface in django.contrib.admin in Django before 1.1.3, 1.2.x before 1.2.4, and 1.3.x before 1.3 beta 1 does not properly restrict use of the query string to perform certain object filtering, which allows remote authenticated users to obtain sensitive information via a series of requests containing regular expressions, as demonstrated by a created_by__password__regex parameter.",
            "id": "CVE-2010-4534",
            "namespace": "nvd:cpe",
            "severity": "Medium",
            "urls": [
              "http://archives.neohapsis.com/archives/fulldisclosure/2010-12/0580.html",
              "http://evilpacket.net/2010/dec/22/information-leakage-django-administrative-interfac/",
              "http://code.djangoproject.com/changeset/15031",
              "http://ngenuity-is.com/advisories/2010/dec/22/information-leakage-in-django-administrative-inter/",
              "https://bugzilla.redhat.com/show_bug.cgi?id=665373",
              "http://secunia.com/advisories/42715",
              "http://www.djangoproject.com/weblog/2010/dec/22/security/",
              "http://www.openwall.com/lists/oss-security/2010/12/23/4",
              "http://www.openwall.com/lists/oss-security/2011/01/03/5",
              "http://lists.fedoraproject.org/pipermail/package-announce/2011-January/053072.html",
              "http://www.vupen.com/english/advisories/2011/0048",
              "http://lists.fedoraproject.org/pipermail/package-announce/2011-January/053041.html",
              "http://secunia.com/advisories/42827",
              "http://www.ubuntu.com/usn/USN-1040-1",
              "http://www.vupen.com/english/advisories/2011/0098",
              "http://www.securityfocus.com/archive/1/515446",
              "http://secunia.com/advisories/42913",
              "http://www.securityfocus.com/bid/45562"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-fwr5-q9rx-294f",
          "description": "Moderate severity vulnerability that affects django",
          "fix": {
            "state": "fixed",
            "versions": [
              "1.2.4"
            ]
          },
          "id": "GHSA-fwr5-q9rx-294f",
          "namespace": "github:language:python",
          "severity": "Medium",
          "urls": [
            "https://github.com/advisories/GHSA-fwr5-q9rx-294f"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:python-django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:django:1.2:*:*:*:*:*:*:*"
          ],
          "language": "python",
          "licenses": [],
          "locations": [
            {
              "path": "packages/requirements.txt"
            }
          ],
          "name": "django",
          "purl": "pkg:pypi/django@1.2",
          "type": "python",
          "upstreams": [],
          "version": "1.2"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003e=1.2.0,\u003c1.2.4 (python)"
            },
            "matcher": "python-matcher",
            "searchedBy": {
              "language": "python",
              "namespace": "github:language:python"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 4,
                  "exploitabilityScore": 8,
                  "impactScore": 2.9
                },
                "vector": "AV:N/AC:L/Au:S/C:P/I:N/A:N",
                "vendorMetadata": {},
                "version": "2.0"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2010-4534",
            "description": "The administrative interface in django.contrib.admin in Django before 1.1.3, 1.2.x before 1.2.4, and 1.3.x before 1.3 beta 1 does not properly restrict use of the query string to perform certain object filtering, which allows remote authenticated users to obtain sensitive information via a series of requests containing regular expressions, as demonstrated by a created_by__password__regex parameter.",
            "id": "CVE-2010-4534",
            "namespace": "nvd:cpe",
            "severity": "Medium",
            "urls": [
              "http://archives.neohapsis.com/archives/fulldisclosure/2010-12/0580.html",
              "http://evilpacket.net/2010/dec/22/information-leakage-django-administrative-interfac/",
              "http://code.djangoproject.com/changeset/15031",
              "http://ngenuity-is.com/advisories/2010/dec/22/information-leakage-in-django-administrative-inter/",
              "https://bugzilla.redhat.com/show_bug.cgi?id=665373",
              "http://secunia.com/advisories/42715",
              "http://www.djangoproject.com/weblog/2010/dec/22/security/",
              "http://www.openwall.com/lists/oss-security/2010/12/23/4",
              "http://www.openwall.com/lists/oss-security/2011/01/03/5",
              "http://lists.fedoraproject.org/pipermail/package-announce/2011-January/053072.html",
              "http://www.vupen.com/english/advisories/2011/0048",
              "http://lists.fedoraproject.org/pipermail/package-announce/2011-January/053041.html",
              "http://secunia.com/advisories/42827",
              "http://www.ubuntu.com/usn/USN-1040-1",
              "http://www.vupen.com/english/advisories/2011/0098",
              "http://www.securityfocus.com/archive/1/515446",
              "http://secunia.com/advisories/42913",
              "http://www.securityfocus.com/bid/45562"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-fwr5-q9rx-294f",
          "description": "Moderate severity vulnerability that affects django",
          "fix": {
            "state": "fixed",
            "versions": [
              "1.2.4"
            ]
          },
          "id": "GHSA-fwr5-q9rx-294f",
          "namespace": "github:language:python",
          "severity": "Medium",
          "urls": [
            "https://github.com/advisories/GHSA-fwr5-q9rx-294f"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:async:async:2.6.3:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:async:2.6.3:*:*:*:*:*:*:*"
          ],
          "language": "javascript",
          "licenses": [],
          "locations": [
            {
              "path": "packages/node/base/package-lock.json"
            }
          ],
          "name": "async",
          "purl": "pkg:npm/async@2.6.3",
          "type": "npm",
          "upstreams": [],
          "version": "2.6.3"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003e=2.0.0,\u003c2.6.4 (unknown)"
            },
            "matcher": "javascript-matcher",
            "searchedBy": {
              "language": "javascript",
              "namespace": "github:language:javascript"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 6.8,
                  "exploitabilityScore": 8.6,
                  "impactScore": 6.4
                },
                "vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 7.8,
                  "exploitabilityScore": 1.8,
                  "impactScore": 5.9
                },
                "vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2021-43138",
            "description": "In Async before 2.6.4 and 3.x before 3.2.2, a malicious user can obtain privileges via the mapValues() method, aka lib/internal/iterator.js createObjectIterator prototype pollution.",
            "id": "CVE-2021-43138",
            "namespace": "nvd:cpe",
            "severity": "High",
            "urls": [
              "https://github.com/caolan/async/blob/master/lib/mapValuesLimit.js",
              "https://jsfiddle.net/oz5twjd9/",
              "https://github.com/caolan/async/blob/master/lib/internal/iterator.js",
              "https://github.com/caolan/async/commit/e1ecdbf79264f9ab488c7799f4c76996d5dca66d",
              "https://github.com/caolan/async/pull/1828",
              "https://github.com/caolan/async/blob/v2.6.4/CHANGELOG.md#v264",
              "https://github.com/caolan/async/compare/v2.6.3...v2.6.4",
              "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MTEUUTNIEBHGKUKKLNUZSV7IEP6IP3Q3/",
              "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UM6XJ73Q3NAM5KSGCOKJ2ZIA6GUWUJLK/"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-fwr7-v2mv-hh25",
          "description": "Prototype Pollution in async",
          "fix": {
            "state": "fixed",
            "versions": [
              "2.6.4"
            ]
          },
          "id": "GHSA-fwr7-v2mv-hh25",
          "namespace": "github:language:javascript",
          "severity": "High",
          "urls": [
            "https://github.com/advisories/GHSA-fwr7-v2mv-hh25"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:python-django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:django:1.2:*:*:*:*:*:*:*"
          ],
          "language": "python",
          "licenses": [],
          "locations": [
            {
              "path": "packages/requirements.txt"
            }
          ],
          "name": "django",
          "purl": "pkg:pypi/django@1.2",
          "type": "python",
          "upstreams": [],
          "version": "1.2"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003e=1.2.0,\u003c1.2.2 (python)"
            },
            "matcher": "python-matcher",
            "searchedBy": {
              "language": "python",
              "namespace": "github:language:python"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 4.3,
                  "exploitabilityScore": 8.6,
                  "impactScore": 2.9
                },
                "vector": "AV:N/AC:M/Au:N/C:N/I:P/A:N",
                "vendorMetadata": {},
                "version": "2.0"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2010-3082",
            "description": "Cross-site scripting (XSS) vulnerability in Django 1.2.x before 1.2.2 allows remote attackers to inject arbitrary web script or HTML via a csrfmiddlewaretoken (aka csrf_token) cookie.",
            "id": "CVE-2010-3082",
            "namespace": "nvd:cpe",
            "severity": "Medium",
            "urls": [
              "https://bugzilla.redhat.com/show_bug.cgi?id=632239",
              "http://marc.info/?l=oss-security\u0026m=128403961700444\u0026w=2",
              "http://www.djangoproject.com/weblog/2010/sep/08/security-release/",
              "http://www.securityfocus.com/bid/43116",
              "http://www.ubuntu.com/usn/USN-1004-1",
              "https://exchange.xforce.ibmcloud.com/vulnerabilities/61729"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-fxpg-gg9g-76gj",
          "description": "Moderate severity vulnerability that affects django",
          "fix": {
            "state": "fixed",
            "versions": [
              "1.2.2"
            ]
          },
          "id": "GHSA-fxpg-gg9g-76gj",
          "namespace": "github:language:python",
          "severity": "Medium",
          "urls": [
            "https://github.com/advisories/GHSA-fxpg-gg9g-76gj"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:python-django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:django:1.2:*:*:*:*:*:*:*"
          ],
          "language": "python",
          "licenses": [],
          "locations": [
            {
              "path": "packages/sub/.hidden/requirements.txt"
            }
          ],
          "name": "django",
          "purl": "pkg:pypi/django@1.2",
          "type": "python",
          "upstreams": [],
          "version": "1.2"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003e=1.2.0,\u003c1.2.2 (python)"
            },
            "matcher": "python-matcher",
            "searchedBy": {
              "language": "python",
              "namespace": "github:language:python"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 4.3,
                  "exploitabilityScore": 8.6,
                  "impactScore": 2.9
                },
                "vector": "AV:N/AC:M/Au:N/C:N/I:P/A:N",
                "vendorMetadata": {},
                "version": "2.0"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2010-3082",
            "description": "Cross-site scripting (XSS) vulnerability in Django 1.2.x before 1.2.2 allows remote attackers to inject arbitrary web script or HTML via a csrfmiddlewaretoken (aka csrf_token) cookie.",
            "id": "CVE-2010-3082",
            "namespace": "nvd:cpe",
            "severity": "Medium",
            "urls": [
              "https://bugzilla.redhat.com/show_bug.cgi?id=632239",
              "http://marc.info/?l=oss-security\u0026m=128403961700444\u0026w=2",
              "http://www.djangoproject.com/weblog/2010/sep/08/security-release/",
              "http://www.securityfocus.com/bid/43116",
              "http://www.ubuntu.com/usn/USN-1004-1",
              "https://exchange.xforce.ibmcloud.com/vulnerabilities/61729"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-fxpg-gg9g-76gj",
          "description": "Moderate severity vulnerability that affects django",
          "fix": {
            "state": "fixed",
            "versions": [
              "1.2.2"
            ]
          },
          "id": "GHSA-fxpg-gg9g-76gj",
          "namespace": "github:language:python",
          "severity": "Medium",
          "urls": [
            "https://github.com/advisories/GHSA-fxpg-gg9g-76gj"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:springsource-spring-framework:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource_spring_framework:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource-spring:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource_spring:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:pivotal_software:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring-framework:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring_framework:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource-spring-framework:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource_spring_framework:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring-core:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring_core:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource-spring-framework:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource-spring-framework:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource_spring_framework:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource_spring_framework:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource-spring:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource_spring:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:vmware:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:pivotal_software:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring-framework:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring_framework:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource-spring:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource-spring:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource_spring:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource_spring:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:pivotal_software:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:pivotal_software:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring-core:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring-framework:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring-framework:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring_core:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring_framework:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring_framework:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring-core:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring-core:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring_core:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring_core:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:vmware:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:vmware:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:vmware:spring_core:5.3.0:*:*:*:*:*:*:*"
          ],
          "language": "java",
          "licenses": [],
          "locations": [
            {
              "path": "packages/sub/pom.xml"
            }
          ],
          "metadata": {
            "archiveDigests": null,
            "manifestName": "",
            "pomArtifactID": "",
            "pomGroupID": "",
            "virtualPath": ""
          },
          "metadataType": "JavaMetadata",
          "name": "spring-core",
          "purl": "pkg:maven/org.springframework/spring-core@5.3.0",
          "type": "java-archive",
          "upstreams": [],
          "version": "5.3.0"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003e=5.3.0,\u003c5.3.19 (unknown)"
            },
            "matcher": "java-matcher",
            "searchedBy": {
              "language": "java",
              "namespace": "github:language:java"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 5,
                  "exploitabilityScore": 10,
                  "impactScore": 2.9
                },
                "vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 5.3,
                  "exploitabilityScore": 3.9,
                  "impactScore": 1.4
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2022-22968",
            "description": "In Spring Framework versions 5.3.0 - 5.3.18, 5.2.0 - 5.2.20, and older unsupported versions, the patterns for disallowedFields on a DataBinder are case sensitive which means a field is not effectively protected unless it is listed with both upper and lower case for the first character of the field, including upper and lower case for the first character of all nested fields within the property path.",
            "id": "CVE-2022-22968",
            "namespace": "nvd:cpe",
            "severity": "Medium",
            "urls": [
              "https://tanzu.vmware.com/security/cve-2022-22968",
              "https://security.netapp.com/advisory/ntap-20220602-0004/",
              "https://www.oracle.com/security-alerts/cpujul2022.html"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-g5mm-vmx4-3rg7",
          "description": "Improper handling of case sensitivity in Spring Framework",
          "fix": {
            "state": "fixed",
            "versions": [
              "5.3.19"
            ]
          },
          "id": "GHSA-g5mm-vmx4-3rg7",
          "namespace": "github:language:java",
          "severity": "High",
          "urls": [
            "https://github.com/advisories/GHSA-g5mm-vmx4-3rg7"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:node-forge:node-forge:0.10.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:node-forge:node_forge:0.10.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:node_forge:node-forge:0.10.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:node_forge:node_forge:0.10.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:node:node-forge:0.10.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:node:node_forge:0.10.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:node-forge:0.10.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:node_forge:0.10.0:*:*:*:*:*:*:*"
          ],
          "language": "javascript",
          "licenses": [],
          "locations": [
            {
              "path": "packages/node/base/package-lock.json"
            }
          ],
          "name": "node-forge",
          "purl": "pkg:npm/node-forge@0.10.0",
          "type": "npm",
          "upstreams": [],
          "version": "0.10.0"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c1.0.0 (unknown)"
            },
            "matcher": "javascript-matcher",
            "searchedBy": {
              "language": "javascript",
              "namespace": "github:language:javascript"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-gf8q-jrpm-jvxq",
          "description": "URL parsing in node-forge could lead to undesired behavior.",
          "fix": {
            "state": "fixed",
            "versions": [
              "1.0.0"
            ]
          },
          "id": "GHSA-gf8q-jrpm-jvxq",
          "namespace": "github:language:javascript",
          "severity": "Low",
          "urls": [
            "https://github.com/advisories/GHSA-gf8q-jrpm-jvxq"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:springsource-spring-framework:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource_spring_framework:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource-spring:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource_spring:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:pivotal_software:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring-framework:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring_framework:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource-spring-framework:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource_spring_framework:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring-core:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring_core:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource-spring-framework:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource-spring-framework:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource_spring_framework:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource_spring_framework:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource-spring:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource_spring:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:vmware:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:pivotal_software:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring-framework:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring_framework:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource-spring:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource-spring:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource_spring:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource_spring:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:pivotal_software:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:pivotal_software:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring-core:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring-framework:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring-framework:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring_core:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring_framework:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring_framework:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring-core:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring-core:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring_core:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring_core:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:vmware:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:vmware:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:vmware:spring_core:5.3.0:*:*:*:*:*:*:*"
          ],
          "language": "java",
          "licenses": [],
          "locations": [
            {
              "path": "packages/sub/pom.xml"
            }
          ],
          "metadata": {
            "archiveDigests": null,
            "manifestName": "",
            "pomArtifactID": "",
            "pomGroupID": "",
            "virtualPath": ""
          },
          "metadataType": "JavaMetadata",
          "name": "spring-core",
          "purl": "pkg:maven/org.springframework/spring-core@5.3.0",
          "type": "java-archive",
          "upstreams": [],
          "version": "5.3.0"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003e=5.3.0,\u003c=5.3.6 (unknown)"
            },
            "matcher": "java-matcher",
            "searchedBy": {
              "language": "java",
              "namespace": "github:language:java"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 4.6,
                  "exploitabilityScore": 3.9,
                  "impactScore": 6.4
                },
                "vector": "AV:L/AC:L/Au:N/C:P/I:P/A:P",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 7.8,
                  "exploitabilityScore": 1.8,
                  "impactScore": 5.9
                },
                "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2021-22118",
            "description": "In Spring Framework, versions 5.2.x prior to 5.2.15 and versions 5.3.x prior to 5.3.7, a WebFlux application is vulnerable to a privilege escalation: by (re)creating the temporary storage directory, a locally authenticated malicious user can read or modify files that have been uploaded to the WebFlux application, or overwrite arbitrary files with multipart request data.",
            "id": "CVE-2021-22118",
            "namespace": "nvd:cpe",
            "severity": "High",
            "urls": [
              "https://tanzu.vmware.com/security/cve-2021-22118",
              "https://security.netapp.com/advisory/ntap-20210713-0005/",
              "https://www.oracle.com//security-alerts/cpujul2021.html",
              "https://www.oracle.com/security-alerts/cpuoct2021.html",
              "https://www.oracle.com/security-alerts/cpujan2022.html",
              "https://www.oracle.com/security-alerts/cpuapr2022.html",
              "https://www.oracle.com/security-alerts/cpujul2022.html"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-gfwj-fwqj-fp3v",
          "description": "Improper Privilege Management in Spring Framework",
          "fix": {
            "state": "fixed",
            "versions": [
              "5.3.7"
            ]
          },
          "id": "GHSA-gfwj-fwqj-fp3v",
          "namespace": "github:language:java",
          "severity": "High",
          "urls": [
            "https://github.com/advisories/GHSA-gfwj-fwqj-fp3v"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:commons-compress:commons-compress:1.15:*:*:*:*:*:*:*",
            "cpe:2.3:a:commons-compress:commons_compress:1.15:*:*:*:*:*:*:*",
            "cpe:2.3:a:commons_compress:commons-compress:1.15:*:*:*:*:*:*:*",
            "cpe:2.3:a:commons_compress:commons_compress:1.15:*:*:*:*:*:*:*",
            "cpe:2.3:a:commons:commons-compress:1.15:*:*:*:*:*:*:*",
            "cpe:2.3:a:commons:commons_compress:1.15:*:*:*:*:*:*:*"
          ],
          "language": "java",
          "licenses": [],
          "locations": [
            {
              "path": "packages/pom.xml"
            }
          ],
          "metadata": {
            "archiveDigests": null,
            "manifestName": "",
            "pomArtifactID": "",
            "pomGroupID": "",
            "virtualPath": ""
          },
          "metadataType": "JavaMetadata",
          "name": "commons-compress",
          "purl": "pkg:maven/org.apache.commons/commons-compress@1.15",
          "type": "java-archive",
          "upstreams": [],
          "version": "1.15"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003e=1.11,\u003c=1.15 (unknown)"
            },
            "matcher": "java-matcher",
            "searchedBy": {
              "language": "java",
              "namespace": "github:language:java"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 4.3,
                  "exploitabilityScore": 8.6,
                  "impactScore": 2.9
                },
                "vector": "AV:N/AC:M/Au:N/C:N/I:N/A:P",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 5.5,
                  "exploitabilityScore": 1.8,
                  "impactScore": 3.6
                },
                "vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2018-1324",
            "description": "A specially crafted ZIP archive can be used to cause an infinite loop inside of Apache Commons Compress' extra field parser used by the ZipFile and ZipArchiveInputStream classes in versions 1.11 to 1.15. This can be used to mount a denial of service attack against services that use Compress' zip package.",
            "id": "CVE-2018-1324",
            "namespace": "nvd:cpe",
            "severity": "Medium",
            "urls": [
              "https://lists.apache.org/thread.html/1c7b6df6d1c5c8583518a0afa017782924918e4d6acfaf23ed5b2089@%3Cdev.commons.apache.org%3E",
              "http://www.securitytracker.com/id/1040549",
              "http://www.securityfocus.com/bid/103490",
              "https://lists.apache.org/thread.html/ff8dcfe29377088ab655fda9d585dccd5b1f07fabd94ae84fd60a7f8@%3Ccommits.pulsar.apache.org%3E",
              "https://lists.apache.org/thread.html/b8ef29df0f1d55aa741170748352ae8e425c7b1d286b2f257711a2dd@%3Cdev.creadur.apache.org%3E",
              "https://lists.apache.org/thread.html/r5532dc8d5456b5151e8c286801e2e5769f5c04118b29c3b5d13ea387@%3Cissues.beam.apache.org%3E",
              "https://www.oracle.com/security-alerts/cpujan2022.html"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-h436-432x-8fvx",
          "description": "Infinite loop in org.apache.commons:commons-compress",
          "fix": {
            "state": "fixed",
            "versions": [
              "1.16"
            ]
          },
          "id": "GHSA-h436-432x-8fvx",
          "namespace": "github:language:java",
          "severity": "Medium",
          "urls": [
            "https://github.com/advisories/GHSA-h436-432x-8fvx"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:python-django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:django:1.2:*:*:*:*:*:*:*"
          ],
          "language": "python",
          "licenses": [],
          "locations": [
            {
              "path": "packages/requirements.txt"
            }
          ],
          "name": "django",
          "purl": "pkg:pypi/django@1.2",
          "type": "python",
          "upstreams": [],
          "version": "1.2"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c1.4.21 (python)"
            },
            "matcher": "python-matcher",
            "searchedBy": {
              "language": "python",
              "namespace": "github:language:python"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 7.8,
                  "exploitabilityScore": 10,
                  "impactScore": 6.9
                },
                "vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C",
                "vendorMetadata": {},
                "version": "2.0"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2015-5143",
            "description": "The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",
            "id": "CVE-2015-5143",
            "namespace": "nvd:cpe",
            "severity": "High",
            "urls": [
              "http://www.ubuntu.com/usn/USN-2671-1",
              "http://www.debian.org/security/2015/dsa-3305",
              "https://www.djangoproject.com/weblog/2015/jul/08/security-releases/",
              "http://www.oracle.com/technetwork/topics/security/bulletinoct2015-2511968.html",
              "http://www.securityfocus.com/bid/75666",
              "https://security.gentoo.org/glsa/201510-06",
              "http://lists.fedoraproject.org/pipermail/package-announce/2015-November/172084.html",
              "http://rhn.redhat.com/errata/RHSA-2015-1686.html",
              "http://rhn.redhat.com/errata/RHSA-2015-1678.html",
              "http://lists.opensuse.org/opensuse-updates/2015-10/msg00046.html",
              "http://lists.opensuse.org/opensuse-updates/2015-10/msg00043.html",
              "http://www.securitytracker.com/id/1032820"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-h582-2pch-3xv3",
          "description": "High severity vulnerability that affects django",
          "fix": {
            "state": "fixed",
            "versions": [
              "1.4.21"
            ]
          },
          "id": "GHSA-h582-2pch-3xv3",
          "namespace": "github:language:python",
          "severity": "High",
          "urls": [
            "https://github.com/advisories/GHSA-h582-2pch-3xv3"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:python-django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:django:1.2:*:*:*:*:*:*:*"
          ],
          "language": "python",
          "licenses": [],
          "locations": [
            {
              "path": "packages/sub/.hidden/requirements.txt"
            }
          ],
          "name": "django",
          "purl": "pkg:pypi/django@1.2",
          "type": "python",
          "upstreams": [],
          "version": "1.2"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c1.4.21 (python)"
            },
            "matcher": "python-matcher",
            "searchedBy": {
              "language": "python",
              "namespace": "github:language:python"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 7.8,
                  "exploitabilityScore": 10,
                  "impactScore": 6.9
                },
                "vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C",
                "vendorMetadata": {},
                "version": "2.0"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2015-5143",
            "description": "The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",
            "id": "CVE-2015-5143",
            "namespace": "nvd:cpe",
            "severity": "High",
            "urls": [
              "http://www.ubuntu.com/usn/USN-2671-1",
              "http://www.debian.org/security/2015/dsa-3305",
              "https://www.djangoproject.com/weblog/2015/jul/08/security-releases/",
              "http://www.oracle.com/technetwork/topics/security/bulletinoct2015-2511968.html",
              "http://www.securityfocus.com/bid/75666",
              "https://security.gentoo.org/glsa/201510-06",
              "http://lists.fedoraproject.org/pipermail/package-announce/2015-November/172084.html",
              "http://rhn.redhat.com/errata/RHSA-2015-1686.html",
              "http://rhn.redhat.com/errata/RHSA-2015-1678.html",
              "http://lists.opensuse.org/opensuse-updates/2015-10/msg00046.html",
              "http://lists.opensuse.org/opensuse-updates/2015-10/msg00043.html",
              "http://www.securitytracker.com/id/1032820"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-h582-2pch-3xv3",
          "description": "High severity vulnerability that affects django",
          "fix": {
            "state": "fixed",
            "versions": [
              "1.4.21"
            ]
          },
          "id": "GHSA-h582-2pch-3xv3",
          "namespace": "github:language:python",
          "severity": "High",
          "urls": [
            "https://github.com/advisories/GHSA-h582-2pch-3xv3"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:python-django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:django:1.2:*:*:*:*:*:*:*"
          ],
          "language": "python",
          "licenses": [],
          "locations": [
            {
              "path": "packages/sub/.hidden/requirements.txt"
            }
          ],
          "name": "django",
          "purl": "pkg:pypi/django@1.2",
          "type": "python",
          "upstreams": [],
          "version": "1.2"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c1.2.7 (python)"
            },
            "matcher": "python-matcher",
            "searchedBy": {
              "language": "python",
              "namespace": "github:language:python"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 6.8,
                  "exploitabilityScore": 8.6,
                  "impactScore": 6.4
                },
                "vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
                "vendorMetadata": {},
                "version": "2.0"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2011-4140",
            "description": "The CSRF protection mechanism in Django through 1.2.7 and 1.3.x through 1.3.1 does not properly handle web-server configurations supporting arbitrary HTTP Host headers, which allows remote attackers to trigger unauthenticated forged requests via vectors involving a DNS CNAME record and a web page containing JavaScript code.",
            "id": "CVE-2011-4140",
            "namespace": "nvd:cpe",
            "severity": "Medium",
            "urls": [
              "https://bugzilla.redhat.com/show_bug.cgi?id=737366",
              "http://openwall.com/lists/oss-security/2011/09/11/1",
              "https://www.djangoproject.com/weblog/2011/sep/09/",
              "http://openwall.com/lists/oss-security/2011/09/13/2",
              "https://www.djangoproject.com/weblog/2011/sep/10/127/",
              "http://secunia.com/advisories/46614",
              "http://www.debian.org/security/2011/dsa-2332",
              "https://hermes.opensuse.org/messages/14700881"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-h95j-h2rv-qrg4",
          "description": "Moderate severity vulnerability that affects django",
          "fix": {
            "state": "fixed",
            "versions": [
              "1.2.7"
            ]
          },
          "id": "GHSA-h95j-h2rv-qrg4",
          "namespace": "github:language:python",
          "severity": "Medium",
          "urls": [
            "https://github.com/advisories/GHSA-h95j-h2rv-qrg4"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:python-django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:django:1.2:*:*:*:*:*:*:*"
          ],
          "language": "python",
          "licenses": [],
          "locations": [
            {
              "path": "packages/requirements.txt"
            }
          ],
          "name": "django",
          "purl": "pkg:pypi/django@1.2",
          "type": "python",
          "upstreams": [],
          "version": "1.2"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c1.2.7 (python)"
            },
            "matcher": "python-matcher",
            "searchedBy": {
              "language": "python",
              "namespace": "github:language:python"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 6.8,
                  "exploitabilityScore": 8.6,
                  "impactScore": 6.4
                },
                "vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
                "vendorMetadata": {},
                "version": "2.0"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2011-4140",
            "description": "The CSRF protection mechanism in Django through 1.2.7 and 1.3.x through 1.3.1 does not properly handle web-server configurations supporting arbitrary HTTP Host headers, which allows remote attackers to trigger unauthenticated forged requests via vectors involving a DNS CNAME record and a web page containing JavaScript code.",
            "id": "CVE-2011-4140",
            "namespace": "nvd:cpe",
            "severity": "Medium",
            "urls": [
              "https://bugzilla.redhat.com/show_bug.cgi?id=737366",
              "http://openwall.com/lists/oss-security/2011/09/11/1",
              "https://www.djangoproject.com/weblog/2011/sep/09/",
              "http://openwall.com/lists/oss-security/2011/09/13/2",
              "https://www.djangoproject.com/weblog/2011/sep/10/127/",
              "http://secunia.com/advisories/46614",
              "http://www.debian.org/security/2011/dsa-2332",
              "https://hermes.opensuse.org/messages/14700881"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-h95j-h2rv-qrg4",
          "description": "Moderate severity vulnerability that affects django",
          "fix": {
            "state": "fixed",
            "versions": [
              "1.2.7"
            ]
          },
          "id": "GHSA-h95j-h2rv-qrg4",
          "namespace": "github:language:python",
          "severity": "Medium",
          "urls": [
            "https://github.com/advisories/GHSA-h95j-h2rv-qrg4"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:springsource-spring-framework:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource_spring_framework:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource-spring:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource_spring:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:pivotal_software:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring-framework:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring_framework:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource-spring-framework:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource_spring_framework:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring-core:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring_core:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource-spring-framework:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource-spring-framework:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource_spring_framework:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource_spring_framework:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource-spring:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource_spring:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:vmware:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:pivotal_software:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring-framework:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring_framework:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource-spring:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource-spring:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource_spring:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource_spring:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:pivotal_software:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:pivotal_software:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring-core:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring-framework:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring-framework:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring_core:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring_framework:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring_framework:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring-core:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring-core:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring_core:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring_core:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:vmware:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:vmware:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:vmware:spring_core:5.3.0:*:*:*:*:*:*:*"
          ],
          "language": "java",
          "licenses": [],
          "locations": [
            {
              "path": "packages/sub/pom.xml"
            }
          ],
          "metadata": {
            "archiveDigests": null,
            "manifestName": "",
            "pomArtifactID": "",
            "pomGroupID": "",
            "virtualPath": ""
          },
          "metadataType": "JavaMetadata",
          "name": "spring-core",
          "purl": "pkg:maven/org.springframework/spring-core@5.3.0",
          "type": "java-archive",
          "upstreams": [],
          "version": "5.3.0"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003e=5.3.0,\u003c5.3.20 (unknown)"
            },
            "matcher": "java-matcher",
            "searchedBy": {
              "language": "java",
              "namespace": "github:language:java"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 3.5,
                  "exploitabilityScore": 6.8,
                  "impactScore": 2.9
                },
                "vector": "AV:N/AC:M/Au:S/C:N/I:N/A:P",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 5.3,
                  "exploitabilityScore": 1.6,
                  "impactScore": 3.6
                },
                "vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2022-22970",
            "description": "In spring framework versions prior to 5.3.20+ , 5.2.22+ and old unsupported versions, applications that handle file uploads are vulnerable to DoS attack if they rely on data binding to set a MultipartFile or javax.servlet.Part to a field in a model object.",
            "id": "CVE-2022-22970",
            "namespace": "nvd:cpe",
            "severity": "Medium",
            "urls": [
              "https://tanzu.vmware.com/security/cve-2022-22970",
              "https://security.netapp.com/advisory/ntap-20220616-0006/",
              "https://www.oracle.com/security-alerts/cpujul2022.html"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-hh26-6xwr-ggv7",
          "description": "Denial of service in Spring Framework",
          "fix": {
            "state": "fixed",
            "versions": [
              "5.3.20"
            ]
          },
          "id": "GHSA-hh26-6xwr-ggv7",
          "namespace": "github:language:java",
          "severity": "High",
          "urls": [
            "https://github.com/advisories/GHSA-hh26-6xwr-ggv7"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:loader-utils:loader-utils:3.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:loader-utils:loader_utils:3.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:loader_utils:loader-utils:3.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:loader_utils:loader_utils:3.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:loader:loader-utils:3.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:loader:loader_utils:3.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:loader-utils:3.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:loader_utils:3.0.0:*:*:*:*:*:*:*"
          ],
          "language": "javascript",
          "licenses": [],
          "locations": [
            {
              "path": "packages/node/base/package-lock.json"
            }
          ],
          "name": "loader-utils",
          "purl": "pkg:npm/loader-utils@3.0.0",
          "type": "npm",
          "upstreams": [],
          "version": "3.0.0"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003e=3.0.0,\u003c3.2.1 (unknown)"
            },
            "matcher": "javascript-matcher",
            "searchedBy": {
              "language": "javascript",
              "namespace": "github:language:javascript"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 7.5,
                  "exploitabilityScore": 3.9,
                  "impactScore": 3.6
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2022-37599",
            "description": "A Regular expression denial of service (ReDoS) flaw was found in Function interpolateName in interpolateName.js in webpack loader-utils 2.0.0 via the resourcePath variable in interpolateName.js.",
            "id": "CVE-2022-37599",
            "namespace": "nvd:cpe",
            "severity": "High",
            "urls": [
              "https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/interpolateName.js#L38",
              "https://github.com/webpack/loader-utils/issues/211",
              "https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/interpolateName.js#L83",
              "https://github.com/webpack/loader-utils/issues/216"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-hhq3-ff78-jv3g",
          "description": "loader-utils is vulnerable to Regular Expression Denial of Service (ReDoS)",
          "fix": {
            "state": "fixed",
            "versions": [
              "3.2.1"
            ]
          },
          "id": "GHSA-hhq3-ff78-jv3g",
          "namespace": "github:language:javascript",
          "severity": "High",
          "urls": [
            "https://github.com/advisories/GHSA-hhq3-ff78-jv3g"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:jsonwebtoken:jsonwebtoken:8.5.1:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:jsonwebtoken:8.5.1:*:*:*:*:*:*:*"
          ],
          "language": "javascript",
          "licenses": [],
          "locations": [
            {
              "path": "packages/node/base/package-lock.json"
            }
          ],
          "name": "jsonwebtoken",
          "purl": "pkg:npm/jsonwebtoken@8.5.1",
          "type": "npm",
          "upstreams": [],
          "version": "8.5.1"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c=8.5.1 (unknown)"
            },
            "matcher": "javascript-matcher",
            "searchedBy": {
              "language": "javascript",
              "namespace": "github:language:javascript"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 9.8,
                  "exploitabilityScore": 3.9,
                  "impactScore": 5.9
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2022-23541",
            "description": "jsonwebtoken is an implementation of JSON Web Tokens. Versions `\u003c= 8.5.1` of `jsonwebtoken` library can be misconfigured so that passing a poorly implemented key retrieval function referring to the `secretOrPublicKey` argument from the readme link will result in incorrect verification of tokens. There is a possibility of using a different algorithm and key combination in verification, other than the one that was used to sign the tokens. Specifically, tokens signed with an asymmetric public key could be verified with a symmetric HS256 algorithm. This can lead to successful validation of forged tokens. If your application is supporting usage of both symmetric key and asymmetric key in jwt.verify() implementation with the same key retrieval function. This issue has been patched, please update to version 9.0.0.",
            "id": "CVE-2022-23541",
            "namespace": "nvd:cpe",
            "severity": "Critical",
            "urls": [
              "https://github.com/auth0/node-jsonwebtoken/security/advisories/GHSA-hjrf-2m68-5959",
              "https://github.com/auth0/node-jsonwebtoken/releases/tag/v9.0.0",
              "https://github.com/auth0/node-jsonwebtoken/commit/e1fa9dcc12054a8681db4e6373da1b30cf7016e3"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-hjrf-2m68-5959",
          "description": "jsonwebtoken's insecure implementation of key retrieval function could lead to Forgeable Public/Private Tokens from RSA to HMAC",
          "fix": {
            "state": "fixed",
            "versions": [
              "9.0.0"
            ]
          },
          "id": "GHSA-hjrf-2m68-5959",
          "namespace": "github:language:javascript",
          "severity": "Medium",
          "urls": [
            "https://github.com/advisories/GHSA-hjrf-2m68-5959"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:python-django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:django:1.2:*:*:*:*:*:*:*"
          ],
          "language": "python",
          "licenses": [],
          "locations": [
            {
              "path": "packages/requirements.txt"
            }
          ],
          "name": "django",
          "purl": "pkg:pypi/django@1.2",
          "type": "python",
          "upstreams": [],
          "version": "1.2"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c1.11.28 (python)"
            },
            "matcher": "python-matcher",
            "searchedBy": {
              "language": "python",
              "namespace": "github:language:python"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 7.5,
                  "exploitabilityScore": 10,
                  "impactScore": 6.4
                },
                "vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 9.8,
                  "exploitabilityScore": 3.9,
                  "impactScore": 5.9
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2020-7471",
            "description": "Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",
            "id": "CVE-2020-7471",
            "namespace": "nvd:cpe",
            "severity": "Critical",
            "urls": [
              "https://www.openwall.com/lists/oss-security/2020/02/03/1",
              "https://docs.djangoproject.com/en/3.0/releases/security/",
              "https://groups.google.com/forum/#!topic/django-announce/X45S86X5bZI",
              "https://www.djangoproject.com/weblog/2020/feb/03/security-releases/",
              "http://www.openwall.com/lists/oss-security/2020/02/03/1",
              "https://github.com/django/django/commit/eb31d845323618d688ad429479c6dda973056136",
              "https://usn.ubuntu.com/4264-1/",
              "https://seclists.org/bugtraq/2020/Feb/30",
              "https://www.debian.org/security/2020/dsa-4629",
              "https://security.netapp.com/advisory/ntap-20200221-0006/",
              "https://security.gentoo.org/glsa/202004-17",
              "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4A2AP4T7RKPBCLTI2NNQG3T6MINDUUMZ/"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-hmr4-m2h5-33qx",
          "description": "SQL injection in Django",
          "fix": {
            "state": "fixed",
            "versions": [
              "1.11.28"
            ]
          },
          "id": "GHSA-hmr4-m2h5-33qx",
          "namespace": "github:language:python",
          "severity": "Critical",
          "urls": [
            "https://github.com/advisories/GHSA-hmr4-m2h5-33qx"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:python-django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:django:1.2:*:*:*:*:*:*:*"
          ],
          "language": "python",
          "licenses": [],
          "locations": [
            {
              "path": "packages/sub/.hidden/requirements.txt"
            }
          ],
          "name": "django",
          "purl": "pkg:pypi/django@1.2",
          "type": "python",
          "upstreams": [],
          "version": "1.2"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c1.11.28 (python)"
            },
            "matcher": "python-matcher",
            "searchedBy": {
              "language": "python",
              "namespace": "github:language:python"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 7.5,
                  "exploitabilityScore": 10,
                  "impactScore": 6.4
                },
                "vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 9.8,
                  "exploitabilityScore": 3.9,
                  "impactScore": 5.9
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2020-7471",
            "description": "Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",
            "id": "CVE-2020-7471",
            "namespace": "nvd:cpe",
            "severity": "Critical",
            "urls": [
              "https://www.openwall.com/lists/oss-security/2020/02/03/1",
              "https://docs.djangoproject.com/en/3.0/releases/security/",
              "https://groups.google.com/forum/#!topic/django-announce/X45S86X5bZI",
              "https://www.djangoproject.com/weblog/2020/feb/03/security-releases/",
              "http://www.openwall.com/lists/oss-security/2020/02/03/1",
              "https://github.com/django/django/commit/eb31d845323618d688ad429479c6dda973056136",
              "https://usn.ubuntu.com/4264-1/",
              "https://seclists.org/bugtraq/2020/Feb/30",
              "https://www.debian.org/security/2020/dsa-4629",
              "https://security.netapp.com/advisory/ntap-20200221-0006/",
              "https://security.gentoo.org/glsa/202004-17",
              "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4A2AP4T7RKPBCLTI2NNQG3T6MINDUUMZ/"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-hmr4-m2h5-33qx",
          "description": "SQL injection in Django",
          "fix": {
            "state": "fixed",
            "versions": [
              "1.11.28"
            ]
          },
          "id": "GHSA-hmr4-m2h5-33qx",
          "namespace": "github:language:python",
          "severity": "Critical",
          "urls": [
            "https://github.com/advisories/GHSA-hmr4-m2h5-33qx"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:commons-compress:commons-compress:1.15:*:*:*:*:*:*:*",
            "cpe:2.3:a:commons-compress:commons_compress:1.15:*:*:*:*:*:*:*",
            "cpe:2.3:a:commons_compress:commons-compress:1.15:*:*:*:*:*:*:*",
            "cpe:2.3:a:commons_compress:commons_compress:1.15:*:*:*:*:*:*:*",
            "cpe:2.3:a:commons:commons-compress:1.15:*:*:*:*:*:*:*",
            "cpe:2.3:a:commons:commons_compress:1.15:*:*:*:*:*:*:*"
          ],
          "language": "java",
          "licenses": [],
          "locations": [
            {
              "path": "packages/pom.xml"
            }
          ],
          "metadata": {
            "archiveDigests": null,
            "manifestName": "",
            "pomArtifactID": "",
            "pomGroupID": "",
            "virtualPath": ""
          },
          "metadataType": "JavaMetadata",
          "name": "commons-compress",
          "purl": "pkg:maven/org.apache.commons/commons-compress@1.15",
          "type": "java-archive",
          "upstreams": [],
          "version": "1.15"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c1.18 (unknown)"
            },
            "matcher": "java-matcher",
            "searchedBy": {
              "language": "java",
              "namespace": "github:language:java"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 4.3,
                  "exploitabilityScore": 8.6,
                  "impactScore": 2.9
                },
                "vector": "AV:N/AC:M/Au:N/C:N/I:N/A:P",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 5.5,
                  "exploitabilityScore": 1.8,
                  "impactScore": 3.6
                },
                "vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2018-11771",
            "description": "When reading a specially crafted ZIP archive, the read method of Apache Commons Compress 1.7 to 1.17's ZipArchiveInputStream can fail to return the correct EOF indication after the end of the stream has been reached. When combined with a java.io.InputStreamReader this can lead to an infinite stream, which can be used to mount a denial of service attack against services that use Compress' zip package.",
            "id": "CVE-2018-11771",
            "namespace": "nvd:cpe",
            "severity": "Medium",
            "urls": [
              "https://lists.apache.org/thread.html/b8da751fc0ca949534cdf2744111da6bb0349d2798fac94b0a50f330@%3Cannounce.apache.org%3E",
              "http://www.securitytracker.com/id/1041503",
              "http://www.securityfocus.com/bid/105139",
              "https://lists.apache.org/thread.html/ff8dcfe29377088ab655fda9d585dccd5b1f07fabd94ae84fd60a7f8@%3Ccommits.pulsar.apache.org%3E",
              "https://lists.apache.org/thread.html/b8ef29df0f1d55aa741170748352ae8e425c7b1d286b2f257711a2dd@%3Cdev.creadur.apache.org%3E",
              "https://lists.apache.org/thread.html/b907e70bc422905d7962fd18f863f746bf7b4e7ed9da25c148580c61@%3Cnotifications.commons.apache.org%3E",
              "https://lists.apache.org/thread.html/f28052d04cb8dbaae39bfd3dc8438e58c2a8be306a3f381f4728d7c1@%3Ccommits.commons.apache.org%3E",
              "https://lists.apache.org/thread.html/f9cdd32af7d73e943452167d15801db39e8130409ebb9efb243b3f41@%3Ccommits.tinkerpop.apache.org%3E",
              "https://lists.apache.org/thread.html/e3eae9e6fc021c4c22dda59a335d21c12eecab480b48115a2f098ef6@%3Ccommits.tinkerpop.apache.org%3E",
              "https://lists.apache.org/thread.html/35f60d6d0407c13c39411038ba1aca71d92595ed7041beff4d07f2ee@%3Ccommits.tinkerpop.apache.org%3E",
              "https://lists.apache.org/thread.html/6c79965066c30d4e330e04d911d3761db41b82c89ae38d9a6b37a6f1@%3Cdev.tinkerpop.apache.org%3E",
              "https://lists.apache.org/thread.html/714c6ac1b1b50f8557e7342903ef45f1538a7bc60a0b47d6e48c273d@%3Ccommits.tinkerpop.apache.org%3E",
              "https://lists.apache.org/thread.html/eeecc1669242b28a3777ae13c68b376b0148d589d3d8170340d61120@%3Cdev.tinkerpop.apache.org%3E",
              "https://lists.apache.org/thread.html/c7954dc1e8fafd7ca1449f078953b419ebf8936e087f235f3bd024be@%3Ccommits.tinkerpop.apache.org%3E",
              "https://lists.apache.org/thread.html/0adb631517766e793e18a59723e2df08ced41eb9a57478f14781c9f7@%3Cdev.tinkerpop.apache.org%3E",
              "https://lists.apache.org/thread.html/3565494c263dfeb4dcb2a71cb24d09a1ca285cd6ac74edc025a3af8a@%3Ccommits.tinkerpop.apache.org%3E",
              "https://www.oracle.com/security-alerts/cpujan2022.html"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-hrmr-f5m6-m9pq",
          "description": "Moderate severity vulnerability that affects org.apache.commons:commons-compress",
          "fix": {
            "state": "fixed",
            "versions": [
              "1.18"
            ]
          },
          "id": "GHSA-hrmr-f5m6-m9pq",
          "namespace": "github:language:java",
          "severity": "Medium",
          "urls": [
            "https://github.com/advisories/GHSA-hrmr-f5m6-m9pq"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:qs:qs:6.7.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:qs:6.7.0:*:*:*:*:*:*:*"
          ],
          "language": "javascript",
          "licenses": [],
          "locations": [
            {
              "path": "packages/node/base/package-lock.json"
            }
          ],
          "name": "qs",
          "purl": "pkg:npm/qs@6.7.0",
          "type": "npm",
          "upstreams": [],
          "version": "6.7.0"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003e=6.7.0,\u003c6.7.3 (unknown)"
            },
            "matcher": "javascript-matcher",
            "searchedBy": {
              "language": "javascript",
              "namespace": "github:language:javascript"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 7.5,
                  "exploitabilityScore": 3.9,
                  "impactScore": 3.6
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2022-24999",
            "description": "qs before 6.10.3, as used in Express before 4.17.3 and other products, allows attackers to cause a Node process hang for an Express application because an __ proto__ key can be used. In many typical Express use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as a[__proto__]=b\u0026a[__proto__]\u0026a[length]=100000000. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4 (and therefore Express 4.17.3, which has \"deps: qs@6.9.7\" in its release description, is not vulnerable).",
            "id": "CVE-2022-24999",
            "namespace": "nvd:cpe",
            "severity": "High",
            "urls": [
              "https://github.com/n8tz/CVE-2022-24999",
              "https://github.com/expressjs/express/releases/tag/4.17.3",
              "https://github.com/ljharb/qs/pull/428",
              "https://lists.debian.org/debian-lts-announce/2023/01/msg00039.html"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-hrpp-h998-j3pp",
          "description": "qs vulnerable to Prototype Pollution",
          "fix": {
            "state": "fixed",
            "versions": [
              "6.7.3"
            ]
          },
          "id": "GHSA-hrpp-h998-j3pp",
          "namespace": "github:language:javascript",
          "severity": "High",
          "urls": [
            "https://github.com/advisories/GHSA-hrpp-h998-j3pp"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:log4j-core:log4j-core:2.14.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:log4j-core:log4j_core:2.14.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:log4j_core:log4j-core:2.14.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:log4j_core:log4j_core:2.14.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:log4j:log4j-core:2.14.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:log4j:log4j_core:2.14.0:*:*:*:*:*:*:*"
          ],
          "language": "java",
          "licenses": [],
          "locations": [
            {
              "path": "packages/sub/pom.xml"
            }
          ],
          "metadata": {
            "archiveDigests": null,
            "manifestName": "",
            "pomArtifactID": "",
            "pomGroupID": "",
            "virtualPath": ""
          },
          "metadataType": "JavaMetadata",
          "name": "log4j-core",
          "purl": "pkg:maven/org.apache.logging.log4j/log4j-core@2.14.0",
          "type": "java-archive",
          "upstreams": [],
          "version": "2.14.0"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003e=2.13.0,\u003c2.15.0 (unknown)"
            },
            "matcher": "java-matcher",
            "searchedBy": {
              "language": "java",
              "namespace": "github:language:java"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 9.3,
                  "exploitabilityScore": 8.6,
                  "impactScore": 10
                },
                "vector": "AV:N/AC:M/Au:N/C:C/I:C/A:C",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 10,
                  "exploitabilityScore": 3.9,
                  "impactScore": 6
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2021-44228",
            "description": "Apache Log4j2 2.0-beta9 through 2.15.0 (excluding security releases 2.12.2, 2.12.3, and 2.3.1) JNDI features used in configuration, log messages, and parameters do not protect against attacker controlled LDAP and other JNDI related endpoints. An attacker who can control log messages or log message parameters can execute arbitrary code loaded from LDAP servers when message lookup substitution is enabled. From log4j 2.15.0, this behavior has been disabled by default. From version 2.16.0 (along with 2.12.2, 2.12.3, and 2.3.1), this functionality has been completely removed. Note that this vulnerability is specific to log4j-core and does not affect log4net, log4cxx, or other Apache Logging Services projects.",
            "id": "CVE-2021-44228",
            "namespace": "nvd:cpe",
            "severity": "Critical",
            "urls": [
              "https://logging.apache.org/log4j/2.x/security.html",
              "http://www.openwall.com/lists/oss-security/2021/12/10/1",
              "http://www.openwall.com/lists/oss-security/2021/12/10/2",
              "http://packetstormsecurity.com/files/165225/Apache-Log4j2-2.14.1-Remote-Code-Execution.html",
              "https://security.netapp.com/advisory/ntap-20211210-0007/",
              "https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-apache-log4j-qRuKNEbd",
              "http://www.openwall.com/lists/oss-security/2021/12/10/3",
              "https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2021-0032",
              "https://www.oracle.com/security-alerts/alert-cve-2021-44228.html",
              "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VU57UJDCFIASIO35GC55JMKSRXJMCDFM/",
              "http://www.openwall.com/lists/oss-security/2021/12/13/1",
              "http://www.openwall.com/lists/oss-security/2021/12/13/2",
              "https://twitter.com/kurtseifried/status/1469345530182455296",
              "https://lists.debian.org/debian-lts-announce/2021/12/msg00007.html",
              "https://www.debian.org/security/2021/dsa-5020",
              "https://cert-portal.siemens.com/productcert/pdf/ssa-661247.pdf",
              "http://packetstormsecurity.com/files/165270/Apache-Log4j2-2.14.1-Remote-Code-Execution.html",
              "http://packetstormsecurity.com/files/165260/VMware-Security-Advisory-2021-0028.html",
              "http://packetstormsecurity.com/files/165261/Apache-Log4j2-2.14.1-Information-Disclosure.html",
              "http://www.openwall.com/lists/oss-security/2021/12/14/4",
              "https://www.intel.com/content/www/us/en/security-center/advisory/intel-sa-00646.html",
              "https://www.kb.cert.org/vuls/id/930724",
              "http://packetstormsecurity.com/files/165282/Log4j-Payload-Generator.html",
              "http://packetstormsecurity.com/files/165281/Log4j2-Log4Shell-Regexes.html",
              "http://packetstormsecurity.com/files/165306/L4sh-Log4j-Remote-Code-Execution.html",
              "http://packetstormsecurity.com/files/165307/Log4j-Remote-Code-Execution-Word-Bypassing.html",
              "http://packetstormsecurity.com/files/165311/log4j-scan-Extensive-Scanner.html",
              "http://www.openwall.com/lists/oss-security/2021/12/15/3",
              "https://cert-portal.siemens.com/productcert/pdf/ssa-714170.pdf",
              "https://msrc-blog.microsoft.com/2021/12/11/microsofts-response-to-cve-2021-44228-apache-log4j2/",
              "https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-apache-log4j-qRuKNEbd",
              "https://cert-portal.siemens.com/productcert/pdf/ssa-479842.pdf",
              "http://packetstormsecurity.com/files/165371/VMware-Security-Advisory-2021-0028.4.html",
              "https://cert-portal.siemens.com/productcert/pdf/ssa-397453.pdf",
              "http://packetstormsecurity.com/files/165532/Log4Shell-HTTP-Header-Injection.html",
              "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/M5CSVUNV4HWZZXGOKNSK6L7RPM7BOKIB/",
              "https://github.com/cisagov/log4j-affected-db/blob/develop/SOFTWARE-LIST.md",
              "http://packetstormsecurity.com/files/165642/VMware-vCenter-Server-Unauthenticated-Log4Shell-JNDI-Injection-Remote-Code-Execution.html",
              "http://packetstormsecurity.com/files/165673/UniFi-Network-Application-Unauthenticated-Log4Shell-Remote-Code-Execution.html",
              "https://www.oracle.com/security-alerts/cpujan2022.html",
              "https://github.com/cisagov/log4j-affected-db",
              "https://www.bentley.com/en/common-vulnerability-exposure/be-2022-0001",
              "https://support.apple.com/kb/HT213189",
              "http://seclists.org/fulldisclosure/2022/Mar/23",
              "https://www.oracle.com/security-alerts/cpuapr2022.html",
              "https://github.com/nu11secur1ty/CVE-mitre/tree/main/CVE-2021-44228",
              "https://www.nu11secur1ty.com/2021/12/cve-2021-44228.html",
              "http://seclists.org/fulldisclosure/2022/Jul/11",
              "http://packetstormsecurity.com/files/167794/Open-Xchange-App-Suite-7.10.x-Cross-Site-Scripting-Command-Injection.html",
              "http://packetstormsecurity.com/files/167917/MobileIron-Log4Shell-Remote-Command-Execution.html",
              "http://seclists.org/fulldisclosure/2022/Dec/2"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-jfh8-c2jp-5v3q",
          "description": "Remote code injection in Log4j",
          "fix": {
            "state": "fixed",
            "versions": [
              "2.15.0"
            ]
          },
          "id": "GHSA-jfh8-c2jp-5v3q",
          "namespace": "github:language:java",
          "severity": "Critical",
          "urls": [
            "https://github.com/advisories/GHSA-jfh8-c2jp-5v3q"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:jackson-databind:jackson-databind:2.12.4:*:*:*:*:*:*:*",
            "cpe:2.3:a:jackson-databind:jackson_databind:2.12.4:*:*:*:*:*:*:*",
            "cpe:2.3:a:jackson_databind:jackson-databind:2.12.4:*:*:*:*:*:*:*",
            "cpe:2.3:a:jackson_databind:jackson_databind:2.12.4:*:*:*:*:*:*:*",
            "cpe:2.3:a:jackson:jackson-databind:2.12.4:*:*:*:*:*:*:*",
            "cpe:2.3:a:jackson:jackson_databind:2.12.4:*:*:*:*:*:*:*"
          ],
          "language": "java",
          "licenses": [],
          "locations": [
            {
              "path": "packages/sub/pom.xml"
            }
          ],
          "metadata": {
            "archiveDigests": null,
            "manifestName": "",
            "pomArtifactID": "",
            "pomGroupID": "",
            "virtualPath": ""
          },
          "metadataType": "JavaMetadata",
          "name": "jackson-databind",
          "purl": "pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.12.4",
          "type": "java-archive",
          "upstreams": [],
          "version": "2.12.4"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c2.12.7.1 (unknown)"
            },
            "matcher": "java-matcher",
            "searchedBy": {
              "language": "java",
              "namespace": "github:language:java"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 7.5,
                  "exploitabilityScore": 3.9,
                  "impactScore": 3.6
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2022-42003",
            "description": "In FasterXML jackson-databind before 2.14.0-rc1, resource exhaustion can occur because of a lack of a check in primitive value deserializers to avoid deep wrapper array nesting, when the UNWRAP_SINGLE_VALUE_ARRAYS feature is enabled. Additional fix version in 2.13.4.1 and 2.12.17.1",
            "id": "CVE-2022-42003",
            "namespace": "nvd:cpe",
            "severity": "High",
            "urls": [
              "https://github.com/FasterXML/jackson-databind/commit/d78d00ee7b5245b93103fef3187f70543d67ca33",
              "https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=51020",
              "https://github.com/FasterXML/jackson-databind/issues/3590",
              "https://security.gentoo.org/glsa/202210-21",
              "https://www.debian.org/security/2022/dsa-5283",
              "https://security.netapp.com/advisory/ntap-20221124-0004/",
              "https://lists.debian.org/debian-lts-announce/2022/11/msg00035.html"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-jjjh-jjxp-wpff",
          "description": "Uncontrolled Resource Consumption in Jackson-databind",
          "fix": {
            "state": "fixed",
            "versions": [
              "2.12.7.1"
            ]
          },
          "id": "GHSA-jjjh-jjxp-wpff",
          "namespace": "github:language:java",
          "severity": "High",
          "urls": [
            "https://github.com/advisories/GHSA-jjjh-jjxp-wpff"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:commons-compress:commons-compress:1.15:*:*:*:*:*:*:*",
            "cpe:2.3:a:commons-compress:commons_compress:1.15:*:*:*:*:*:*:*",
            "cpe:2.3:a:commons_compress:commons-compress:1.15:*:*:*:*:*:*:*",
            "cpe:2.3:a:commons_compress:commons_compress:1.15:*:*:*:*:*:*:*",
            "cpe:2.3:a:commons:commons-compress:1.15:*:*:*:*:*:*:*",
            "cpe:2.3:a:commons:commons_compress:1.15:*:*:*:*:*:*:*"
          ],
          "language": "java",
          "licenses": [],
          "locations": [
            {
              "path": "packages/pom.xml"
            }
          ],
          "metadata": {
            "archiveDigests": null,
            "manifestName": "",
            "pomArtifactID": "",
            "pomGroupID": "",
            "virtualPath": ""
          },
          "metadataType": "JavaMetadata",
          "name": "commons-compress",
          "purl": "pkg:maven/org.apache.commons/commons-compress@1.15",
          "type": "java-archive",
          "upstreams": [],
          "version": "1.15"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c1.21 (unknown)"
            },
            "matcher": "java-matcher",
            "searchedBy": {
              "language": "java",
              "namespace": "github:language:java"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 5,
                  "exploitabilityScore": 10,
                  "impactScore": 2.9
                },
                "vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 7.5,
                  "exploitabilityScore": 3.9,
                  "impactScore": 3.6
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2021-36090",
            "description": "When reading a specially crafted ZIP archive, Compress can be made to allocate large amounts of memory that finally leads to an out of memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' zip package.",
            "id": "CVE-2021-36090",
            "namespace": "nvd:cpe",
            "severity": "High",
            "urls": [
              "https://lists.apache.org/thread.html/rc4134026d7d7b053d4f9f2205531122732405012c8804fd850a9b26f%40%3Cuser.commons.apache.org%3E",
              "https://commons.apache.org/proper/commons-compress/security-reports.html",
              "http://www.openwall.com/lists/oss-security/2021/07/13/4",
              "https://lists.apache.org/thread.html/r9a23d4dbf4e34d498664080bff59f2893b855eb16dae33e4aa92fa53@%3Cannounce.apache.org%3E",
              "https://lists.apache.org/thread.html/rdd5412a5b9a25aed2a02c3317052d38a97128314d50bc1ed36e81d38@%3Cuser.ant.apache.org%3E",
              "https://lists.apache.org/thread.html/r0e87177f8e78b4ee453cd4d3d8f4ddec6f10d2c27707dd71e12cafc9@%3Cannounce.apache.org%3E",
              "http://www.openwall.com/lists/oss-security/2021/07/13/6",
              "https://lists.apache.org/thread.html/rb5fa2ee61828fa2e42361b58468717e84902dd71c4aea8dc0b865df7@%3Cnotifications.james.apache.org%3E",
              "https://lists.apache.org/thread.html/rb064d705fdfa44b5dae4c366b369ef6597951083196321773b983e71@%3Ccommits.pulsar.apache.org%3E",
              "https://lists.apache.org/thread.html/rf2f4d7940371a7c7c5b679f50e28fc7fcc82cd00670ced87e013ac88@%3Ccommits.druid.apache.org%3E",
              "https://lists.apache.org/thread.html/rbe91c512c5385181149ab087b6c909825d34299f5c491c6482a2ed57@%3Ccommits.druid.apache.org%3E",
              "https://lists.apache.org/thread.html/rab292091eadd1ecc63c516e9541a7f241091cf2e652b8185a6059945@%3Ccommits.druid.apache.org%3E",
              "https://lists.apache.org/thread.html/rd4332baaf6debd03d60deb7ec93bee49e5fdbe958cb6800dff7fb00e@%3Cnotifications.skywalking.apache.org%3E",
              "https://lists.apache.org/thread.html/rb7adf3e55359819e77230b4586521e5c6874ce5ed93384bdc14d6aee@%3Cnotifications.skywalking.apache.org%3E",
              "https://lists.apache.org/thread.html/r9f54c0caa462267e0cc68b49f141e91432b36b23348d18c65bd0d040@%3Cnotifications.skywalking.apache.org%3E",
              "https://lists.apache.org/thread.html/rba65ed5ddb0586f5b12598f55ec7db3633e7b7fede60466367fbf86a@%3Cnotifications.skywalking.apache.org%3E",
              "https://lists.apache.org/thread.html/rb6e1fa80d34e5ada45f72655d84bfd90db0ca44ef19236a49198c88c@%3Cnotifications.skywalking.apache.org%3E",
              "https://lists.apache.org/thread.html/rfba19167efc785ad3561e7ef29f340d65ac8f0d897aed00e0731e742@%3Cnotifications.skywalking.apache.org%3E",
              "https://lists.apache.org/thread.html/racd0c0381c8404f298b226cd9db2eaae965b14c9c568224aa3f437ae@%3Cnotifications.skywalking.apache.org%3E",
              "https://lists.apache.org/thread.html/rc7df4c2f0bbe2028a1498a46d322c91184f7a369e3e4c57d9518cacf@%3Cdev.drill.apache.org%3E",
              "https://lists.apache.org/thread.html/rf3f0a09fee197168a813966c5816157f6c600a47313a0d6813148ea6@%3Cissues.drill.apache.org%3E",
              "https://lists.apache.org/thread.html/rbbf42642c3e4167788a7c13763d192ee049604d099681f765385d99d@%3Cdev.drill.apache.org%3E",
              "https://lists.apache.org/thread.html/r4f03c5de923e3f2a8c316248681258125140514ef3307bfe1538e1ab@%3Cdev.drill.apache.org%3E",
              "https://lists.apache.org/thread.html/r54049b66afbca766b6763c7531e9fe7a20293a112bcb65462a134949@%3Ccommits.drill.apache.org%3E",
              "https://lists.apache.org/thread.html/rf93b6bb267580e01deb7f3696f7eaca00a290c66189a658cf7230a1a@%3Cissues.drill.apache.org%3E",
              "https://lists.apache.org/thread.html/r25f4c44616045085bc3cf901bb7e68e445eee53d1966fc08998fc456@%3Cdev.drill.apache.org%3E",
              "https://lists.apache.org/thread.html/r3227b1287e5bd8db6523b862c22676b046ad8f4fc96433225f46a2bd@%3Cissues.drill.apache.org%3E",
              "https://lists.apache.org/thread.html/r75ffc7a461e7e7ae77690fa75bd47bb71365c732e0fbcc44da4f8ff5@%3Cdev.tomcat.apache.org%3E",
              "https://lists.apache.org/thread.html/r67ef3c07fe3b8c1b02d48012149d280ad6da8e4cec253b527520fb2b@%3Cdev.poi.apache.org%3E",
              "https://www.oracle.com/security-alerts/cpuoct2021.html",
              "https://security.netapp.com/advisory/ntap-20211022-0001/",
              "https://www.oracle.com/security-alerts/cpujan2022.html",
              "https://www.oracle.com/security-alerts/cpuapr2022.html",
              "https://www.oracle.com/security-alerts/cpujul2022.html"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-mc84-pj99-q6hh",
          "description": "Improper Handling of Length Parameter Inconsistency in Compress",
          "fix": {
            "state": "fixed",
            "versions": [
              "1.21"
            ]
          },
          "id": "GHSA-mc84-pj99-q6hh",
          "namespace": "github:language:java",
          "severity": "High",
          "urls": [
            "https://github.com/advisories/GHSA-mc84-pj99-q6hh"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:commons-compress:commons-compress:1.20:*:*:*:*:*:*:*",
            "cpe:2.3:a:commons-compress:commons_compress:1.20:*:*:*:*:*:*:*",
            "cpe:2.3:a:commons_compress:commons-compress:1.20:*:*:*:*:*:*:*",
            "cpe:2.3:a:commons_compress:commons_compress:1.20:*:*:*:*:*:*:*",
            "cpe:2.3:a:commons:commons-compress:1.20:*:*:*:*:*:*:*",
            "cpe:2.3:a:commons:commons_compress:1.20:*:*:*:*:*:*:*"
          ],
          "language": "java",
          "licenses": [],
          "locations": [
            {
              "path": "packages/sub/pom.xml"
            }
          ],
          "metadata": {
            "archiveDigests": null,
            "manifestName": "",
            "pomArtifactID": "",
            "pomGroupID": "",
            "virtualPath": ""
          },
          "metadataType": "JavaMetadata",
          "name": "commons-compress",
          "purl": "pkg:maven/org.apache.commons/commons-compress@1.20",
          "type": "java-archive",
          "upstreams": [],
          "version": "1.20"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c1.21 (unknown)"
            },
            "matcher": "java-matcher",
            "searchedBy": {
              "language": "java",
              "namespace": "github:language:java"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 5,
                  "exploitabilityScore": 10,
                  "impactScore": 2.9
                },
                "vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 7.5,
                  "exploitabilityScore": 3.9,
                  "impactScore": 3.6
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2021-36090",
            "description": "When reading a specially crafted ZIP archive, Compress can be made to allocate large amounts of memory that finally leads to an out of memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' zip package.",
            "id": "CVE-2021-36090",
            "namespace": "nvd:cpe",
            "severity": "High",
            "urls": [
              "https://lists.apache.org/thread.html/rc4134026d7d7b053d4f9f2205531122732405012c8804fd850a9b26f%40%3Cuser.commons.apache.org%3E",
              "https://commons.apache.org/proper/commons-compress/security-reports.html",
              "http://www.openwall.com/lists/oss-security/2021/07/13/4",
              "https://lists.apache.org/thread.html/r9a23d4dbf4e34d498664080bff59f2893b855eb16dae33e4aa92fa53@%3Cannounce.apache.org%3E",
              "https://lists.apache.org/thread.html/rdd5412a5b9a25aed2a02c3317052d38a97128314d50bc1ed36e81d38@%3Cuser.ant.apache.org%3E",
              "https://lists.apache.org/thread.html/r0e87177f8e78b4ee453cd4d3d8f4ddec6f10d2c27707dd71e12cafc9@%3Cannounce.apache.org%3E",
              "http://www.openwall.com/lists/oss-security/2021/07/13/6",
              "https://lists.apache.org/thread.html/rb5fa2ee61828fa2e42361b58468717e84902dd71c4aea8dc0b865df7@%3Cnotifications.james.apache.org%3E",
              "https://lists.apache.org/thread.html/rb064d705fdfa44b5dae4c366b369ef6597951083196321773b983e71@%3Ccommits.pulsar.apache.org%3E",
              "https://lists.apache.org/thread.html/rf2f4d7940371a7c7c5b679f50e28fc7fcc82cd00670ced87e013ac88@%3Ccommits.druid.apache.org%3E",
              "https://lists.apache.org/thread.html/rbe91c512c5385181149ab087b6c909825d34299f5c491c6482a2ed57@%3Ccommits.druid.apache.org%3E",
              "https://lists.apache.org/thread.html/rab292091eadd1ecc63c516e9541a7f241091cf2e652b8185a6059945@%3Ccommits.druid.apache.org%3E",
              "https://lists.apache.org/thread.html/rd4332baaf6debd03d60deb7ec93bee49e5fdbe958cb6800dff7fb00e@%3Cnotifications.skywalking.apache.org%3E",
              "https://lists.apache.org/thread.html/rb7adf3e55359819e77230b4586521e5c6874ce5ed93384bdc14d6aee@%3Cnotifications.skywalking.apache.org%3E",
              "https://lists.apache.org/thread.html/r9f54c0caa462267e0cc68b49f141e91432b36b23348d18c65bd0d040@%3Cnotifications.skywalking.apache.org%3E",
              "https://lists.apache.org/thread.html/rba65ed5ddb0586f5b12598f55ec7db3633e7b7fede60466367fbf86a@%3Cnotifications.skywalking.apache.org%3E",
              "https://lists.apache.org/thread.html/rb6e1fa80d34e5ada45f72655d84bfd90db0ca44ef19236a49198c88c@%3Cnotifications.skywalking.apache.org%3E",
              "https://lists.apache.org/thread.html/rfba19167efc785ad3561e7ef29f340d65ac8f0d897aed00e0731e742@%3Cnotifications.skywalking.apache.org%3E",
              "https://lists.apache.org/thread.html/racd0c0381c8404f298b226cd9db2eaae965b14c9c568224aa3f437ae@%3Cnotifications.skywalking.apache.org%3E",
              "https://lists.apache.org/thread.html/rc7df4c2f0bbe2028a1498a46d322c91184f7a369e3e4c57d9518cacf@%3Cdev.drill.apache.org%3E",
              "https://lists.apache.org/thread.html/rf3f0a09fee197168a813966c5816157f6c600a47313a0d6813148ea6@%3Cissues.drill.apache.org%3E",
              "https://lists.apache.org/thread.html/rbbf42642c3e4167788a7c13763d192ee049604d099681f765385d99d@%3Cdev.drill.apache.org%3E",
              "https://lists.apache.org/thread.html/r4f03c5de923e3f2a8c316248681258125140514ef3307bfe1538e1ab@%3Cdev.drill.apache.org%3E",
              "https://lists.apache.org/thread.html/r54049b66afbca766b6763c7531e9fe7a20293a112bcb65462a134949@%3Ccommits.drill.apache.org%3E",
              "https://lists.apache.org/thread.html/rf93b6bb267580e01deb7f3696f7eaca00a290c66189a658cf7230a1a@%3Cissues.drill.apache.org%3E",
              "https://lists.apache.org/thread.html/r25f4c44616045085bc3cf901bb7e68e445eee53d1966fc08998fc456@%3Cdev.drill.apache.org%3E",
              "https://lists.apache.org/thread.html/r3227b1287e5bd8db6523b862c22676b046ad8f4fc96433225f46a2bd@%3Cissues.drill.apache.org%3E",
              "https://lists.apache.org/thread.html/r75ffc7a461e7e7ae77690fa75bd47bb71365c732e0fbcc44da4f8ff5@%3Cdev.tomcat.apache.org%3E",
              "https://lists.apache.org/thread.html/r67ef3c07fe3b8c1b02d48012149d280ad6da8e4cec253b527520fb2b@%3Cdev.poi.apache.org%3E",
              "https://www.oracle.com/security-alerts/cpuoct2021.html",
              "https://security.netapp.com/advisory/ntap-20211022-0001/",
              "https://www.oracle.com/security-alerts/cpujan2022.html",
              "https://www.oracle.com/security-alerts/cpuapr2022.html",
              "https://www.oracle.com/security-alerts/cpujul2022.html"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-mc84-pj99-q6hh",
          "description": "Improper Handling of Length Parameter Inconsistency in Compress",
          "fix": {
            "state": "fixed",
            "versions": [
              "1.21"
            ]
          },
          "id": "GHSA-mc84-pj99-q6hh",
          "namespace": "github:language:java",
          "severity": "High",
          "urls": [
            "https://github.com/advisories/GHSA-mc84-pj99-q6hh"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:vm2:vm2:3.9.5:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:vm2:3.9.5:*:*:*:*:*:*:*"
          ],
          "language": "javascript",
          "licenses": [],
          "locations": [
            {
              "path": "packages/node/base/package-lock.json"
            }
          ],
          "name": "vm2",
          "purl": "pkg:npm/vm2@3.9.5",
          "type": "npm",
          "upstreams": [],
          "version": "3.9.5"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c3.9.11 (unknown)"
            },
            "matcher": "javascript-matcher",
            "searchedBy": {
              "language": "javascript",
              "namespace": "github:language:javascript"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 10,
                  "exploitabilityScore": 3.9,
                  "impactScore": 6
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2022-36067",
            "description": "vm2 is a sandbox that can run untrusted code with whitelisted Node's built-in modules. In versions prior to version 3.9.11, a threat actor can bypass the sandbox protections to gain remote code execution rights on the host running the sandbox. This vulnerability was patched in the release of version 3.9.11 of vm2. There are no known workarounds.",
            "id": "CVE-2022-36067",
            "namespace": "nvd:cpe",
            "severity": "Critical",
            "urls": [
              "https://github.com/patriksimek/vm2/commit/d9a7f3cc995d3d861e1380eafb886cb3c5e2b873#diff-b1a515a627d820118e76d0e323fe2f0589ed50a1eacb490f6c3278fe3698f164",
              "https://github.com/patriksimek/vm2/issues/467",
              "https://github.com/patriksimek/vm2/blob/master/lib/setup-sandbox.js#L71",
              "https://github.com/patriksimek/vm2/security/advisories/GHSA-mrgp-mrhc-5jrq",
              "https://www.oxeye.io/blog/vm2-sandbreak-vulnerability-cve-2022-36067",
              "https://security.netapp.com/advisory/ntap-20221017-0002/"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-mrgp-mrhc-5jrq",
          "description": "vm2 vulnerable to Sandbox Escape resulting in Remote Code Execution on host",
          "fix": {
            "state": "fixed",
            "versions": [
              "3.9.11"
            ]
          },
          "id": "GHSA-mrgp-mrhc-5jrq",
          "namespace": "github:language:javascript",
          "severity": "Critical",
          "urls": [
            "https://github.com/advisories/GHSA-mrgp-mrhc-5jrq"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:log4j-core:log4j-core:2.14.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:log4j-core:log4j_core:2.14.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:log4j_core:log4j-core:2.14.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:log4j_core:log4j_core:2.14.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:log4j:log4j-core:2.14.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:log4j:log4j_core:2.14.0:*:*:*:*:*:*:*"
          ],
          "language": "java",
          "licenses": [],
          "locations": [
            {
              "path": "packages/sub/pom.xml"
            }
          ],
          "metadata": {
            "archiveDigests": null,
            "manifestName": "",
            "pomArtifactID": "",
            "pomGroupID": "",
            "virtualPath": ""
          },
          "metadataType": "JavaMetadata",
          "name": "log4j-core",
          "purl": "pkg:maven/org.apache.logging.log4j/log4j-core@2.14.0",
          "type": "java-archive",
          "upstreams": [],
          "version": "2.14.0"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003e=2.13.0,\u003c2.17.0 (unknown)"
            },
            "matcher": "java-matcher",
            "searchedBy": {
              "language": "java",
              "namespace": "github:language:java"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 4.3,
                  "exploitabilityScore": 8.6,
                  "impactScore": 2.9
                },
                "vector": "AV:N/AC:M/Au:N/C:N/I:N/A:P",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 5.9,
                  "exploitabilityScore": 2.2,
                  "impactScore": 3.6
                },
                "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2021-45105",
            "description": "Apache Log4j2 versions 2.0-alpha1 through 2.16.0 (excluding 2.12.3 and 2.3.1) did not protect from uncontrolled recursion from self-referential lookups. This allows an attacker with control over Thread Context Map data to cause a denial of service when a crafted string is interpreted. This issue was fixed in Log4j 2.17.0, 2.12.3, and 2.3.1.",
            "id": "CVE-2021-45105",
            "namespace": "nvd:cpe",
            "severity": "Medium",
            "urls": [
              "https://logging.apache.org/log4j/2.x/security.html",
              "https://security.netapp.com/advisory/ntap-20211218-0001/",
              "http://www.openwall.com/lists/oss-security/2021/12/19/1",
              "https://www.debian.org/security/2021/dsa-5024",
              "https://www.zerodayinitiative.com/advisories/ZDI-21-1541/",
              "https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-apache-log4j-qRuKNEbd",
              "https://cert-portal.siemens.com/productcert/pdf/ssa-501673.pdf",
              "https://www.kb.cert.org/vuls/id/930724",
              "https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2021-0032",
              "https://cert-portal.siemens.com/productcert/pdf/ssa-479842.pdf",
              "https://www.oracle.com/security-alerts/cpujan2022.html",
              "https://www.oracle.com/security-alerts/cpuapr2022.html",
              "https://www.oracle.com/security-alerts/cpujul2022.html"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-p6xc-xr62-6r2g",
          "description": "Apache Log4j2 vulnerable to Improper Input Validation and Uncontrolled Recursion",
          "fix": {
            "state": "fixed",
            "versions": [
              "2.17.0"
            ]
          },
          "id": "GHSA-p6xc-xr62-6r2g",
          "namespace": "github:language:java",
          "severity": "High",
          "urls": [
            "https://github.com/advisories/GHSA-p6xc-xr62-6r2g"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:got:got:9.6.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:got:9.6.0:*:*:*:*:*:*:*"
          ],
          "language": "javascript",
          "licenses": [],
          "locations": [
            {
              "path": "packages/node/base/package-lock.json"
            }
          ],
          "name": "got",
          "purl": "pkg:npm/got@9.6.0",
          "type": "npm",
          "upstreams": [],
          "version": "9.6.0"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c11.8.5 (unknown)"
            },
            "matcher": "javascript-matcher",
            "searchedBy": {
              "language": "javascript",
              "namespace": "github:language:javascript"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 5,
                  "exploitabilityScore": 10,
                  "impactScore": 2.9
                },
                "vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 5.3,
                  "exploitabilityScore": 3.9,
                  "impactScore": 1.4
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2022-33987",
            "description": "The got package before 12.1.0 (also fixed in 11.8.5) for Node.js allows a redirect to a UNIX socket.",
            "id": "CVE-2022-33987",
            "namespace": "nvd:cpe",
            "severity": "Medium",
            "urls": [
              "https://github.com/sindresorhus/got/pull/2047",
              "https://github.com/sindresorhus/got/compare/v12.0.3...v12.1.0",
              "https://github.com/sindresorhus/got/releases/tag/v11.8.5"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-pfrx-2q88-qq97",
          "description": "Got allows a redirect to a UNIX socket",
          "fix": {
            "state": "fixed",
            "versions": [
              "11.8.5"
            ]
          },
          "id": "GHSA-pfrx-2q88-qq97",
          "namespace": "github:language:javascript",
          "severity": "Medium",
          "urls": [
            "https://github.com/advisories/GHSA-pfrx-2q88-qq97"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:got:got:9.6.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:got:9.6.0:*:*:*:*:*:*:*"
          ],
          "language": "javascript",
          "licenses": [],
          "locations": [
            {
              "path": "package-lock.json"
            }
          ],
          "name": "got",
          "purl": "pkg:npm/got@9.6.0",
          "type": "npm",
          "upstreams": [],
          "version": "9.6.0"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c11.8.5 (unknown)"
            },
            "matcher": "javascript-matcher",
            "searchedBy": {
              "language": "javascript",
              "namespace": "github:language:javascript"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 5,
                  "exploitabilityScore": 10,
                  "impactScore": 2.9
                },
                "vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 5.3,
                  "exploitabilityScore": 3.9,
                  "impactScore": 1.4
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2022-33987",
            "description": "The got package before 12.1.0 (also fixed in 11.8.5) for Node.js allows a redirect to a UNIX socket.",
            "id": "CVE-2022-33987",
            "namespace": "nvd:cpe",
            "severity": "Medium",
            "urls": [
              "https://github.com/sindresorhus/got/pull/2047",
              "https://github.com/sindresorhus/got/compare/v12.0.3...v12.1.0",
              "https://github.com/sindresorhus/got/releases/tag/v11.8.5"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-pfrx-2q88-qq97",
          "description": "Got allows a redirect to a UNIX socket",
          "fix": {
            "state": "fixed",
            "versions": [
              "11.8.5"
            ]
          },
          "id": "GHSA-pfrx-2q88-qq97",
          "namespace": "github:language:javascript",
          "severity": "Medium",
          "urls": [
            "https://github.com/advisories/GHSA-pfrx-2q88-qq97"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:ejs:ejs:3.1.6:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:ejs:3.1.6:*:*:*:*:*:*:*"
          ],
          "language": "javascript",
          "licenses": [],
          "locations": [
            {
              "path": "packages/node/base/package-lock.json"
            }
          ],
          "name": "ejs",
          "purl": "pkg:npm/ejs@3.1.6",
          "type": "npm",
          "upstreams": [],
          "version": "3.1.6"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c3.1.7 (unknown)"
            },
            "matcher": "javascript-matcher",
            "searchedBy": {
              "language": "javascript",
              "namespace": "github:language:javascript"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 7.5,
                  "exploitabilityScore": 10,
                  "impactScore": 6.4
                },
                "vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 9.8,
                  "exploitabilityScore": 3.9,
                  "impactScore": 5.9
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2022-29078",
            "description": "The ejs (aka Embedded JavaScript templates) package 3.1.6 for Node.js allows server-side template injection in settings[view options][outputFunctionName]. This is parsed as an internal option, and overwrites the outputFunctionName option with an arbitrary OS command (which is executed upon template compilation).",
            "id": "CVE-2022-29078",
            "namespace": "nvd:cpe",
            "severity": "Critical",
            "urls": [
              "https://eslam.io/posts/ejs-server-side-template-injection-rce/",
              "https://github.com/mde/ejs/releases",
              "https://security.netapp.com/advisory/ntap-20220804-0001/"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-phwq-j96m-2c2q",
          "description": "ejs template injection vulnerability",
          "fix": {
            "state": "fixed",
            "versions": [
              "3.1.7"
            ]
          },
          "id": "GHSA-phwq-j96m-2c2q",
          "namespace": "github:language:javascript",
          "severity": "Critical",
          "urls": [
            "https://github.com/advisories/GHSA-phwq-j96m-2c2q"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:follow-redirects:follow-redirects:1.14.6:*:*:*:*:*:*:*",
            "cpe:2.3:a:follow-redirects:follow_redirects:1.14.6:*:*:*:*:*:*:*",
            "cpe:2.3:a:follow_redirects:follow-redirects:1.14.6:*:*:*:*:*:*:*",
            "cpe:2.3:a:follow_redirects:follow_redirects:1.14.6:*:*:*:*:*:*:*",
            "cpe:2.3:a:follow:follow-redirects:1.14.6:*:*:*:*:*:*:*",
            "cpe:2.3:a:follow:follow_redirects:1.14.6:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:follow-redirects:1.14.6:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:follow_redirects:1.14.6:*:*:*:*:*:*:*"
          ],
          "language": "javascript",
          "licenses": [],
          "locations": [
            {
              "path": "packages/node/base/package-lock.json"
            }
          ],
          "name": "follow-redirects",
          "purl": "pkg:npm/follow-redirects@1.14.6",
          "type": "npm",
          "upstreams": [],
          "version": "1.14.6"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c1.14.8 (unknown)"
            },
            "matcher": "javascript-matcher",
            "searchedBy": {
              "language": "javascript",
              "namespace": "github:language:javascript"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 4.3,
                  "exploitabilityScore": 8.6,
                  "impactScore": 2.9
                },
                "vector": "AV:N/AC:M/Au:N/C:P/I:N/A:N",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 5.9,
                  "exploitabilityScore": 2.2,
                  "impactScore": 3.6
                },
                "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2022-0536",
            "description": "Exposure of Sensitive Information to an Unauthorized Actor in NPM follow-redirects prior to 1.14.8.",
            "id": "CVE-2022-0536",
            "namespace": "nvd:cpe",
            "severity": "Medium",
            "urls": [
              "https://huntr.dev/bounties/7cf2bf90-52da-4d59-8028-a73b132de0db",
              "https://github.com/follow-redirects/follow-redirects/commit/62e546a99c07c3ee5e4e0718c84a6ca127c5c445"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-pw2r-vq6v-hr8c",
          "description": "Exposure of Sensitive Information to an Unauthorized Actor in follow-redirects",
          "fix": {
            "state": "fixed",
            "versions": [
              "1.14.8"
            ]
          },
          "id": "GHSA-pw2r-vq6v-hr8c",
          "namespace": "github:language:javascript",
          "severity": "Medium",
          "urls": [
            "https://github.com/advisories/GHSA-pw2r-vq6v-hr8c"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:validator:validator:8.2.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:validator:8.2.0:*:*:*:*:*:*:*"
          ],
          "language": "javascript",
          "licenses": [],
          "locations": [
            {
              "path": "packages/node/base/package-lock.json"
            }
          ],
          "name": "validator",
          "purl": "pkg:npm/validator@8.2.0",
          "type": "npm",
          "upstreams": [],
          "version": "8.2.0"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c13.7.0 (unknown)"
            },
            "matcher": "javascript-matcher",
            "searchedBy": {
              "language": "javascript",
              "namespace": "github:language:javascript"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 5,
                  "exploitabilityScore": 10,
                  "impactScore": 2.9
                },
                "vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 7.5,
                  "exploitabilityScore": 3.9,
                  "impactScore": 3.6
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2021-3765",
            "description": "validator.js is vulnerable to Inefficient Regular Expression Complexity",
            "id": "CVE-2021-3765",
            "namespace": "nvd:cpe",
            "severity": "High",
            "urls": [
              "https://huntr.dev/bounties/c37e975c-21a3-4c5f-9b57-04d63b28cfc9",
              "https://github.com/validatorjs/validator.js/commit/496fc8b2a7f5997acaaec33cc44d0b8dba5fb5e1"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-qgmg-gppg-76g5",
          "description": "Inefficient Regular Expression Complexity in validator.js",
          "fix": {
            "state": "fixed",
            "versions": [
              "13.7.0"
            ]
          },
          "id": "GHSA-qgmg-gppg-76g5",
          "namespace": "github:language:javascript",
          "severity": "Medium",
          "urls": [
            "https://github.com/advisories/GHSA-qgmg-gppg-76g5"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:socket.io-parser:socket.io-parser:4.0.4:*:*:*:*:*:*:*",
            "cpe:2.3:a:socket.io-parser:socket.io_parser:4.0.4:*:*:*:*:*:*:*",
            "cpe:2.3:a:socket.io_parser:socket.io-parser:4.0.4:*:*:*:*:*:*:*",
            "cpe:2.3:a:socket.io_parser:socket.io_parser:4.0.4:*:*:*:*:*:*:*",
            "cpe:2.3:a:socket.io:socket.io-parser:4.0.4:*:*:*:*:*:*:*",
            "cpe:2.3:a:socket.io:socket.io_parser:4.0.4:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:socket.io-parser:4.0.4:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:socket.io_parser:4.0.4:*:*:*:*:*:*:*"
          ],
          "language": "javascript",
          "licenses": [],
          "locations": [
            {
              "path": "packages/node/base/package-lock.json"
            }
          ],
          "name": "socket.io-parser",
          "purl": "pkg:npm/socket.io-parser@4.0.4",
          "type": "npm",
          "upstreams": [],
          "version": "4.0.4"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003e=4.0.0,\u003c4.0.5 (unknown)"
            },
            "matcher": "javascript-matcher",
            "searchedBy": {
              "language": "javascript",
              "namespace": "github:language:javascript"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 9.8,
                  "exploitabilityScore": 3.9,
                  "impactScore": 5.9
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2022-2421",
            "description": "Due to improper type validation in attachment parsing the Socket.io js library, it is possible to overwrite the _placeholder object which allows an attacker to place references to functions at arbitrary places in the resulting query object.",
            "id": "CVE-2022-2421",
            "namespace": "nvd:cpe",
            "severity": "Critical",
            "urls": [
              "https://csirt.divd.nl/DIVD-2022-00045",
              "https://csirt.divd.nl/CVE-2022-2421"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-qm95-pgcg-qqfq",
          "description": "Insufficient validation when decoding a Socket.IO packet",
          "fix": {
            "state": "fixed",
            "versions": [
              "4.0.5"
            ]
          },
          "id": "GHSA-qm95-pgcg-qqfq",
          "namespace": "github:language:javascript",
          "severity": "Critical",
          "urls": [
            "https://github.com/advisories/GHSA-qm95-pgcg-qqfq"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:nanoid:nanoid:3.1.30:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:nanoid:3.1.30:*:*:*:*:*:*:*"
          ],
          "language": "javascript",
          "licenses": [],
          "locations": [
            {
              "path": "packages/node/base/package-lock.json"
            }
          ],
          "name": "nanoid",
          "purl": "pkg:npm/nanoid@3.1.30",
          "type": "npm",
          "upstreams": [],
          "version": "3.1.30"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003e=3.0.0,\u003c3.1.31 (unknown)"
            },
            "matcher": "javascript-matcher",
            "searchedBy": {
              "language": "javascript",
              "namespace": "github:language:javascript"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 2.1,
                  "exploitabilityScore": 3.9,
                  "impactScore": 2.9
                },
                "vector": "AV:L/AC:L/Au:N/C:P/I:N/A:N",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 5.5,
                  "exploitabilityScore": 1.8,
                  "impactScore": 3.6
                },
                "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2021-23566",
            "description": "The package nanoid from 3.0.0 and before 3.1.31 are vulnerable to Information Exposure via the valueOf() function which allows to reproduce the last id generated.",
            "id": "CVE-2021-23566",
            "namespace": "nvd:cpe",
            "severity": "Medium",
            "urls": [
              "https://github.com/ai/nanoid/pull/328",
              "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-2332550",
              "https://gist.github.com/artalar/bc6d1eb9a3477d15d2772e876169a444",
              "https://snyk.io/vuln/SNYK-JS-NANOID-2332193",
              "https://github.com/ai/nanoid/commit/2b7bd9332bc49b6330c7ddb08e5c661833db2575"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-qrpm-p2h7-hrv2",
          "description": "Exposure of Sensitive Information to an Unauthorized Actor in nanoid",
          "fix": {
            "state": "fixed",
            "versions": [
              "3.1.31"
            ]
          },
          "id": "GHSA-qrpm-p2h7-hrv2",
          "namespace": "github:language:javascript",
          "severity": "Medium",
          "urls": [
            "https://github.com/advisories/GHSA-qrpm-p2h7-hrv2"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:jsonwebtoken:jsonwebtoken:8.5.1:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:jsonwebtoken:8.5.1:*:*:*:*:*:*:*"
          ],
          "language": "javascript",
          "licenses": [],
          "locations": [
            {
              "path": "packages/node/base/package-lock.json"
            }
          ],
          "name": "jsonwebtoken",
          "purl": "pkg:npm/jsonwebtoken@8.5.1",
          "type": "npm",
          "upstreams": [],
          "version": "8.5.1"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c9.0.0 (unknown)"
            },
            "matcher": "javascript-matcher",
            "searchedBy": {
              "language": "javascript",
              "namespace": "github:language:javascript"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 9.8,
                  "exploitabilityScore": 3.9,
                  "impactScore": 5.9
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2022-23540",
            "description": "In versions `\u003c=8.5.1` of `jsonwebtoken` library, lack of algorithm definition in the `jwt.verify()` function can lead to signature validation bypass due to defaulting to the `none` algorithm for signature verification. Users are affected if you do not specify algorithms in the `jwt.verify()` function. This issue has been fixed, please update to version 9.0.0 which removes the default support for the none algorithm in the `jwt.verify()` method. There will be no impact, if you update to version 9.0.0 and you don’t need to allow for the `none` algorithm. If you need 'none' algorithm, you have to explicitly specify that in `jwt.verify()` options.",
            "id": "CVE-2022-23540",
            "namespace": "nvd:cpe",
            "severity": "Critical",
            "urls": [
              "https://github.com/auth0/node-jsonwebtoken/security/advisories/GHSA-qwph-4952-7xr6",
              "https://github.com/auth0/node-jsonwebtoken/commit/e1fa9dcc12054a8681db4e6373da1b30cf7016e3"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-qwph-4952-7xr6",
          "description": "jsonwebtoken vulnerable to signature validation bypass due to insecure default algorithm in jwt.verify()",
          "fix": {
            "state": "fixed",
            "versions": [
              "9.0.0"
            ]
          },
          "id": "GHSA-qwph-4952-7xr6",
          "namespace": "github:language:javascript",
          "severity": "Medium",
          "urls": [
            "https://github.com/advisories/GHSA-qwph-4952-7xr6"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:node-fetch:node-fetch:2.6.1:*:*:*:*:*:*:*",
            "cpe:2.3:a:node-fetch:node_fetch:2.6.1:*:*:*:*:*:*:*",
            "cpe:2.3:a:node_fetch:node-fetch:2.6.1:*:*:*:*:*:*:*",
            "cpe:2.3:a:node_fetch:node_fetch:2.6.1:*:*:*:*:*:*:*",
            "cpe:2.3:a:node:node-fetch:2.6.1:*:*:*:*:*:*:*",
            "cpe:2.3:a:node:node_fetch:2.6.1:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:node-fetch:2.6.1:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:node_fetch:2.6.1:*:*:*:*:*:*:*"
          ],
          "language": "javascript",
          "licenses": [],
          "locations": [
            {
              "path": "packages/node/base/package-lock.json"
            }
          ],
          "name": "node-fetch",
          "purl": "pkg:npm/node-fetch@2.6.1",
          "type": "npm",
          "upstreams": [],
          "version": "2.6.1"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c2.6.7 (unknown)"
            },
            "matcher": "javascript-matcher",
            "searchedBy": {
              "language": "javascript",
              "namespace": "github:language:javascript"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 5.8,
                  "exploitabilityScore": 8.6,
                  "impactScore": 4.9
                },
                "vector": "AV:N/AC:M/Au:N/C:P/I:P/A:N",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 6.1,
                  "exploitabilityScore": 2.8,
                  "impactScore": 2.7
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2022-0235",
            "description": "node-fetch is vulnerable to Exposure of Sensitive Information to an Unauthorized Actor",
            "id": "CVE-2022-0235",
            "namespace": "nvd:cpe",
            "severity": "Medium",
            "urls": [
              "https://huntr.dev/bounties/d26ab655-38d6-48b3-be15-f9ad6b6ae6f7",
              "https://github.com/node-fetch/node-fetch/commit/36e47e8a6406185921e4985dcbeff140d73eaa10",
              "https://cert-portal.siemens.com/productcert/pdf/ssa-637483.pdf",
              "https://lists.debian.org/debian-lts-announce/2022/12/msg00007.html"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-r683-j2x4-v87g",
          "description": "node-fetch is vulnerable to Exposure of Sensitive Information to an Unauthorized Actor",
          "fix": {
            "state": "fixed",
            "versions": [
              "2.6.7"
            ]
          },
          "id": "GHSA-r683-j2x4-v87g",
          "namespace": "github:language:javascript",
          "severity": "High",
          "urls": [
            "https://github.com/advisories/GHSA-r683-j2x4-v87g"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:engine.io:engine.io:6.1.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:engine.io:6.1.0:*:*:*:*:*:*:*"
          ],
          "language": "javascript",
          "licenses": [],
          "locations": [
            {
              "path": "packages/node/base/package-lock.json"
            }
          ],
          "name": "engine.io",
          "purl": "pkg:npm/engine.io@6.1.0",
          "type": "npm",
          "upstreams": [],
          "version": "6.1.0"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003e=4.0.0,\u003c6.2.1 (unknown)"
            },
            "matcher": "javascript-matcher",
            "searchedBy": {
              "language": "javascript",
              "namespace": "github:language:javascript"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 6.5,
                  "exploitabilityScore": 2.8,
                  "impactScore": 3.6
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2022-41940",
            "description": "Engine.IO is the implementation of transport-based cross-browser/cross-device bi-directional communication layer for Socket.IO. A specially crafted HTTP request can trigger an uncaught exception on the Engine.IO server, thus killing the Node.js process. This impacts all the users of the engine.io package, including those who uses depending packages like socket.io. There is no known workaround except upgrading to a safe version. There are patches for this issue released in versions 3.6.1 and 6.2.1.",
            "id": "CVE-2022-41940",
            "namespace": "nvd:cpe",
            "severity": "Medium",
            "urls": [
              "https://github.com/socketio/engine.io/commit/83c4071af871fc188298d7d591e95670bf9f9085",
              "https://github.com/socketio/engine.io/commit/425e833ab13373edf1dd5a0706f07100db14e3c6",
              "https://github.com/socketio/engine.io/security/advisories/GHSA-r7qp-cfhv-p84w"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-r7qp-cfhv-p84w",
          "description": "Uncaught exception in engine.io",
          "fix": {
            "state": "fixed",
            "versions": [
              "6.2.1"
            ]
          },
          "id": "GHSA-r7qp-cfhv-p84w",
          "namespace": "github:language:javascript",
          "severity": "Medium",
          "urls": [
            "https://github.com/advisories/GHSA-r7qp-cfhv-p84w"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:karma:karma:6.3.9:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:karma:6.3.9:*:*:*:*:*:*:*"
          ],
          "language": "javascript",
          "licenses": [],
          "locations": [
            {
              "path": "packages/node/base/package-lock.json"
            }
          ],
          "name": "karma",
          "purl": "pkg:npm/karma@6.3.9",
          "type": "npm",
          "upstreams": [],
          "version": "6.3.9"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c6.3.16 (unknown)"
            },
            "matcher": "javascript-matcher",
            "searchedBy": {
              "language": "javascript",
              "namespace": "github:language:javascript"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 5.8,
                  "exploitabilityScore": 8.6,
                  "impactScore": 4.9
                },
                "vector": "AV:N/AC:M/Au:N/C:P/I:P/A:N",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 6.1,
                  "exploitabilityScore": 2.8,
                  "impactScore": 2.7
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2021-23495",
            "description": "The package karma before 6.3.16 are vulnerable to Open Redirect due to missing validation of the return_url query parameter.",
            "id": "CVE-2021-23495",
            "namespace": "nvd:cpe",
            "severity": "Medium",
            "urls": [
              "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-2412347",
              "https://snyk.io/vuln/SNYK-JS-KARMA-2396325",
              "https://github.com/karma-runner/karma/commit/ff7edbb2ffbcdd69761bece86b7dc1ef0740508d"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-rc3x-jf5g-xvc5",
          "description": "Open redirect in karma",
          "fix": {
            "state": "fixed",
            "versions": [
              "6.3.16"
            ]
          },
          "id": "GHSA-rc3x-jf5g-xvc5",
          "namespace": "github:language:javascript",
          "severity": "Medium",
          "urls": [
            "https://github.com/advisories/GHSA-rc3x-jf5g-xvc5"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:http-cache-semantics:http-cache-semantics:4.1.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:http-cache-semantics:http_cache_semantics:4.1.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:http_cache_semantics:http-cache-semantics:4.1.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:http_cache_semantics:http_cache_semantics:4.1.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:http-cache:http-cache-semantics:4.1.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:http-cache:http_cache_semantics:4.1.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:http_cache:http-cache-semantics:4.1.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:http_cache:http_cache_semantics:4.1.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:http:http-cache-semantics:4.1.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:http:http_cache_semantics:4.1.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:http-cache-semantics:4.1.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:http_cache_semantics:4.1.0:*:*:*:*:*:*:*"
          ],
          "language": "javascript",
          "licenses": [],
          "locations": [
            {
              "path": "packages/node/base/package-lock.json"
            }
          ],
          "name": "http-cache-semantics",
          "purl": "pkg:npm/http-cache-semantics@4.1.0",
          "type": "npm",
          "upstreams": [],
          "version": "4.1.0"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c4.1.1 (unknown)"
            },
            "matcher": "javascript-matcher",
            "searchedBy": {
              "language": "javascript",
              "namespace": "github:language:javascript"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2022-25881",
            "description": "This affects versions of the package http-cache-semantics before 4.1.1. The issue can be exploited via malicious request header values sent to a server, when that server reads the cache policy from the request using this library.",
            "id": "CVE-2022-25881",
            "namespace": "nvd:cpe",
            "severity": "Unknown",
            "urls": [
              "https://security.snyk.io/vuln/SNYK-JS-HTTPCACHESEMANTICS-3248783",
              "https://github.com/kornelski/http-cache-semantics/blob/master/index.js%23L83",
              "https://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-3253332"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-rc47-6667-2j5j",
          "description": "http-cache-semantics vulnerable to Regular Expression Denial of Service",
          "fix": {
            "state": "fixed",
            "versions": [
              "4.1.1"
            ]
          },
          "id": "GHSA-rc47-6667-2j5j",
          "namespace": "github:language:javascript",
          "severity": "Medium",
          "urls": [
            "https://github.com/advisories/GHSA-rc47-6667-2j5j"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:http-cache-semantics:http-cache-semantics:4.1.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:http-cache-semantics:http_cache_semantics:4.1.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:http_cache_semantics:http-cache-semantics:4.1.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:http_cache_semantics:http_cache_semantics:4.1.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:http-cache:http-cache-semantics:4.1.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:http-cache:http_cache_semantics:4.1.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:http_cache:http-cache-semantics:4.1.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:http_cache:http_cache_semantics:4.1.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:http:http-cache-semantics:4.1.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:http:http_cache_semantics:4.1.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:http-cache-semantics:4.1.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:http_cache_semantics:4.1.0:*:*:*:*:*:*:*"
          ],
          "language": "javascript",
          "licenses": [],
          "locations": [
            {
              "path": "package-lock.json"
            }
          ],
          "name": "http-cache-semantics",
          "purl": "pkg:npm/http-cache-semantics@4.1.0",
          "type": "npm",
          "upstreams": [],
          "version": "4.1.0"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c4.1.1 (unknown)"
            },
            "matcher": "javascript-matcher",
            "searchedBy": {
              "language": "javascript",
              "namespace": "github:language:javascript"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2022-25881",
            "description": "This affects versions of the package http-cache-semantics before 4.1.1. The issue can be exploited via malicious request header values sent to a server, when that server reads the cache policy from the request using this library.",
            "id": "CVE-2022-25881",
            "namespace": "nvd:cpe",
            "severity": "Unknown",
            "urls": [
              "https://security.snyk.io/vuln/SNYK-JS-HTTPCACHESEMANTICS-3248783",
              "https://github.com/kornelski/http-cache-semantics/blob/master/index.js%23L83",
              "https://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-3253332"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-rc47-6667-2j5j",
          "description": "http-cache-semantics vulnerable to Regular Expression Denial of Service",
          "fix": {
            "state": "fixed",
            "versions": [
              "4.1.1"
            ]
          },
          "id": "GHSA-rc47-6667-2j5j",
          "namespace": "github:language:javascript",
          "severity": "Medium",
          "urls": [
            "https://github.com/advisories/GHSA-rc47-6667-2j5j"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:springsource-spring-framework:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource_spring_framework:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource-spring:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource_spring:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:pivotal_software:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring-framework:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring_framework:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource-spring-framework:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource_spring_framework:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring-core:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring_core:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource-spring-framework:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource-spring-framework:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource_spring_framework:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource_spring_framework:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource-spring:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource_spring:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:vmware:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:pivotal_software:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring-framework:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring_framework:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource-spring:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource-spring:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource_spring:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource_spring:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:pivotal_software:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:pivotal_software:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring-core:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring-framework:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring-framework:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring_core:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring_framework:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring_framework:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring-core:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring-core:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring_core:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring_core:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:vmware:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:vmware:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:vmware:spring_core:5.3.0:*:*:*:*:*:*:*"
          ],
          "language": "java",
          "licenses": [],
          "locations": [
            {
              "path": "packages/sub/pom.xml"
            }
          ],
          "metadata": {
            "archiveDigests": null,
            "manifestName": "",
            "pomArtifactID": "",
            "pomGroupID": "",
            "virtualPath": ""
          },
          "metadataType": "JavaMetadata",
          "name": "spring-core",
          "purl": "pkg:maven/org.springframework/spring-core@5.3.0",
          "type": "java-archive",
          "upstreams": [],
          "version": "5.3.0"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003e=5.3.0,\u003c=5.3.10 (unknown)"
            },
            "matcher": "java-matcher",
            "searchedBy": {
              "language": "java",
              "namespace": "github:language:java"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 4,
                  "exploitabilityScore": 8,
                  "impactScore": 2.9
                },
                "vector": "AV:N/AC:L/Au:S/C:N/I:P/A:N",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 4.3,
                  "exploitabilityScore": 2.8,
                  "impactScore": 1.4
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:N",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2021-22096",
            "description": "In Spring Framework versions 5.3.0 - 5.3.10, 5.2.0 - 5.2.17, and older unsupported versions, it is possible for a user to provide malicious input to cause the insertion of additional log entries.",
            "id": "CVE-2021-22096",
            "namespace": "nvd:cpe",
            "severity": "Medium",
            "urls": [
              "https://tanzu.vmware.com/security/cve-2021-22096",
              "https://security.netapp.com/advisory/ntap-20211125-0005/",
              "https://www.oracle.com/security-alerts/cpuapr2022.html"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-rfmp-97jj-h8m6",
          "description": "Improper Output Neutralization for Logs in Spring Framework",
          "fix": {
            "state": "fixed",
            "versions": [
              "5.3.11"
            ]
          },
          "id": "GHSA-rfmp-97jj-h8m6",
          "namespace": "github:language:java",
          "severity": "Medium",
          "urls": [
            "https://github.com/advisories/GHSA-rfmp-97jj-h8m6"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:materialize-css:materialize-css:1.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:materialize-css:materialize_css:1.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:materialize_css:materialize-css:1.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:materialize_css:materialize_css:1.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:materialize:materialize-css:1.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:materialize:materialize_css:1.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:materialize-css:1.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:materialize_css:1.0.0:*:*:*:*:*:*:*"
          ],
          "language": "javascript",
          "licenses": [],
          "locations": [
            {
              "path": "packages/node/base/package-lock.json"
            }
          ],
          "name": "materialize-css",
          "purl": "pkg:npm/materialize-css@1.0.0",
          "type": "npm",
          "upstreams": [],
          "version": "1.0.0"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c=1.0.0 (unknown)"
            },
            "matcher": "javascript-matcher",
            "searchedBy": {
              "language": "javascript",
              "namespace": "github:language:javascript"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 4.3,
                  "exploitabilityScore": 8.6,
                  "impactScore": 2.9
                },
                "vector": "AV:N/AC:M/Au:N/C:N/I:P/A:N",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 6.1,
                  "exploitabilityScore": 2.8,
                  "impactScore": 2.7
                },
                "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
                "vendorMetadata": {},
                "version": "3.0"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2019-11004",
            "description": "In Materialize through 1.0.0, XSS is possible via the Toast feature.",
            "id": "CVE-2019-11004",
            "namespace": "nvd:cpe",
            "severity": "Medium",
            "urls": [
              "https://github.com/Dogfalo/materialize/issues/6286"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-rg3q-jxmp-pvjj",
          "description": "Materialize-css vulnerable to Improper Neutralization of Input During Web Page Generation",
          "fix": {
            "state": "not-fixed",
            "versions": []
          },
          "id": "GHSA-rg3q-jxmp-pvjj",
          "namespace": "github:language:javascript",
          "severity": "Medium",
          "urls": [
            "https://github.com/advisories/GHSA-rg3q-jxmp-pvjj"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:materialize-css:materialize-css:1.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:materialize-css:materialize_css:1.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:materialize_css:materialize-css:1.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:materialize_css:materialize_css:1.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:materialize:materialize-css:1.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:materialize:materialize_css:1.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:materialize-css:1.0.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:materialize_css:1.0.0:*:*:*:*:*:*:*"
          ],
          "language": "javascript",
          "licenses": [
            ""
          ],
          "locations": [
            {
              "path": "packages/node/twistcli_test/package-lock.json"
            }
          ],
          "name": "materialize-css",
          "purl": "pkg:npm/materialize-css@1.0.0",
          "type": "npm",
          "upstreams": [],
          "version": "1.0.0"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c=1.0.0 (unknown)"
            },
            "matcher": "javascript-matcher",
            "searchedBy": {
              "language": "javascript",
              "namespace": "github:language:javascript"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 4.3,
                  "exploitabilityScore": 8.6,
                  "impactScore": 2.9
                },
                "vector": "AV:N/AC:M/Au:N/C:N/I:P/A:N",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 6.1,
                  "exploitabilityScore": 2.8,
                  "impactScore": 2.7
                },
                "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
                "vendorMetadata": {},
                "version": "3.0"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2019-11004",
            "description": "In Materialize through 1.0.0, XSS is possible via the Toast feature.",
            "id": "CVE-2019-11004",
            "namespace": "nvd:cpe",
            "severity": "Medium",
            "urls": [
              "https://github.com/Dogfalo/materialize/issues/6286"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-rg3q-jxmp-pvjj",
          "description": "Materialize-css vulnerable to Improper Neutralization of Input During Web Page Generation",
          "fix": {
            "state": "not-fixed",
            "versions": []
          },
          "id": "GHSA-rg3q-jxmp-pvjj",
          "namespace": "github:language:javascript",
          "severity": "Medium",
          "urls": [
            "https://github.com/advisories/GHSA-rg3q-jxmp-pvjj"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:jackson-databind:jackson-databind:2.12.4:*:*:*:*:*:*:*",
            "cpe:2.3:a:jackson-databind:jackson_databind:2.12.4:*:*:*:*:*:*:*",
            "cpe:2.3:a:jackson_databind:jackson-databind:2.12.4:*:*:*:*:*:*:*",
            "cpe:2.3:a:jackson_databind:jackson_databind:2.12.4:*:*:*:*:*:*:*",
            "cpe:2.3:a:jackson:jackson-databind:2.12.4:*:*:*:*:*:*:*",
            "cpe:2.3:a:jackson:jackson_databind:2.12.4:*:*:*:*:*:*:*"
          ],
          "language": "java",
          "licenses": [],
          "locations": [
            {
              "path": "packages/sub/pom.xml"
            }
          ],
          "metadata": {
            "archiveDigests": null,
            "manifestName": "",
            "pomArtifactID": "",
            "pomGroupID": "",
            "virtualPath": ""
          },
          "metadataType": "JavaMetadata",
          "name": "jackson-databind",
          "purl": "pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.12.4",
          "type": "java-archive",
          "upstreams": [],
          "version": "2.12.4"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c2.12.7.1 (unknown)"
            },
            "matcher": "java-matcher",
            "searchedBy": {
              "language": "java",
              "namespace": "github:language:java"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 7.5,
                  "exploitabilityScore": 3.9,
                  "impactScore": 3.6
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2022-42004",
            "description": "In FasterXML jackson-databind before 2.13.4, resource exhaustion can occur because of a lack of a check in BeanDeserializer._deserializeFromArray to prevent use of deeply nested arrays. An application is vulnerable only with certain customized choices for deserialization.",
            "id": "CVE-2022-42004",
            "namespace": "nvd:cpe",
            "severity": "High",
            "urls": [
              "https://github.com/FasterXML/jackson-databind/issues/3582",
              "https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=50490",
              "https://github.com/FasterXML/jackson-databind/commit/063183589218fec19a9293ed2f17ec53ea80ba88",
              "https://security.gentoo.org/glsa/202210-21",
              "https://www.debian.org/security/2022/dsa-5283",
              "https://security.netapp.com/advisory/ntap-20221118-0008/",
              "https://lists.debian.org/debian-lts-announce/2022/11/msg00035.html"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-rgv9-q543-rqg4",
          "description": "Uncontrolled Resource Consumption in FasterXML jackson-databind",
          "fix": {
            "state": "fixed",
            "versions": [
              "2.12.7.1"
            ]
          },
          "id": "GHSA-rgv9-q543-rqg4",
          "namespace": "github:language:java",
          "severity": "High",
          "urls": [
            "https://github.com/advisories/GHSA-rgv9-q543-rqg4"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:springsource-spring-framework:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource_spring_framework:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource-spring:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource_spring:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:pivotal_software:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring-framework:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring_framework:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource-spring-framework:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource_spring_framework:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring-core:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring_core:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource-spring-framework:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource-spring-framework:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource_spring_framework:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource_spring_framework:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource-spring:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource_spring:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:vmware:springsource_spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:pivotal_software:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring-framework:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring_framework:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource-spring:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource-spring:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource_spring:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource_spring:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:pivotal_software:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:pivotal_software:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring-core:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring-framework:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring-framework:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring_core:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring_framework:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring_framework:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:springsource:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring-core:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring-core:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring_core:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring_core:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:vmware:spring_framework:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:spring:spring_core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:vmware:spring-core:5.3.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:vmware:spring_core:5.3.0:*:*:*:*:*:*:*"
          ],
          "language": "java",
          "licenses": [],
          "locations": [
            {
              "path": "packages/sub/pom.xml"
            }
          ],
          "metadata": {
            "archiveDigests": null,
            "manifestName": "",
            "pomArtifactID": "",
            "pomGroupID": "",
            "virtualPath": ""
          },
          "metadataType": "JavaMetadata",
          "name": "spring-core",
          "purl": "pkg:maven/org.springframework/spring-core@5.3.0",
          "type": "java-archive",
          "upstreams": [],
          "version": "5.3.0"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003e=5.3.0,\u003c5.3.20 (unknown)"
            },
            "matcher": "java-matcher",
            "searchedBy": {
              "language": "java",
              "namespace": "github:language:java"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 4,
                  "exploitabilityScore": 8,
                  "impactScore": 2.9
                },
                "vector": "AV:N/AC:L/Au:S/C:N/I:N/A:P",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 6.5,
                  "exploitabilityScore": 2.8,
                  "impactScore": 3.6
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2022-22971",
            "description": "In spring framework versions prior to 5.3.20+ , 5.2.22+ and old unsupported versions, application with a STOMP over WebSocket endpoint is vulnerable to a denial of service attack by an authenticated user.",
            "id": "CVE-2022-22971",
            "namespace": "nvd:cpe",
            "severity": "Medium",
            "urls": [
              "https://tanzu.vmware.com/security/cve-2022-22971",
              "https://security.netapp.com/advisory/ntap-20220616-0003/",
              "https://www.oracle.com/security-alerts/cpujul2022.html"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-rqph-vqwm-22vc",
          "description": "Allocation of Resources Without Limits or Throttling in Spring Framework",
          "fix": {
            "state": "fixed",
            "versions": [
              "5.3.20"
            ]
          },
          "id": "GHSA-rqph-vqwm-22vc",
          "namespace": "github:language:java",
          "severity": "Medium",
          "urls": [
            "https://github.com/advisories/GHSA-rqph-vqwm-22vc"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:marked:marked:0.7.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:marked:0.7.0:*:*:*:*:*:*:*"
          ],
          "language": "javascript",
          "licenses": [],
          "locations": [
            {
              "path": "packages/node/base/package-lock.json"
            }
          ],
          "name": "marked",
          "purl": "pkg:npm/marked@0.7.0",
          "type": "npm",
          "upstreams": [],
          "version": "0.7.0"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c4.0.10 (unknown)"
            },
            "matcher": "javascript-matcher",
            "searchedBy": {
              "language": "javascript",
              "namespace": "github:language:javascript"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 5,
                  "exploitabilityScore": 10,
                  "impactScore": 2.9
                },
                "vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 7.5,
                  "exploitabilityScore": 3.9,
                  "impactScore": 3.6
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2022-21680",
            "description": "Marked is a markdown parser and compiler. Prior to version 4.0.10, the regular expression `block.def` may cause catastrophic backtracking against some strings and lead to a regular expression denial of service (ReDoS). Anyone who runs untrusted markdown through a vulnerable version of marked and does not use a worker with a time limit may be affected. This issue is patched in version 4.0.10. As a workaround, avoid running untrusted markdown through marked or run marked on a worker thread and set a reasonable time limit to prevent draining resources.",
            "id": "CVE-2022-21680",
            "namespace": "nvd:cpe",
            "severity": "High",
            "urls": [
              "https://github.com/markedjs/marked/security/advisories/GHSA-rrrm-qjm4-v8hf",
              "https://github.com/markedjs/marked/commit/c4a3ccd344b6929afa8a1d50ac54a721e57012c0",
              "https://github.com/markedjs/marked/releases/tag/v4.0.10",
              "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/AIXDMC3CSHYW3YWVSQOXAWLUYQHAO5UX/"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-rrrm-qjm4-v8hf",
          "description": "Inefficient Regular Expression Complexity in marked",
          "fix": {
            "state": "fixed",
            "versions": [
              "4.0.10"
            ]
          },
          "id": "GHSA-rrrm-qjm4-v8hf",
          "namespace": "github:language:javascript",
          "severity": "High",
          "urls": [
            "https://github.com/advisories/GHSA-rrrm-qjm4-v8hf"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:python-django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:django:1.2:*:*:*:*:*:*:*"
          ],
          "language": "python",
          "licenses": [],
          "locations": [
            {
              "path": "packages/sub/.hidden/requirements.txt"
            }
          ],
          "name": "django",
          "purl": "pkg:pypi/django@1.2",
          "type": "python",
          "upstreams": [],
          "version": "1.2"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c2.2.25 (python)"
            },
            "matcher": "python-matcher",
            "searchedBy": {
              "language": "python",
              "namespace": "github:language:python"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 7.5,
                  "exploitabilityScore": 10,
                  "impactScore": 6.4
                },
                "vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 7.3,
                  "exploitabilityScore": 3.9,
                  "impactScore": 3.4
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2021-44420",
            "description": "In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",
            "id": "CVE-2021-44420",
            "namespace": "nvd:cpe",
            "severity": "High",
            "urls": [
              "https://docs.djangoproject.com/en/3.2/releases/security/",
              "https://www.openwall.com/lists/oss-security/2021/12/07/1",
              "https://www.djangoproject.com/weblog/2021/dec/07/security-releases/",
              "https://groups.google.com/forum/#!forum/django-announce",
              "https://security.netapp.com/advisory/ntap-20211229-0006/",
              "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/B4SQG2EAF4WCI2SLRL6XRDJ3RPK3ZRDV/"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-v6rh-hp5x-86rv",
          "description": "Potential bypass of an upstream access control based on URL paths in Django",
          "fix": {
            "state": "fixed",
            "versions": [
              "2.2.25"
            ]
          },
          "id": "GHSA-v6rh-hp5x-86rv",
          "namespace": "github:language:python",
          "severity": "High",
          "urls": [
            "https://github.com/advisories/GHSA-v6rh-hp5x-86rv"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:python-django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:django:1.2:*:*:*:*:*:*:*"
          ],
          "language": "python",
          "licenses": [],
          "locations": [
            {
              "path": "packages/requirements.txt"
            }
          ],
          "name": "django",
          "purl": "pkg:pypi/django@1.2",
          "type": "python",
          "upstreams": [],
          "version": "1.2"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c2.2.25 (python)"
            },
            "matcher": "python-matcher",
            "searchedBy": {
              "language": "python",
              "namespace": "github:language:python"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 7.5,
                  "exploitabilityScore": 10,
                  "impactScore": 6.4
                },
                "vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 7.3,
                  "exploitabilityScore": 3.9,
                  "impactScore": 3.4
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2021-44420",
            "description": "In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",
            "id": "CVE-2021-44420",
            "namespace": "nvd:cpe",
            "severity": "High",
            "urls": [
              "https://docs.djangoproject.com/en/3.2/releases/security/",
              "https://www.openwall.com/lists/oss-security/2021/12/07/1",
              "https://www.djangoproject.com/weblog/2021/dec/07/security-releases/",
              "https://groups.google.com/forum/#!forum/django-announce",
              "https://security.netapp.com/advisory/ntap-20211229-0006/",
              "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/B4SQG2EAF4WCI2SLRL6XRDJ3RPK3ZRDV/"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-v6rh-hp5x-86rv",
          "description": "Potential bypass of an upstream access control based on URL paths in Django",
          "fix": {
            "state": "fixed",
            "versions": [
              "2.2.25"
            ]
          },
          "id": "GHSA-v6rh-hp5x-86rv",
          "namespace": "github:language:python",
          "severity": "High",
          "urls": [
            "https://github.com/advisories/GHSA-v6rh-hp5x-86rv"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:python-django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:django:1.2:*:*:*:*:*:*:*"
          ],
          "language": "python",
          "licenses": [],
          "locations": [
            {
              "path": "packages/requirements.txt"
            }
          ],
          "name": "django",
          "purl": "pkg:pypi/django@1.2",
          "type": "python",
          "upstreams": [],
          "version": "1.2"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c1.11.27 (python)"
            },
            "matcher": "python-matcher",
            "searchedBy": {
              "language": "python",
              "namespace": "github:language:python"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 5,
                  "exploitabilityScore": 10,
                  "impactScore": 2.9
                },
                "vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 9.8,
                  "exploitabilityScore": 3.9,
                  "impactScore": 5.9
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2019-19844",
            "description": "Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",
            "id": "CVE-2019-19844",
            "namespace": "nvd:cpe",
            "severity": "Critical",
            "urls": [
              "https://groups.google.com/forum/#!topic/django-announce/3oaB2rVH3a0",
              "https://www.djangoproject.com/weblog/2019/dec/18/security-releases/",
              "https://docs.djangoproject.com/en/dev/releases/security/",
              "https://usn.ubuntu.com/4224-1/",
              "https://www.debian.org/security/2020/dsa-4598",
              "https://seclists.org/bugtraq/2020/Jan/9",
              "http://packetstormsecurity.com/files/155872/Django-Account-Hijack.html",
              "https://security.netapp.com/advisory/ntap-20200110-0003/",
              "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HCM2DPUI7TOZWN4A6JFQFUVQ2XGE7GUD/",
              "https://security.gentoo.org/glsa/202004-17"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-vfq6-hq5r-27r6",
          "description": "Potential account hijack via password reset form in Django",
          "fix": {
            "state": "fixed",
            "versions": [
              "1.11.27"
            ]
          },
          "id": "GHSA-vfq6-hq5r-27r6",
          "namespace": "github:language:python",
          "severity": "Critical",
          "urls": [
            "https://github.com/advisories/GHSA-vfq6-hq5r-27r6"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:python-django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:django:1.2:*:*:*:*:*:*:*"
          ],
          "language": "python",
          "licenses": [],
          "locations": [
            {
              "path": "packages/sub/.hidden/requirements.txt"
            }
          ],
          "name": "django",
          "purl": "pkg:pypi/django@1.2",
          "type": "python",
          "upstreams": [],
          "version": "1.2"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c1.11.27 (python)"
            },
            "matcher": "python-matcher",
            "searchedBy": {
              "language": "python",
              "namespace": "github:language:python"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 5,
                  "exploitabilityScore": 10,
                  "impactScore": 2.9
                },
                "vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 9.8,
                  "exploitabilityScore": 3.9,
                  "impactScore": 5.9
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2019-19844",
            "description": "Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",
            "id": "CVE-2019-19844",
            "namespace": "nvd:cpe",
            "severity": "Critical",
            "urls": [
              "https://groups.google.com/forum/#!topic/django-announce/3oaB2rVH3a0",
              "https://www.djangoproject.com/weblog/2019/dec/18/security-releases/",
              "https://docs.djangoproject.com/en/dev/releases/security/",
              "https://usn.ubuntu.com/4224-1/",
              "https://www.debian.org/security/2020/dsa-4598",
              "https://seclists.org/bugtraq/2020/Jan/9",
              "http://packetstormsecurity.com/files/155872/Django-Account-Hijack.html",
              "https://security.netapp.com/advisory/ntap-20200110-0003/",
              "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HCM2DPUI7TOZWN4A6JFQFUVQ2XGE7GUD/",
              "https://security.gentoo.org/glsa/202004-17"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-vfq6-hq5r-27r6",
          "description": "Potential account hijack via password reset form in Django",
          "fix": {
            "state": "fixed",
            "versions": [
              "1.11.27"
            ]
          },
          "id": "GHSA-vfq6-hq5r-27r6",
          "namespace": "github:language:python",
          "severity": "Critical",
          "urls": [
            "https://github.com/advisories/GHSA-vfq6-hq5r-27r6"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:decode-uri-component:decode-uri-component:0.2.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:decode-uri-component:decode_uri_component:0.2.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:decode_uri_component:decode-uri-component:0.2.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:decode_uri_component:decode_uri_component:0.2.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:decode-uri:decode-uri-component:0.2.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:decode-uri:decode_uri_component:0.2.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:decode_uri:decode-uri-component:0.2.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:decode_uri:decode_uri_component:0.2.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:decode:decode-uri-component:0.2.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:decode:decode_uri_component:0.2.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:decode-uri-component:0.2.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:decode_uri_component:0.2.0:*:*:*:*:*:*:*"
          ],
          "language": "javascript",
          "licenses": [],
          "locations": [
            {
              "path": "packages/node/base/package-lock.json"
            }
          ],
          "name": "decode-uri-component",
          "purl": "pkg:npm/decode-uri-component@0.2.0",
          "type": "npm",
          "upstreams": [],
          "version": "0.2.0"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c0.2.1 (unknown)"
            },
            "matcher": "javascript-matcher",
            "searchedBy": {
              "language": "javascript",
              "namespace": "github:language:javascript"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 7.5,
                  "exploitabilityScore": 3.9,
                  "impactScore": 3.6
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2022-38900",
            "description": "decode-uri-component 0.2.0 is vulnerable to Improper Input Validation resulting in DoS.",
            "id": "CVE-2022-38900",
            "namespace": "nvd:cpe",
            "severity": "High",
            "urls": [
              "https://github.com/sindresorhus/query-string/issues/345",
              "https://github.com/SamVerschueren/decode-uri-component/issues/5"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-w573-4hg7-7wgq",
          "description": "decode-uri-component vulnerable to Denial of Service (DoS)",
          "fix": {
            "state": "fixed",
            "versions": [
              "0.2.1"
            ]
          },
          "id": "GHSA-w573-4hg7-7wgq",
          "namespace": "github:language:javascript",
          "severity": "Low",
          "urls": [
            "https://github.com/advisories/GHSA-w573-4hg7-7wgq"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:python-django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:django:1.2:*:*:*:*:*:*:*"
          ],
          "language": "python",
          "licenses": [],
          "locations": [
            {
              "path": "packages/sub/.hidden/requirements.txt"
            }
          ],
          "name": "django",
          "purl": "pkg:pypi/django@1.2",
          "type": "python",
          "upstreams": [],
          "version": "1.2"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c1.11.19 (python)"
            },
            "matcher": "python-matcher",
            "searchedBy": {
              "language": "python",
              "namespace": "github:language:python"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 5,
                  "exploitabilityScore": 10,
                  "impactScore": 2.9
                },
                "vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 7.5,
                  "exploitabilityScore": 3.9,
                  "impactScore": 3.6
                },
                "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                "vendorMetadata": {},
                "version": "3.0"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2019-6975",
            "description": "Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",
            "id": "CVE-2019-6975",
            "namespace": "nvd:cpe",
            "severity": "High",
            "urls": [
              "https://www.openwall.com/lists/oss-security/2019/02/11/1",
              "https://www.djangoproject.com/weblog/2019/feb/11/security-releases/",
              "https://groups.google.com/forum/#!topic/django-announce/WTwEAprR0IQ",
              "https://docs.djangoproject.com/en/dev/releases/security/",
              "http://www.securityfocus.com/bid/106964",
              "https://usn.ubuntu.com/3890-1/",
              "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HVXDOVCXLD74SHR2BENGCE2OOYYYWJHZ/",
              "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/66WMXHGBXD7GSM3PEXVCMCAGLMQYHZCU/",
              "https://www.debian.org/security/2019/dsa-4476",
              "https://seclists.org/bugtraq/2019/Jul/10"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-wh4h-v3f2-r2pp",
          "description": "Uncontrolled Memory Consumption in Django",
          "fix": {
            "state": "fixed",
            "versions": [
              "1.11.19"
            ]
          },
          "id": "GHSA-wh4h-v3f2-r2pp",
          "namespace": "github:language:python",
          "severity": "High",
          "urls": [
            "https://github.com/advisories/GHSA-wh4h-v3f2-r2pp"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:python-django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:django:1.2:*:*:*:*:*:*:*"
          ],
          "language": "python",
          "licenses": [],
          "locations": [
            {
              "path": "packages/requirements.txt"
            }
          ],
          "name": "django",
          "purl": "pkg:pypi/django@1.2",
          "type": "python",
          "upstreams": [],
          "version": "1.2"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c1.11.19 (python)"
            },
            "matcher": "python-matcher",
            "searchedBy": {
              "language": "python",
              "namespace": "github:language:python"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 5,
                  "exploitabilityScore": 10,
                  "impactScore": 2.9
                },
                "vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 7.5,
                  "exploitabilityScore": 3.9,
                  "impactScore": 3.6
                },
                "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                "vendorMetadata": {},
                "version": "3.0"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2019-6975",
            "description": "Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",
            "id": "CVE-2019-6975",
            "namespace": "nvd:cpe",
            "severity": "High",
            "urls": [
              "https://www.openwall.com/lists/oss-security/2019/02/11/1",
              "https://www.djangoproject.com/weblog/2019/feb/11/security-releases/",
              "https://groups.google.com/forum/#!topic/django-announce/WTwEAprR0IQ",
              "https://docs.djangoproject.com/en/dev/releases/security/",
              "http://www.securityfocus.com/bid/106964",
              "https://usn.ubuntu.com/3890-1/",
              "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HVXDOVCXLD74SHR2BENGCE2OOYYYWJHZ/",
              "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/66WMXHGBXD7GSM3PEXVCMCAGLMQYHZCU/",
              "https://www.debian.org/security/2019/dsa-4476",
              "https://seclists.org/bugtraq/2019/Jul/10"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-wh4h-v3f2-r2pp",
          "description": "Uncontrolled Memory Consumption in Django",
          "fix": {
            "state": "fixed",
            "versions": [
              "1.11.19"
            ]
          },
          "id": "GHSA-wh4h-v3f2-r2pp",
          "namespace": "github:language:python",
          "severity": "High",
          "urls": [
            "https://github.com/advisories/GHSA-wh4h-v3f2-r2pp"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:node-forge:node-forge:0.10.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:node-forge:node_forge:0.10.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:node_forge:node-forge:0.10.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:node_forge:node_forge:0.10.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:node:node-forge:0.10.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:node:node_forge:0.10.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:node-forge:0.10.0:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:node_forge:0.10.0:*:*:*:*:*:*:*"
          ],
          "language": "javascript",
          "licenses": [],
          "locations": [
            {
              "path": "packages/node/base/package-lock.json"
            }
          ],
          "name": "node-forge",
          "purl": "pkg:npm/node-forge@0.10.0",
          "type": "npm",
          "upstreams": [],
          "version": "0.10.0"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c1.3.0 (unknown)"
            },
            "matcher": "javascript-matcher",
            "searchedBy": {
              "language": "javascript",
              "namespace": "github:language:javascript"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 5,
                  "exploitabilityScore": 10,
                  "impactScore": 2.9
                },
                "vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 7.5,
                  "exploitabilityScore": 3.9,
                  "impactScore": 3.6
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2022-24772",
            "description": "Forge (also called `node-forge`) is a native implementation of Transport Layer Security in JavaScript. Prior to version 1.3.0, RSA PKCS#1 v1.5 signature verification code does not check for tailing garbage bytes after decoding a `DigestInfo` ASN.1 structure. This can allow padding bytes to be removed and garbage data added to forge a signature when a low public exponent is being used. The issue has been addressed in `node-forge` version 1.3.0. There are currently no known workarounds.",
            "id": "CVE-2022-24772",
            "namespace": "nvd:cpe",
            "severity": "High",
            "urls": [
              "https://github.com/digitalbazaar/forge/commit/3f0b49a0573ef1bb7af7f5673c0cfebf00424df1",
              "https://github.com/digitalbazaar/forge/commit/bb822c02df0b61211836472e29b9790cc541cdb2",
              "https://github.com/digitalbazaar/forge/security/advisories/GHSA-x4jg-mjrx-434g"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-x4jg-mjrx-434g",
          "description": "Improper Verification of Cryptographic Signature in node-forge",
          "fix": {
            "state": "fixed",
            "versions": [
              "1.3.0"
            ]
          },
          "id": "GHSA-x4jg-mjrx-434g",
          "namespace": "github:language:javascript",
          "severity": "High",
          "urls": [
            "https://github.com/advisories/GHSA-x4jg-mjrx-434g"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:python-django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:django:1.2:*:*:*:*:*:*:*"
          ],
          "language": "python",
          "licenses": [],
          "locations": [
            {
              "path": "packages/sub/.hidden/requirements.txt"
            }
          ],
          "name": "django",
          "purl": "pkg:pypi/django@1.2",
          "type": "python",
          "upstreams": [],
          "version": "1.2"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003e=1.2.0,\u003c1.2.7 (python)"
            },
            "matcher": "python-matcher",
            "searchedBy": {
              "language": "python",
              "namespace": "github:language:python"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 5.8,
                  "exploitabilityScore": 8.6,
                  "impactScore": 4.9
                },
                "vector": "AV:N/AC:M/Au:N/C:N/I:P/A:P",
                "vendorMetadata": {},
                "version": "2.0"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2011-4136",
            "description": "django.contrib.sessions in Django before 1.2.7 and 1.3.x before 1.3.1, when session data is stored in the cache, uses the root namespace for both session identifiers and application-data keys, which allows remote attackers to modify a session by triggering use of a key that is equal to that session's identifier.",
            "id": "CVE-2011-4136",
            "namespace": "nvd:cpe",
            "severity": "Medium",
            "urls": [
              "https://bugzilla.redhat.com/show_bug.cgi?id=737366",
              "http://openwall.com/lists/oss-security/2011/09/13/2",
              "https://www.djangoproject.com/weblog/2011/sep/09/",
              "https://www.djangoproject.com/weblog/2011/sep/10/127/",
              "http://openwall.com/lists/oss-security/2011/09/11/1",
              "http://secunia.com/advisories/46614",
              "http://www.debian.org/security/2011/dsa-2332",
              "https://hermes.opensuse.org/messages/14700881"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-x88j-93vc-wpmp",
          "description": "Moderate severity vulnerability that affects django",
          "fix": {
            "state": "fixed",
            "versions": [
              "1.2.7"
            ]
          },
          "id": "GHSA-x88j-93vc-wpmp",
          "namespace": "github:language:python",
          "severity": "Medium",
          "urls": [
            "https://github.com/advisories/GHSA-x88j-93vc-wpmp"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:python-django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python-django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python-django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:python_django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python_django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:django:django:1.2:*:*:*:*:*:*:*",
            "cpe:2.3:a:python:django:1.2:*:*:*:*:*:*:*"
          ],
          "language": "python",
          "licenses": [],
          "locations": [
            {
              "path": "packages/requirements.txt"
            }
          ],
          "name": "django",
          "purl": "pkg:pypi/django@1.2",
          "type": "python",
          "upstreams": [],
          "version": "1.2"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003e=1.2.0,\u003c1.2.7 (python)"
            },
            "matcher": "python-matcher",
            "searchedBy": {
              "language": "python",
              "namespace": "github:language:python"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 5.8,
                  "exploitabilityScore": 8.6,
                  "impactScore": 4.9
                },
                "vector": "AV:N/AC:M/Au:N/C:N/I:P/A:P",
                "vendorMetadata": {},
                "version": "2.0"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2011-4136",
            "description": "django.contrib.sessions in Django before 1.2.7 and 1.3.x before 1.3.1, when session data is stored in the cache, uses the root namespace for both session identifiers and application-data keys, which allows remote attackers to modify a session by triggering use of a key that is equal to that session's identifier.",
            "id": "CVE-2011-4136",
            "namespace": "nvd:cpe",
            "severity": "Medium",
            "urls": [
              "https://bugzilla.redhat.com/show_bug.cgi?id=737366",
              "http://openwall.com/lists/oss-security/2011/09/13/2",
              "https://www.djangoproject.com/weblog/2011/sep/09/",
              "https://www.djangoproject.com/weblog/2011/sep/10/127/",
              "http://openwall.com/lists/oss-security/2011/09/11/1",
              "http://secunia.com/advisories/46614",
              "http://www.debian.org/security/2011/dsa-2332",
              "https://hermes.opensuse.org/messages/14700881"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-x88j-93vc-wpmp",
          "description": "Moderate severity vulnerability that affects django",
          "fix": {
            "state": "fixed",
            "versions": [
              "1.2.7"
            ]
          },
          "id": "GHSA-x88j-93vc-wpmp",
          "namespace": "github:language:python",
          "severity": "Medium",
          "urls": [
            "https://github.com/advisories/GHSA-x88j-93vc-wpmp"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:commons-compress:commons-compress:1.15:*:*:*:*:*:*:*",
            "cpe:2.3:a:commons-compress:commons_compress:1.15:*:*:*:*:*:*:*",
            "cpe:2.3:a:commons_compress:commons-compress:1.15:*:*:*:*:*:*:*",
            "cpe:2.3:a:commons_compress:commons_compress:1.15:*:*:*:*:*:*:*",
            "cpe:2.3:a:commons:commons-compress:1.15:*:*:*:*:*:*:*",
            "cpe:2.3:a:commons:commons_compress:1.15:*:*:*:*:*:*:*"
          ],
          "language": "java",
          "licenses": [],
          "locations": [
            {
              "path": "packages/pom.xml"
            }
          ],
          "metadata": {
            "archiveDigests": null,
            "manifestName": "",
            "pomArtifactID": "",
            "pomGroupID": "",
            "virtualPath": ""
          },
          "metadataType": "JavaMetadata",
          "name": "commons-compress",
          "purl": "pkg:maven/org.apache.commons/commons-compress@1.15",
          "type": "java-archive",
          "upstreams": [],
          "version": "1.15"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c1.21 (unknown)"
            },
            "matcher": "java-matcher",
            "searchedBy": {
              "language": "java",
              "namespace": "github:language:java"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 5,
                  "exploitabilityScore": 10,
                  "impactScore": 2.9
                },
                "vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 7.5,
                  "exploitabilityScore": 3.9,
                  "impactScore": 3.6
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2021-35517",
            "description": "When reading a specially crafted TAR archive, Compress can be made to allocate large amounts of memory that finally leads to an out of memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' tar package.",
            "id": "CVE-2021-35517",
            "namespace": "nvd:cpe",
            "severity": "High",
            "urls": [
              "https://commons.apache.org/proper/commons-compress/security-reports.html",
              "https://lists.apache.org/thread.html/r605d906b710b95f1bbe0036a53ac6968f667f2c249b6fbabada9a940%40%3Cuser.commons.apache.org%3E",
              "http://www.openwall.com/lists/oss-security/2021/07/13/3",
              "https://lists.apache.org/thread.html/ra393ffdc7c90a4a37ea023946f390285693795013a642d80fba20203@%3Cannounce.apache.org%3E",
              "https://lists.apache.org/thread.html/r54afdab05e01de970649c2d91a993f68a6b00cd73e6e34e16c832d46@%3Cuser.ant.apache.org%3E",
              "https://lists.apache.org/thread.html/r457b2ed564860996b20d938566fe8bd4bfb7c37be8e205448ccb5975@%3Cannounce.apache.org%3E",
              "http://www.openwall.com/lists/oss-security/2021/07/13/5",
              "https://lists.apache.org/thread.html/rb064d705fdfa44b5dae4c366b369ef6597951083196321773b983e71@%3Ccommits.pulsar.apache.org%3E",
              "https://lists.apache.org/thread.html/rd4332baaf6debd03d60deb7ec93bee49e5fdbe958cb6800dff7fb00e@%3Cnotifications.skywalking.apache.org%3E",
              "https://lists.apache.org/thread.html/rb7adf3e55359819e77230b4586521e5c6874ce5ed93384bdc14d6aee@%3Cnotifications.skywalking.apache.org%3E",
              "https://lists.apache.org/thread.html/r9f54c0caa462267e0cc68b49f141e91432b36b23348d18c65bd0d040@%3Cnotifications.skywalking.apache.org%3E",
              "https://lists.apache.org/thread.html/rba65ed5ddb0586f5b12598f55ec7db3633e7b7fede60466367fbf86a@%3Cnotifications.skywalking.apache.org%3E",
              "https://lists.apache.org/thread.html/rb6e1fa80d34e5ada45f72655d84bfd90db0ca44ef19236a49198c88c@%3Cnotifications.skywalking.apache.org%3E",
              "https://lists.apache.org/thread.html/rfba19167efc785ad3561e7ef29f340d65ac8f0d897aed00e0731e742@%3Cnotifications.skywalking.apache.org%3E",
              "https://lists.apache.org/thread.html/racd0c0381c8404f298b226cd9db2eaae965b14c9c568224aa3f437ae@%3Cnotifications.skywalking.apache.org%3E",
              "https://lists.apache.org/thread.html/r31f75743ac173b0a606f8ea6ea53f351f386c44e7bcf78ae04007c29@%3Cissues.flink.apache.org%3E",
              "https://lists.apache.org/thread.html/r67ef3c07fe3b8c1b02d48012149d280ad6da8e4cec253b527520fb2b@%3Cdev.poi.apache.org%3E",
              "https://www.oracle.com/security-alerts/cpuoct2021.html",
              "https://security.netapp.com/advisory/ntap-20211022-0001/",
              "https://www.oracle.com/security-alerts/cpujan2022.html",
              "https://www.oracle.com/security-alerts/cpuapr2022.html",
              "https://www.oracle.com/security-alerts/cpujul2022.html"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-xqfj-vm6h-2x34",
          "description": "Improper Handling of Length Parameter Inconsistency in Compress",
          "fix": {
            "state": "fixed",
            "versions": [
              "1.21"
            ]
          },
          "id": "GHSA-xqfj-vm6h-2x34",
          "namespace": "github:language:java",
          "severity": "High",
          "urls": [
            "https://github.com/advisories/GHSA-xqfj-vm6h-2x34"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:commons-compress:commons-compress:1.20:*:*:*:*:*:*:*",
            "cpe:2.3:a:commons-compress:commons_compress:1.20:*:*:*:*:*:*:*",
            "cpe:2.3:a:commons_compress:commons-compress:1.20:*:*:*:*:*:*:*",
            "cpe:2.3:a:commons_compress:commons_compress:1.20:*:*:*:*:*:*:*",
            "cpe:2.3:a:commons:commons-compress:1.20:*:*:*:*:*:*:*",
            "cpe:2.3:a:commons:commons_compress:1.20:*:*:*:*:*:*:*"
          ],
          "language": "java",
          "licenses": [],
          "locations": [
            {
              "path": "packages/sub/pom.xml"
            }
          ],
          "metadata": {
            "archiveDigests": null,
            "manifestName": "",
            "pomArtifactID": "",
            "pomGroupID": "",
            "virtualPath": ""
          },
          "metadataType": "JavaMetadata",
          "name": "commons-compress",
          "purl": "pkg:maven/org.apache.commons/commons-compress@1.20",
          "type": "java-archive",
          "upstreams": [],
          "version": "1.20"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c1.21 (unknown)"
            },
            "matcher": "java-matcher",
            "searchedBy": {
              "language": "java",
              "namespace": "github:language:java"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 5,
                  "exploitabilityScore": 10,
                  "impactScore": 2.9
                },
                "vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 7.5,
                  "exploitabilityScore": 3.9,
                  "impactScore": 3.6
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2021-35517",
            "description": "When reading a specially crafted TAR archive, Compress can be made to allocate large amounts of memory that finally leads to an out of memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' tar package.",
            "id": "CVE-2021-35517",
            "namespace": "nvd:cpe",
            "severity": "High",
            "urls": [
              "https://commons.apache.org/proper/commons-compress/security-reports.html",
              "https://lists.apache.org/thread.html/r605d906b710b95f1bbe0036a53ac6968f667f2c249b6fbabada9a940%40%3Cuser.commons.apache.org%3E",
              "http://www.openwall.com/lists/oss-security/2021/07/13/3",
              "https://lists.apache.org/thread.html/ra393ffdc7c90a4a37ea023946f390285693795013a642d80fba20203@%3Cannounce.apache.org%3E",
              "https://lists.apache.org/thread.html/r54afdab05e01de970649c2d91a993f68a6b00cd73e6e34e16c832d46@%3Cuser.ant.apache.org%3E",
              "https://lists.apache.org/thread.html/r457b2ed564860996b20d938566fe8bd4bfb7c37be8e205448ccb5975@%3Cannounce.apache.org%3E",
              "http://www.openwall.com/lists/oss-security/2021/07/13/5",
              "https://lists.apache.org/thread.html/rb064d705fdfa44b5dae4c366b369ef6597951083196321773b983e71@%3Ccommits.pulsar.apache.org%3E",
              "https://lists.apache.org/thread.html/rd4332baaf6debd03d60deb7ec93bee49e5fdbe958cb6800dff7fb00e@%3Cnotifications.skywalking.apache.org%3E",
              "https://lists.apache.org/thread.html/rb7adf3e55359819e77230b4586521e5c6874ce5ed93384bdc14d6aee@%3Cnotifications.skywalking.apache.org%3E",
              "https://lists.apache.org/thread.html/r9f54c0caa462267e0cc68b49f141e91432b36b23348d18c65bd0d040@%3Cnotifications.skywalking.apache.org%3E",
              "https://lists.apache.org/thread.html/rba65ed5ddb0586f5b12598f55ec7db3633e7b7fede60466367fbf86a@%3Cnotifications.skywalking.apache.org%3E",
              "https://lists.apache.org/thread.html/rb6e1fa80d34e5ada45f72655d84bfd90db0ca44ef19236a49198c88c@%3Cnotifications.skywalking.apache.org%3E",
              "https://lists.apache.org/thread.html/rfba19167efc785ad3561e7ef29f340d65ac8f0d897aed00e0731e742@%3Cnotifications.skywalking.apache.org%3E",
              "https://lists.apache.org/thread.html/racd0c0381c8404f298b226cd9db2eaae965b14c9c568224aa3f437ae@%3Cnotifications.skywalking.apache.org%3E",
              "https://lists.apache.org/thread.html/r31f75743ac173b0a606f8ea6ea53f351f386c44e7bcf78ae04007c29@%3Cissues.flink.apache.org%3E",
              "https://lists.apache.org/thread.html/r67ef3c07fe3b8c1b02d48012149d280ad6da8e4cec253b527520fb2b@%3Cdev.poi.apache.org%3E",
              "https://www.oracle.com/security-alerts/cpuoct2021.html",
              "https://security.netapp.com/advisory/ntap-20211022-0001/",
              "https://www.oracle.com/security-alerts/cpujan2022.html",
              "https://www.oracle.com/security-alerts/cpuapr2022.html",
              "https://www.oracle.com/security-alerts/cpujul2022.html"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-xqfj-vm6h-2x34",
          "description": "Improper Handling of Length Parameter Inconsistency in Compress",
          "fix": {
            "state": "fixed",
            "versions": [
              "1.21"
            ]
          },
          "id": "GHSA-xqfj-vm6h-2x34",
          "namespace": "github:language:java",
          "severity": "High",
          "urls": [
            "https://github.com/advisories/GHSA-xqfj-vm6h-2x34"
          ]
        }
      },
      {
        "artifact": {
          "cpes": [
            "cpe:2.3:a:minimist:minimist:1.2.5:*:*:*:*:*:*:*",
            "cpe:2.3:a:*:minimist:1.2.5:*:*:*:*:*:*:*"
          ],
          "language": "javascript",
          "licenses": [],
          "locations": [
            {
              "path": "packages/node/base/package-lock.json"
            }
          ],
          "name": "minimist",
          "purl": "pkg:npm/minimist@1.2.5",
          "type": "npm",
          "upstreams": [],
          "version": "1.2.5"
        },
        "matchDetails": [
          {
            "found": {
              "versionConstraint": "\u003c1.2.6 (unknown)"
            },
            "matcher": "javascript-matcher",
            "searchedBy": {
              "language": "javascript",
              "namespace": "github:language:javascript"
            },
            "type": "exact-direct-match"
          }
        ],
        "relatedVulnerabilities": [
          {
            "cvss": [
              {
                "metrics": {
                  "baseScore": 7.5,
                  "exploitabilityScore": 10,
                  "impactScore": 6.4
                },
                "vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P",
                "vendorMetadata": {},
                "version": "2.0"
              },
              {
                "metrics": {
                  "baseScore": 9.8,
                  "exploitabilityScore": 3.9,
                  "impactScore": 5.9
                },
                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
                "vendorMetadata": {},
                "version": "3.1"
              }
            ],
            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2021-44906",
            "description": "Minimist \u003c=1.2.5 is vulnerable to Prototype Pollution via file index.js, function setKey() (lines 69-95).",
            "id": "CVE-2021-44906",
            "namespace": "nvd:cpe",
            "severity": "Critical",
            "urls": [
              "https://github.com/Marynk/JavaScript-vulnerability-detection/blob/main/minimist%20PoC.zip",
              "https://snyk.io/vuln/SNYK-JS-MINIMIST-559764",
              "https://stackoverflow.com/questions/8588563/adding-custom-properties-to-a-function/20278068#20278068",
              "https://github.com/substack/minimist/issues/164",
              "https://github.com/substack/minimist/blob/master/index.js#L69"
            ]
          }
        ],
        "vulnerability": {
          "advisories": [],
          "cvss": [],
          "dataSource": "https://github.com/advisories/GHSA-xvch-5gv4-984h",
          "description": "Prototype Pollution in minimist",
          "fix": {
            "state": "fixed",
            "versions": [
              "1.2.6"
            ]
          },
          "id": "GHSA-xvch-5gv4-984h",
          "namespace": "github:language:javascript",
          "severity": "Critical",
          "urls": [
            "https://github.com/advisories/GHSA-xvch-5gv4-984h"
          ]
        }
      }
    ],
    "source": {
      "target": "/var/folders/2v/z_0jd7gn30qcym54rz_z2__m0000gq/T/temp-clone_636251261",
      "type": "directory"
    }
  },
  "secrets": {
    "ArtifactName": "/var/folders/2v/z_0jd7gn30qcym54rz_z2__m0000gq/T/temp-clone_636251261",
    "ArtifactType": "filesystem",
    "Metadata": {
      "ImageConfig": {
        "architecture": "",
        "config": {},
        "created": "0001-01-01T00:00:00Z",
        "os": "",
        "rootfs": {
          "diff_ids": null,
          "type": ""
        }
      }
    },
    "Results": [
      {
        "Class": "secret",
        "Secrets": [
          {
            "Category": "AWS",
            "Code": {
              "Lines": [
                {
                  "Annotation": "",
                  "Content": "sudo systemctl start apache2",
                  "FirstCause": false,
                  "Highlighted": "sudo systemctl start apache2",
                  "IsCause": false,
                  "LastCause": false,
                  "Number": 13,
                  "Truncated": false
                },
                {
                  "Annotation": "",
                  "Content": "sudo systemctl enable apache2",
                  "FirstCause": false,
                  "Highlighted": "sudo systemctl enable apache2",
                  "IsCause": false,
                  "LastCause": false,
                  "Number": 14,
                  "Truncated": false
                },
                {
                  "Annotation": "",
                  "Content": "export AWS_ACCESS_KEY_ID=********************",
                  "FirstCause": true,
                  "Highlighted": "export AWS_ACCESS_KEY_ID=********************",
                  "IsCause": true,
                  "LastCause": true,
                  "Number": 15,
                  "Truncated": false
                },
                {
                  "Annotation": "",
                  "Content": "export AWS_SECRET_ACCESS_KEY=****************************************",
                  "FirstCause": false,
                  "Highlighted": "export AWS_SECRET_ACCESS_KEY=****************************************",
                  "IsCause": false,
                  "LastCause": false,
                  "Number": 16,
                  "Truncated": false
                }
              ]
            },
            "EndLine": 15,
            "Layer": {},
            "Match": "export AWS_ACCESS_KEY_ID=********************",
            "RuleID": "aws-access-key-id",
            "Severity": "CRITICAL",
            "StartLine": 15,
            "Title": "AWS Access Key ID"
          },
          {
            "Category": "AWS",
            "Code": {
              "Lines": [
                {
                  "Annotation": "",
                  "Content": "sudo systemctl enable apache2",
                  "FirstCause": false,
                  "Highlighted": "sudo systemctl enable apache2",
                  "IsCause": false,
                  "LastCause": false,
                  "Number": 14,
                  "Truncated": false
                },
                {
                  "Annotation": "",
                  "Content": "export AWS_ACCESS_KEY_ID=********************",
                  "FirstCause": false,
                  "Highlighted": "export AWS_ACCESS_KEY_ID=********************",
                  "IsCause": false,
                  "LastCause": false,
                  "Number": 15,
                  "Truncated": false
                },
                {
                  "Annotation": "",
                  "Content": "export AWS_SECRET_ACCESS_KEY=****************************************",
                  "FirstCause": true,
                  "Highlighted": "export AWS_SECRET_ACCESS_KEY=****************************************",
                  "IsCause": true,
                  "LastCause": true,
                  "Number": 16,
                  "Truncated": false
                },
                {
                  "Annotation": "",
                  "Content": "export AWS_DEFAULT_REGION=us-west-2",
                  "FirstCause": false,
                  "Highlighted": "export AWS_DEFAULT_REGION=us-west-2",
                  "IsCause": false,
                  "LastCause": false,
                  "Number": 17,
                  "Truncated": false
                }
              ]
            },
            "EndLine": 16,
            "Layer": {},
            "Match": "export AWS_SECRET_ACCESS_KEY=****************************************",
            "RuleID": "aws-secret-access-key",
            "Severity": "CRITICAL",
            "StartLine": 16,
            "Title": "AWS Secret Access Key"
          }
        ],
        "Target": "terraform/aws/ec2.tf"
      },
      {
        "Class": "secret",
        "Secrets": [
          {
            "Category": "AWS",
            "Code": {
              "Lines": [
                {
                  "Annotation": "",
                  "Content": "  environment {",
                  "FirstCause": false,
                  "Highlighted": "  environment {",
                  "IsCause": false,
                  "LastCause": false,
                  "Number": 42,
                  "Truncated": false
                },
                {
                  "Annotation": "",
                  "Content": "    variables = {",
                  "FirstCause": false,
                  "Highlighted": "    variables = {",
                  "IsCause": false,
                  "LastCause": false,
                  "Number": 43,
                  "Truncated": false
                },
                {
                  "Annotation": "",
                  "Content": "      access_key = \"********************\"",
                  "FirstCause": true,
                  "Highlighted": "      access_key = \"********************\"",
                  "IsCause": true,
                  "LastCause": true,
                  "Number": 44,
                  "Truncated": false
                },
                {
                  "Annotation": "",
                  "Content": "      secret_key = \"****************************************\"",
                  "FirstCause": false,
                  "Highlighted": "      secret_key = \"****************************************\"",
                  "IsCause": false,
                  "LastCause": false,
                  "Number": 45,
                  "Truncated": false
                }
              ]
            },
            "EndLine": 44,
            "Layer": {},
            "Match": "      access_key = \"********************\"",
            "RuleID": "aws-access-key-id",
            "Severity": "CRITICAL",
            "StartLine": 44,
            "Title": "AWS Access Key ID"
          },
          {
            "Category": "AWS",
            "Code": {
              "Lines": [
                {
                  "Annotation": "",
                  "Content": "    variables = {",
                  "FirstCause": false,
                  "Highlighted": "    variables = {",
                  "IsCause": false,
                  "LastCause": false,
                  "Number": 43,
                  "Truncated": false
                },
                {
                  "Annotation": "",
                  "Content": "      access_key = \"********************\"",
                  "FirstCause": false,
                  "Highlighted": "      access_key = \"********************\"",
                  "IsCause": false,
                  "LastCause": false,
                  "Number": 44,
                  "Truncated": false
                },
                {
                  "Annotation": "",
                  "Content": "      secret_key = \"****************************************\"",
                  "FirstCause": true,
                  "Highlighted": "      secret_key = \"****************************************\"",
                  "IsCause": true,
                  "LastCause": true,
                  "Number": 45,
                  "Truncated": false
                },
                {
                  "Annotation": "",
                  "Content": "    }",
                  "FirstCause": false,
                  "Highlighted": "    }",
                  "IsCause": false,
                  "LastCause": false,
                  "Number": 46,
                  "Truncated": false
                }
              ]
            },
            "EndLine": 45,
            "Layer": {},
            "Match": "      secret_key = \"****************************************\"",
            "RuleID": "aws-secret-access-key",
            "Severity": "CRITICAL",
            "StartLine": 45,
            "Title": "AWS Secret Access Key"
          }
        ],
        "Target": "terraform/aws/lambda.tf"
      },
      {
        "Class": "secret",
        "Secrets": [
          {
            "Category": "AWS",
            "Code": {
              "Lines": [
                {
                  "Annotation": "",
                  "Content": "  alias      = \"plain_text_access_keys_provider\"",
                  "FirstCause": false,
                  "Highlighted": "  alias      = \"plain_text_access_keys_provider\"",
                  "IsCause": false,
                  "LastCause": false,
                  "Number": 8,
                  "Truncated": false
                },
                {
                  "Annotation": "",
                  "Content": "  region     = \"us-west-1\"",
                  "FirstCause": false,
                  "Highlighted": "  region     = \"us-west-1\"",
                  "IsCause": false,
                  "LastCause": false,
                  "Number": 9,
                  "Truncated": false
                },
                {
                  "Annotation": "",
                  "Content": "  access_key = \"********************\"",
                  "FirstCause": true,
                  "Highlighted": "  access_key = \"********************\"",
                  "IsCause": true,
                  "LastCause": true,
                  "Number": 10,
                  "Truncated": false
                },
                {
                  "Annotation": "",
                  "Content": "  secret_key = \"****************************************\"",
                  "FirstCause": false,
                  "Highlighted": "  secret_key = \"****************************************\"",
                  "IsCause": false,
                  "LastCause": false,
                  "Number": 11,
                  "Truncated": false
                }
              ]
            },
            "EndLine": 10,
            "Layer": {},
            "Match": "  access_key = \"********************\"",
            "RuleID": "aws-access-key-id",
            "Severity": "CRITICAL",
            "StartLine": 10,
            "Title": "AWS Access Key ID"
          },
          {
            "Category": "AWS",
            "Code": {
              "Lines": [
                {
                  "Annotation": "",
                  "Content": "  region     = \"us-west-1\"",
                  "FirstCause": false,
                  "Highlighted": "  region     = \"us-west-1\"",
                  "IsCause": false,
                  "LastCause": false,
                  "Number": 9,
                  "Truncated": false
                },
                {
                  "Annotation": "",
                  "Content": "  access_key = \"********************\"",
                  "FirstCause": false,
                  "Highlighted": "  access_key = \"********************\"",
                  "IsCause": false,
                  "LastCause": false,
                  "Number": 10,
                  "Truncated": false
                },
                {
                  "Annotation": "",
                  "Content": "  secret_key = \"****************************************\"",
                  "FirstCause": true,
                  "Highlighted": "  secret_key = \"****************************************\"",
                  "IsCause": true,
                  "LastCause": true,
                  "Number": 11,
                  "Truncated": false
                },
                {
                  "Annotation": "",
                  "Content": "}",
                  "FirstCause": false,
                  "Highlighted": "}",
                  "IsCause": false,
                  "LastCause": false,
                  "Number": 12,
                  "Truncated": false
                }
              ]
            },
            "EndLine": 11,
            "Layer": {},
            "Match": "  secret_key = \"****************************************\"",
            "RuleID": "aws-secret-access-key",
            "Severity": "CRITICAL",
            "StartLine": 11,
            "Title": "AWS Secret Access Key"
          }
        ],
        "Target": "terraform/aws/providers.tf"
      }
    ],
    "SchemaVersion": 2
  },
  "configs": {
    "ArtifactName": "/var/folders/2v/z_0jd7gn30qcym54rz_z2__m0000gq/T/temp-clone_636251261",
    "ArtifactType": "filesystem",
    "Metadata": {
      "ImageConfig": {
        "architecture": "",
        "config": {},
        "created": "0001-01-01T00:00:00Z",
        "os": "",
        "rootfs": {
          "diff_ids": null,
          "type": ""
        }
      }
    },
    "Results": [
      {
        "Class": "config",
        "Misconfigurations": [
          {
            "AVDID": "AVD-AWS-0176",
            "CauseMetadata": {
              "Code": {
                "Lines": null
              },
              "Provider": "AWS",
              "Service": "rds"
            },
            "Description": "Ensure IAM Database Authentication is enabled for RDS database instances to manage database access",
            "ID": "N/A",
            "Layer": {},
            "Message": "No issues found",
            "Namespace": "builtin.aws.rds.aws0176",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/n/a",
            "Query": "data.builtin.aws.rds.aws0176.deny",
            "References": [
              "https://docs.aws.amazon.com/neptune/latest/userguide/iam-auth.html",
              "https://avd.aquasec.com/misconfig/n/a"
            ],
            "Resolution": "Modify the PostgreSQL and MySQL type RDS instances to enable IAM database authentication.",
            "Severity": "MEDIUM",
            "Status": "PASS",
            "Title": "RDS IAM Database Authentication Disabled",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0177",
            "CauseMetadata": {
              "Code": {
                "Lines": null
              },
              "Provider": "AWS",
              "Service": "rds"
            },
            "Description": "Ensure deletion protection is enabled for RDS database instances.",
            "ID": "N/A",
            "Layer": {},
            "Message": "No issues found",
            "Namespace": "builtin.aws.rds.aws0177",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/n/a",
            "Query": "data.builtin.aws.rds.aws0177.deny",
            "References": [
              "https://aws.amazon.com/about-aws/whats-new/2018/09/amazon-rds-now-provides-database-deletion-protection/",
              "https://avd.aquasec.com/misconfig/n/a"
            ],
            "Resolution": "Modify the RDS instances to enable deletion protection.",
            "Severity": "MEDIUM",
            "Status": "PASS",
            "Title": "RDS Deletion Protection Disabled",
            "Type": "Terraform Security Check"
          }
        ],
        "Target": "terraform/alicloud",
        "Type": "terraform"
      },
      {
        "Class": "config",
        "Misconfigurations": [
          {
            "AVDID": "AVD-AWS-0028",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_instance\" \"db_app\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 242,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # ec2 have plain text secrets in user data",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 243,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  ami                  = data.aws_ami.amazon-linux-2.id",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 244,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  instance_type        = \"t2.nano\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 245,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  iam_instance_profile = aws_iam_instance_profile.ec2profile.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 246,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 247,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  vpc_security_group_ids = [",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 248,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  \"${aws_security_group.web-node.id}\"]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 249,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  subnet_id = \"${aws_subnet.web_subnet.id}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 250,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 251,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 412,
              "Provider": "AWS",
              "Resource": "aws_instance.db_app",
              "Service": "ec2",
              "StartLine": 242
            },
            "Description": "\nIMDS v2 (Instance Metadata Service) introduced session authentication tokens which improve security when talking to IMDS.\nBy default \u003ccode\u003eaws_instance\u003c/code\u003e resource sets IMDS session auth tokens to be optional. \nTo fully protect IMDS you need to enable session tokens by using \u003ccode\u003emetadata_options\u003c/code\u003e block and its \u003ccode\u003ehttp_tokens\u003c/code\u003e variable set to \u003ccode\u003erequired\u003c/code\u003e.\n",
            "ID": "AVD-AWS-0028",
            "Layer": {},
            "Message": "Instance does not require IMDS access to require a token",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0028",
            "Query": "data..",
            "References": [
              "https://aws.amazon.com/blogs/security/defense-in-depth-open-firewalls-reverse-proxies-ssrf-vulnerabilities-ec2-instance-metadata-service",
              "https://avd.aquasec.com/misconfig/avd-aws-0028"
            ],
            "Resolution": "Enable HTTP token requirement for IMDS",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "aws_instance should activate session tokens for Instance Metadata Service.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0057",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_iam_role_policy\" \"ec2policy\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 205,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 206,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "      \"Action\": [",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 214,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "        \"s3:*\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 215,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "        \"ec2:*\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 216,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "        \"rds:*\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 217,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "      ],",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 218,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 224,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 225,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 218,
              "Provider": "AWS",
              "Resource": "aws_iam_role_policy.ec2policy",
              "Service": "iam",
              "StartLine": 214
            },
            "Description": "You should use the principle of least privilege when defining your IAM policies. This means you should specify each exact permission required without using wildcards, as this could cause the granting of access to certain undesired actions, resources and principals.",
            "ID": "AVD-AWS-0057",
            "Layer": {},
            "Message": "IAM policy document uses wildcarded action 's3:*'",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0057",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0057"
            ],
            "Resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0057",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_iam_role_policy\" \"ec2policy\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 205,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 206,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "      \"Action\": [",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 214,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "        \"s3:*\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 215,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "        \"ec2:*\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 216,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "        \"rds:*\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 217,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "      ],",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 218,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 224,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 225,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 218,
              "Provider": "AWS",
              "Resource": "aws_iam_role_policy.ec2policy",
              "Service": "iam",
              "StartLine": 214
            },
            "Description": "You should use the principle of least privilege when defining your IAM policies. This means you should specify each exact permission required without using wildcards, as this could cause the granting of access to certain undesired actions, resources and principals.",
            "ID": "AVD-AWS-0057",
            "Layer": {},
            "Message": "IAM policy document uses wildcarded action 's3:*'",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0057",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0057"
            ],
            "Resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0057",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_iam_role_policy\" \"ec2policy\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 205,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 206,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "      \"Action\": [",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 214,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "        \"s3:*\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 215,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "        \"ec2:*\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 216,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "        \"rds:*\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 217,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "      ],",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 218,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 224,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 225,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 218,
              "Provider": "AWS",
              "Resource": "aws_iam_role_policy.ec2policy",
              "Service": "iam",
              "StartLine": 214
            },
            "Description": "You should use the principle of least privilege when defining your IAM policies. This means you should specify each exact permission required without using wildcards, as this could cause the granting of access to certain undesired actions, resources and principals.",
            "ID": "AVD-AWS-0057",
            "Layer": {},
            "Message": "IAM policy document uses wildcarded action 's3:*'",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0057",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0057"
            ],
            "Resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0057",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_iam_role_policy\" \"ec2policy\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 205,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 206,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "      \"Resource\": \"*\"",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 220,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 224,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 225,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 220,
              "Provider": "AWS",
              "Resource": "aws_iam_role_policy.ec2policy",
              "Service": "iam",
              "StartLine": 220
            },
            "Description": "You should use the principle of least privilege when defining your IAM policies. This means you should specify each exact permission required without using wildcards, as this could cause the granting of access to certain undesired actions, resources and principals.",
            "ID": "AVD-AWS-0057",
            "Layer": {},
            "Message": "IAM policy document uses sensitive action 's3:*' on wildcarded resource '*'",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0057",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0057"
            ],
            "Resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0077",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_db_instance\" \"default\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": true
                  },
                  {
                    "Annotation": "0",
                    "Content": "  backup_retention_period = 0",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 17,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 40,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 41,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 17,
              "Provider": "AWS",
              "Resource": "aws_db_instance.default",
              "Service": "rds",
              "StartLine": 17
            },
            "Description": "RDS backup retention for clusters defaults to 1 day, this may not be enough to identify and respond to an issue. Backup retention periods should be set to a period that is a balance on cost and limiting risk.",
            "ID": "AVD-AWS-0077",
            "Layer": {},
            "Message": "Instance has very low backup retention period.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0077",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithAutomatedBackups.html#USER_WorkingWithAutomatedBackups.BackupRetention",
              "https://avd.aquasec.com/misconfig/avd-aws-0077"
            ],
            "Resolution": "Explicitly set the retention period to greater than the default",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "RDS Cluster and RDS instance should have backup retention longer than default 1 day",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0080",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_db_instance\" \"default\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": true
                  },
                  {
                    "Annotation": "false",
                    "Content": "  storage_encrypted       = false",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 18,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 40,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 41,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 18,
              "Provider": "AWS",
              "Resource": "aws_db_instance.default",
              "Service": "rds",
              "StartLine": 18
            },
            "Description": "Encryption should be enabled for an RDS Database instances. \n\nWhen enabling encryption by setting the kms_key_id.",
            "ID": "AVD-AWS-0080",
            "Layer": {},
            "Message": "Instance does not have storage encryption enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0080",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Encryption.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0080"
            ],
            "Resolution": "Enable encryption for RDS instances",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "RDS encryption has not been enabled at a DB Instance level.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0082",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_db_instance\" \"default\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": true
                  },
                  {
                    "Annotation": "true",
                    "Content": "  publicly_accessible     = true",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 21,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 40,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 41,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 21,
              "Provider": "AWS",
              "Resource": "aws_db_instance.default",
              "Service": "rds",
              "StartLine": 21
            },
            "Description": "Database resources should not publicly available. You should limit all access to the minimum that is required for your application to function.",
            "ID": "AVD-AWS-0082",
            "Layer": {},
            "Message": "Instance is exposed publicly.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0082",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html#USER_VPC.Hiding",
              "https://avd.aquasec.com/misconfig/avd-aws-0082"
            ],
            "Resolution": "Set the database to not be publicly accessible",
            "Severity": "CRITICAL",
            "Status": "FAIL",
            "Title": "A database resource is marked as publicly accessible.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0099",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_security_group\" \"default\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 116,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name   = \"${local.resource_prefix.value}-rds-sg\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 117,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  vpc_id = aws_vpc.web_vpc.id",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 118,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 119,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 120,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name        = \"${local.resource_prefix.value}-rds-sg\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 121,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Environment = local.resource_prefix.value",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 122,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    }, {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 123,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"d68d2897add9bc2203a5ed0632a5cdd8ff8cefb0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 124,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 125,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 133,
              "Provider": "AWS",
              "Resource": "aws_security_group.default",
              "Service": "ec2",
              "StartLine": 116
            },
            "Description": "Security groups should include a description for auditing purposes.\n\nSimplifies auditing, debugging, and managing security groups.",
            "ID": "AVD-AWS-0099",
            "Layer": {},
            "Message": "Security group explicitly uses the default description.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0099",
            "Query": "data..",
            "References": [
              "https://www.cloudconformity.com/knowledge-base/aws/EC2/security-group-rules-description.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0099"
            ],
            "Resolution": "Add descriptions for all security groups",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Missing description for security group.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0104",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_security_group_rule\" \"egress\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 144,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  type              = \"egress\"",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 145,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  from_port         = 0",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 146,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  to_port           = 0",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 147,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  protocol          = \"-1\"",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 148,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  cidr_blocks       = [\"0.0.0.0/0\"]",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 149,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  security_group_id = \"${aws_security_group.default.id}\"",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 150,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 151,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 149,
              "Provider": "AWS",
              "Resource": "aws_security_group_rule.egress",
              "Service": "ec2",
              "StartLine": 149
            },
            "Description": "Opening up ports to connect out to the public internet is generally to be avoided. You should restrict access to IP addresses or ranges that are explicitly required where possible.",
            "ID": "AVD-AWS-0104",
            "Layer": {},
            "Message": "Security group rule allows egress to multiple public internet addresses.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0104",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/whitepapers/latest/building-scalable-secure-multi-vpc-network-infrastructure/centralized-egress-to-internet.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0104"
            ],
            "Resolution": "Set a more restrictive cidr range",
            "Severity": "CRITICAL",
            "Status": "FAIL",
            "Title": "An egress security group rule allows traffic to /0.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0124",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_security_group_rule\" \"ingress\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 135,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  type              = \"ingress\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 136,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  from_port         = \"3306\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 137,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  to_port           = \"3306\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 138,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  protocol          = \"tcp\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 139,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  cidr_blocks       = [\"${aws_vpc.web_vpc.cidr_block}\"]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 140,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  security_group_id = aws_security_group.default.id",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 141,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 142,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 142,
              "Provider": "AWS",
              "Resource": "aws_security_group_rule.ingress",
              "Service": "ec2",
              "StartLine": 135
            },
            "Description": "Security group rules should include a description for auditing purposes.\n\nSimplifies auditing, debugging, and managing security groups.",
            "ID": "AVD-AWS-0124",
            "Layer": {},
            "Message": "Security group rule does not have a description.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0124",
            "Query": "data..",
            "References": [
              "https://www.cloudconformity.com/knowledge-base/aws/EC2/security-group-rules-description.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0124"
            ],
            "Resolution": "Add descriptions for all security groups rules",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Missing description for security group rule.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0124",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_security_group_rule\" \"egress\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 144,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  type              = \"egress\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 145,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  from_port         = 0",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 146,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  to_port           = 0",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 147,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  protocol          = \"-1\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 148,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  cidr_blocks       = [\"0.0.0.0/0\"]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 149,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  security_group_id = \"${aws_security_group.default.id}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 150,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 151,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 151,
              "Provider": "AWS",
              "Resource": "aws_security_group_rule.egress",
              "Service": "ec2",
              "StartLine": 144
            },
            "Description": "Security group rules should include a description for auditing purposes.\n\nSimplifies auditing, debugging, and managing security groups.",
            "ID": "AVD-AWS-0124",
            "Layer": {},
            "Message": "Security group rule does not have a description.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0124",
            "Query": "data..",
            "References": [
              "https://www.cloudconformity.com/knowledge-base/aws/EC2/security-group-rules-description.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0124"
            ],
            "Resolution": "Add descriptions for all security groups rules",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Missing description for security group rule.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0131",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_instance\" \"db_app\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 242,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # ec2 have plain text secrets in user data",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 243,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  ami                  = data.aws_ami.amazon-linux-2.id",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 244,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  instance_type        = \"t2.nano\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 245,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  iam_instance_profile = aws_iam_instance_profile.ec2profile.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 246,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 247,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  vpc_security_group_ids = [",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 248,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  \"${aws_security_group.web-node.id}\"]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 249,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  subnet_id = \"${aws_subnet.web_subnet.id}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 250,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 251,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 412,
              "Provider": "AWS",
              "Resource": "aws_instance.db_app",
              "Service": "ec2",
              "StartLine": 242
            },
            "Description": "Block devices should be encrypted to ensure sensitive data is held securely at rest.",
            "ID": "AVD-AWS-0131",
            "Layer": {},
            "Message": "Root block device is not encrypted.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0131",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0131"
            ],
            "Resolution": "Turn on encryption for all block devices",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Instance with unencrypted block device.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0133",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_db_instance\" \"default\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                   = var.dbname",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  engine                 = \"mysql\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  option_group_name      = aws_db_option_group.default.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  parameter_group_name   = aws_db_parameter_group.default.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  db_subnet_group_name   = aws_db_subnet_group.default.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  vpc_security_group_ids = [\"${aws_security_group.default.id}\"]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  identifier              = \"rds-${local.resource_prefix.value}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 41,
              "Provider": "AWS",
              "Resource": "aws_db_instance.default",
              "Service": "rds",
              "StartLine": 1
            },
            "Description": "Enabling Performance insights allows for greater depth in monitoring data.\n\t\t\nFor example, information about active sessions could help diagose a compromise or assist in the investigation",
            "ID": "AVD-AWS-0133",
            "Layer": {},
            "Message": "Instance does not have performance insights enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0133",
            "Query": "data..",
            "References": [
              "https://aws.amazon.com/rds/performance-insights/",
              "https://avd.aquasec.com/misconfig/avd-aws-0133"
            ],
            "Resolution": "Enable performance insights",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Enable Performance Insights to detect potential problems",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0176",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_db_instance\" \"default\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                   = var.dbname",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  engine                 = \"mysql\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  option_group_name      = aws_db_option_group.default.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  parameter_group_name   = aws_db_parameter_group.default.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  db_subnet_group_name   = aws_db_subnet_group.default.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  vpc_security_group_ids = [\"${aws_security_group.default.id}\"]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  identifier              = \"rds-${local.resource_prefix.value}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 41,
              "Provider": "AWS",
              "Resource": "aws_db_instance.default",
              "Service": "rds",
              "StartLine": 1
            },
            "Description": "Ensure IAM Database Authentication is enabled for RDS database instances to manage database access",
            "ID": "N/A",
            "Layer": {},
            "Message": "Instance does not have IAM Authentication enabled",
            "Namespace": "builtin.aws.rds.aws0176",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/n/a",
            "Query": "data.builtin.aws.rds.aws0176.deny",
            "References": [
              "https://docs.aws.amazon.com/neptune/latest/userguide/iam-auth.html",
              "https://avd.aquasec.com/misconfig/n/a"
            ],
            "Resolution": "Modify the PostgreSQL and MySQL type RDS instances to enable IAM database authentication.",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "RDS IAM Database Authentication Disabled",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0177",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_db_instance\" \"default\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                   = var.dbname",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  engine                 = \"mysql\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  option_group_name      = aws_db_option_group.default.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  parameter_group_name   = aws_db_parameter_group.default.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  db_subnet_group_name   = aws_db_subnet_group.default.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  vpc_security_group_ids = [\"${aws_security_group.default.id}\"]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  identifier              = \"rds-${local.resource_prefix.value}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 41,
              "Provider": "AWS",
              "Resource": "aws_db_instance.default",
              "Service": "rds",
              "StartLine": 1
            },
            "Description": "Ensure deletion protection is enabled for RDS database instances.",
            "ID": "N/A",
            "Layer": {},
            "Message": "Instance does not have Deletion Protection enabled",
            "Namespace": "builtin.aws.rds.aws0177",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/n/a",
            "Query": "data.builtin.aws.rds.aws0177.deny",
            "References": [
              "https://aws.amazon.com/about-aws/whats-new/2018/09/amazon-rds-now-provides-database-deletion-protection/",
              "https://avd.aquasec.com/misconfig/n/a"
            ],
            "Resolution": "Modify the RDS instances to enable deletion protection.",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "RDS Deletion Protection Disabled",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0029",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_instance\" \"db_app\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 242,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # ec2 have plain text secrets in user data",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 243,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  ami                  = data.aws_ami.amazon-linux-2.id",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 244,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  instance_type        = \"t2.nano\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 245,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  iam_instance_profile = aws_iam_instance_profile.ec2profile.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 246,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 247,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  vpc_security_group_ids = [",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 248,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  \"${aws_security_group.web-node.id}\"]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 249,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  subnet_id = \"${aws_subnet.web_subnet.id}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 250,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 251,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 412,
              "Provider": "AWS",
              "Resource": "aws_instance.db_app",
              "Service": "ec2",
              "StartLine": 242
            },
            "Description": "EC2 instance data is used to pass start up information into the EC2 instance. This userdata must not contain access key credentials. Instead use an IAM Instance Profile assigned to the instance to grant access to other AWS Services.",
            "ID": "AVD-AWS-0029",
            "Layer": {},
            "Message": "No issues found",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0029",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instancedata-add-user-data.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0029"
            ],
            "Resolution": "Remove sensitive data from the EC2 instance user-data",
            "Severity": "CRITICAL",
            "Status": "PASS",
            "Title": "User data for EC2 instances must not contain sensitive AWS keys",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0107",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_security_group_rule\" \"ingress\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 135,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  type              = \"ingress\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 136,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  from_port         = \"3306\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 137,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  to_port           = \"3306\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 138,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  protocol          = \"tcp\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 139,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  cidr_blocks       = [\"${aws_vpc.web_vpc.cidr_block}\"]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 140,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  security_group_id = aws_security_group.default.id",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 141,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 142,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 142,
              "Provider": "AWS",
              "Resource": "aws_security_group_rule.ingress",
              "Service": "ec2",
              "StartLine": 135
            },
            "Description": "Opening up ports to the public internet is generally to be avoided. You should restrict access to IP addresses or ranges that explicitly require it where possible.",
            "ID": "AVD-AWS-0107",
            "Layer": {},
            "Message": "No issues found",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0107",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/security-group-rules-reference.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0107"
            ],
            "Resolution": "Set a more restrictive cidr range",
            "Severity": "CRITICAL",
            "Status": "PASS",
            "Title": "An ingress security group rule allows traffic from /0.",
            "Type": "Terraform Security Check"
          }
        ],
        "Target": "terraform/aws/db-app.tf",
        "Type": "terraform"
      },
      {
        "Class": "config",
        "Misconfigurations": [
          {
            "AVDID": "AVD-AWS-0026",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_ebs_volume\" \"web_host_storage\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 34,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # unencrypted volume",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 35,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  availability_zone = \"${var.region}a\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 36,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  #encrypted         = false  # Setting this causes the volume to be recreated on apply ",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 37,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  size = 1",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 38,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 39,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name = \"${local.resource_prefix.value}-ebs\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 40,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    }, {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 41,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"d3439f0f2af62f6fa3521e14d6c27819ef8f12e1\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 42,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 43,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 51,
              "Provider": "AWS",
              "Resource": "aws_ebs_volume.web_host_storage",
              "Service": "ec2",
              "StartLine": 34
            },
            "Description": "By enabling encryption on EBS volumes you protect the volume, the disk I/O and any derived snapshots from compromise if intercepted.",
            "ID": "AVD-AWS-0026",
            "Layer": {},
            "Message": "EBS volume is not encrypted.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0026",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0026"
            ],
            "Resolution": "Enable encryption of EBS volumes",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "EBS volumes must be encrypted",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0027",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_ebs_volume\" \"web_host_storage\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 34,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # unencrypted volume",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 35,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  availability_zone = \"${var.region}a\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 36,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  #encrypted         = false  # Setting this causes the volume to be recreated on apply ",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 37,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  size = 1",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 38,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 39,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name = \"${local.resource_prefix.value}-ebs\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 40,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    }, {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 41,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"d3439f0f2af62f6fa3521e14d6c27819ef8f12e1\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 42,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 43,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 51,
              "Provider": "AWS",
              "Resource": "aws_ebs_volume.web_host_storage",
              "Service": "ec2",
              "StartLine": 34
            },
            "Description": "Encryption using AWS keys provides protection for your EBS volume. To increase control of the encryption and manage factors like rotation use customer managed keys.",
            "ID": "AVD-AWS-0027",
            "Layer": {},
            "Message": "EBS volume does not use a customer-managed KMS key.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0027",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0027"
            ],
            "Resolution": "Enable encryption using customer managed keys",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "EBS volume encryption should use Customer Managed Keys",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0028",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_instance\" \"web_host\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # ec2 have plain text secrets in user data",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  ami           = \"${var.ami}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  instance_type = \"t2.nano\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  vpc_security_group_ids = [",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  \"${aws_security_group.web-node.id}\"]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  subnet_id = \"${aws_subnet.web_subnet.id}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  user_data = \u003c\u003cEOF",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 32,
              "Provider": "AWS",
              "Resource": "aws_instance.web_host",
              "Service": "ec2",
              "StartLine": 1
            },
            "Description": "\nIMDS v2 (Instance Metadata Service) introduced session authentication tokens which improve security when talking to IMDS.\nBy default \u003ccode\u003eaws_instance\u003c/code\u003e resource sets IMDS session auth tokens to be optional. \nTo fully protect IMDS you need to enable session tokens by using \u003ccode\u003emetadata_options\u003c/code\u003e block and its \u003ccode\u003ehttp_tokens\u003c/code\u003e variable set to \u003ccode\u003erequired\u003c/code\u003e.\n",
            "ID": "AVD-AWS-0028",
            "Layer": {},
            "Message": "Instance does not require IMDS access to require a token",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0028",
            "Query": "data..",
            "References": [
              "https://aws.amazon.com/blogs/security/defense-in-depth-open-firewalls-reverse-proxies-ssrf-vulnerabilities-ec2-instance-metadata-service",
              "https://avd.aquasec.com/misconfig/avd-aws-0028"
            ],
            "Resolution": "Enable HTTP token requirement for IMDS",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "aws_instance should activate session tokens for Instance Metadata Service.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0029",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_instance\" \"web_host\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": true
                  },
                  {
                    "Annotation": "\"#! /bin/bash\\nsudo apt-get update\\nsudo apt-get install -y apache2\\nsudo systemctl start apache2\\nsudo systemctl enable apache2\\nexport AWS_ACCESS_KEY_ID=AKIAIOSFODNN7EXAMAAA\\nexport AWS_SECRET_ACCESS_KEY=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\\nexport AWS_DEFAULT_REGION=us-west-2\\necho \\\"\u003ch1\u003eDeployed via Terraform\u003c/h1\u003e\\\" | sudo tee /var/www/html/index.html\\n\"",
                    "Content": "  user_data = \u003c\u003cEOF",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "#! /bin/bash",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "sudo apt-get update",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 11,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "sudo apt-get install -y apache2",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 12,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "sudo systemctl start apache2",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 13,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "sudo systemctl enable apache2",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 14,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "export AWS_ACCESS_KEY_ID=AKIAIOSFODNN7EXAMAAA",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 15,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 16,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 19,
              "Provider": "AWS",
              "Resource": "aws_instance.web_host",
              "Service": "ec2",
              "StartLine": 9
            },
            "Description": "EC2 instance data is used to pass start up information into the EC2 instance. This userdata must not contain access key credentials. Instead use an IAM Instance Profile assigned to the instance to grant access to other AWS Services.",
            "ID": "AVD-AWS-0029",
            "Layer": {},
            "Message": "Sensitive data found in instance user data: Check for AWS Access Key Id",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0029",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instancedata-add-user-data.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0029"
            ],
            "Resolution": "Remove sensitive data from the EC2 instance user-data",
            "Severity": "CRITICAL",
            "Status": "FAIL",
            "Title": "User data for EC2 instances must not contain sensitive AWS keys",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0086",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"flowbucket\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 271,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket        = \"${local.resource_prefix.value}-flowlogs\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 272,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 273,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 274,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 275,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name        = \"${local.resource_prefix.value}-flowlogs\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 276,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Environment = local.resource_prefix.value",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 277,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    }, {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 278,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"d68d2897add9bc2203a5ed0632a5cdd8ff8cefb0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 279,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 280,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 288,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.flowbucket",
              "Service": "s3",
              "StartLine": 271
            },
            "Description": "\nS3 buckets should block public ACLs on buckets and any objects they contain. By blocking, PUTs with fail if the object has any public ACL a.\n",
            "ID": "AVD-AWS-0086",
            "Layer": {},
            "Message": "No public access block so not blocking public acls",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0086",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-control-block-public-access.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0086"
            ],
            "Resolution": "Enable blocking any PUT calls with a public ACL specified",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "S3 Access block should block public ACL",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0087",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"flowbucket\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 271,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket        = \"${local.resource_prefix.value}-flowlogs\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 272,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 273,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 274,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 275,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name        = \"${local.resource_prefix.value}-flowlogs\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 276,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Environment = local.resource_prefix.value",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 277,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    }, {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 278,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"d68d2897add9bc2203a5ed0632a5cdd8ff8cefb0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 279,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 280,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 288,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.flowbucket",
              "Service": "s3",
              "StartLine": 271
            },
            "Description": "\nS3 bucket policy should have block public policy to prevent users from putting a policy that enable public access.\n",
            "ID": "AVD-AWS-0087",
            "Layer": {},
            "Message": "No public access block so not blocking public policies",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0087",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/dev-retired/access-control-block-public-access.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0087"
            ],
            "Resolution": "Prevent policies that allow public access being PUT",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "S3 Access block should block public policy",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0088",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"flowbucket\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 271,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket        = \"${local.resource_prefix.value}-flowlogs\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 272,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 273,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 274,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 275,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name        = \"${local.resource_prefix.value}-flowlogs\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 276,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Environment = local.resource_prefix.value",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 277,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    }, {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 278,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"d68d2897add9bc2203a5ed0632a5cdd8ff8cefb0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 279,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 280,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 288,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.flowbucket",
              "Service": "s3",
              "StartLine": 271
            },
            "Description": "S3 Buckets should be encrypted to protect the data that is stored within them if access is compromised.",
            "ID": "AVD-AWS-0088",
            "Layer": {},
            "Message": "Bucket does not have encryption enabled",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0088",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucket-encryption.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0088"
            ],
            "Resolution": "Configure bucket encryption",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Unencrypted S3 bucket.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0089",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"flowbucket\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 271,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket        = \"${local.resource_prefix.value}-flowlogs\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 272,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 273,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 274,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 275,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name        = \"${local.resource_prefix.value}-flowlogs\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 276,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Environment = local.resource_prefix.value",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 277,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    }, {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 278,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"d68d2897add9bc2203a5ed0632a5cdd8ff8cefb0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 279,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 280,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 288,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.flowbucket",
              "Service": "s3",
              "StartLine": 271
            },
            "Description": "Buckets should have logging enabled so that access can be audited.",
            "ID": "AVD-AWS-0089",
            "Layer": {},
            "Message": "Bucket does not have logging enabled",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0089",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerLogs.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0089"
            ],
            "Resolution": "Add a logging block to the resource to enable access logging",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "S3 Bucket does not have logging enabled.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0090",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"flowbucket\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 271,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket        = \"${local.resource_prefix.value}-flowlogs\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 272,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 273,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 274,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 275,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name        = \"${local.resource_prefix.value}-flowlogs\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 276,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Environment = local.resource_prefix.value",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 277,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    }, {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 278,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"d68d2897add9bc2203a5ed0632a5cdd8ff8cefb0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 279,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 280,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 288,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.flowbucket",
              "Service": "s3",
              "StartLine": 271
            },
            "Description": "\nVersioning in Amazon S3 is a means of keeping multiple variants of an object in the same bucket. \nYou can use the S3 Versioning feature to preserve, retrieve, and restore every version of every object stored in your buckets. \nWith versioning you can recover more easily from both unintended user actions and application failures.\n",
            "ID": "AVD-AWS-0090",
            "Layer": {},
            "Message": "Bucket does not have versioning enabled",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0090",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/Versioning.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0090"
            ],
            "Resolution": "Enable versioning to protect against accidental/malicious removal or modification",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "S3 Data should be versioned",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0091",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"flowbucket\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 271,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket        = \"${local.resource_prefix.value}-flowlogs\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 272,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 273,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 274,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 275,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name        = \"${local.resource_prefix.value}-flowlogs\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 276,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Environment = local.resource_prefix.value",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 277,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    }, {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 278,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"d68d2897add9bc2203a5ed0632a5cdd8ff8cefb0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 279,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 280,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 288,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.flowbucket",
              "Service": "s3",
              "StartLine": 271
            },
            "Description": "\nS3 buckets should ignore public ACLs on buckets and any objects they contain. By ignoring rather than blocking, PUT calls with public ACLs will still be applied but the ACL will be ignored.\n",
            "ID": "AVD-AWS-0091",
            "Layer": {},
            "Message": "No public access block so not ignoring public acls",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0091",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-control-block-public-access.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0091"
            ],
            "Resolution": "Enable ignoring the application of public ACLs in PUT calls",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "S3 Access Block should Ignore Public Acl",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0093",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"flowbucket\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 271,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket        = \"${local.resource_prefix.value}-flowlogs\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 272,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 273,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 274,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 275,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name        = \"${local.resource_prefix.value}-flowlogs\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 276,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Environment = local.resource_prefix.value",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 277,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    }, {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 278,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"d68d2897add9bc2203a5ed0632a5cdd8ff8cefb0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 279,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 280,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 288,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.flowbucket",
              "Service": "s3",
              "StartLine": 271
            },
            "Description": "S3 buckets should restrict public policies for the bucket. By enabling, the restrict_public_buckets, only the bucket owner and AWS Services can access if it has a public policy.",
            "ID": "AVD-AWS-0093",
            "Layer": {},
            "Message": "No public access block so not restricting public buckets",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0093",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/dev-retired/access-control-block-public-access.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0093"
            ],
            "Resolution": "Limit the access to public buckets to only the owner or AWS Services (eg; CloudFront)",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "S3 Access block should restrict public bucket to limit access",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0094",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"flowbucket\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 271,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket        = \"${local.resource_prefix.value}-flowlogs\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 272,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 273,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 274,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 275,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name        = \"${local.resource_prefix.value}-flowlogs\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 276,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Environment = local.resource_prefix.value",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 277,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    }, {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 278,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"d68d2897add9bc2203a5ed0632a5cdd8ff8cefb0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 279,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 280,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 288,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.flowbucket",
              "Service": "s3",
              "StartLine": 271
            },
            "Description": "The \"block public access\" settings in S3 override individual policies that apply to a given bucket, meaning that all public access can be controlled in one central types for that bucket. It is therefore good practice to define these settings for each bucket in order to clearly define the public access that can be allowed for it.",
            "ID": "AVD-AWS-0094",
            "Layer": {},
            "Message": "Bucket does not have a corresponding public access block.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0094",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-control-block-public-access.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0094"
            ],
            "Resolution": "Define a aws_s3_bucket_public_access_block for the given bucket to control public access policies",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "S3 buckets should each define an aws_s3_bucket_public_access_block",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0104",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_security_group\" \"web-node\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 77,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 78,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "    cidr_blocks = [",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 101,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"0.0.0.0/0\"]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 102,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 114,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 115,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 102,
              "Provider": "AWS",
              "Resource": "aws_security_group.web-node",
              "Service": "ec2",
              "StartLine": 101
            },
            "Description": "Opening up ports to connect out to the public internet is generally to be avoided. You should restrict access to IP addresses or ranges that are explicitly required where possible.",
            "ID": "AVD-AWS-0104",
            "Layer": {},
            "Message": "Security group rule allows egress to multiple public internet addresses.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0104",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/whitepapers/latest/building-scalable-secure-multi-vpc-network-infrastructure/centralized-egress-to-internet.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0104"
            ],
            "Resolution": "Set a more restrictive cidr range",
            "Severity": "CRITICAL",
            "Status": "FAIL",
            "Title": "An egress security group rule allows traffic to /0.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0107",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_security_group\" \"web-node\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 77,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 78,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "    cidr_blocks = [",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 87,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"0.0.0.0/0\"]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 88,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 114,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 115,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 88,
              "Provider": "AWS",
              "Resource": "aws_security_group.web-node",
              "Service": "ec2",
              "StartLine": 87
            },
            "Description": "Opening up ports to the public internet is generally to be avoided. You should restrict access to IP addresses or ranges that explicitly require it where possible.",
            "ID": "AVD-AWS-0107",
            "Layer": {},
            "Message": "Security group rule allows ingress from public internet.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0107",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/security-group-rules-reference.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0107"
            ],
            "Resolution": "Set a more restrictive cidr range",
            "Severity": "CRITICAL",
            "Status": "FAIL",
            "Title": "An ingress security group rule allows traffic from /0.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0107",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_security_group\" \"web-node\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 77,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 78,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "    cidr_blocks = [",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 94,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"0.0.0.0/0\"]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 95,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 114,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 115,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 95,
              "Provider": "AWS",
              "Resource": "aws_security_group.web-node",
              "Service": "ec2",
              "StartLine": 94
            },
            "Description": "Opening up ports to the public internet is generally to be avoided. You should restrict access to IP addresses or ranges that explicitly require it where possible.",
            "ID": "AVD-AWS-0107",
            "Layer": {},
            "Message": "Security group rule allows ingress from public internet.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0107",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/security-group-rules-reference.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0107"
            ],
            "Resolution": "Set a more restrictive cidr range",
            "Severity": "CRITICAL",
            "Status": "FAIL",
            "Title": "An ingress security group rule allows traffic from /0.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0124",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_security_group\" \"web-node\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 77,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 78,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "  ingress {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 83,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    from_port = 80",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 84,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    to_port   = 80",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 85,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    protocol  = \"tcp\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 86,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    cidr_blocks = [",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 87,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"0.0.0.0/0\"]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 88,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 89,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 114,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 89,
              "Provider": "AWS",
              "Resource": "aws_security_group.web-node",
              "Service": "ec2",
              "StartLine": 83
            },
            "Description": "Security group rules should include a description for auditing purposes.\n\nSimplifies auditing, debugging, and managing security groups.",
            "ID": "AVD-AWS-0124",
            "Layer": {},
            "Message": "Security group rule does not have a description.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0124",
            "Query": "data..",
            "References": [
              "https://www.cloudconformity.com/knowledge-base/aws/EC2/security-group-rules-description.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0124"
            ],
            "Resolution": "Add descriptions for all security groups rules",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Missing description for security group rule.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0124",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_security_group\" \"web-node\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 77,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 78,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "  ingress {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 90,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    from_port = 22",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 91,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    to_port   = 22",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 92,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    protocol  = \"tcp\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 93,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    cidr_blocks = [",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 94,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"0.0.0.0/0\"]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 95,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 96,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 114,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 96,
              "Provider": "AWS",
              "Resource": "aws_security_group.web-node",
              "Service": "ec2",
              "StartLine": 90
            },
            "Description": "Security group rules should include a description for auditing purposes.\n\nSimplifies auditing, debugging, and managing security groups.",
            "ID": "AVD-AWS-0124",
            "Layer": {},
            "Message": "Security group rule does not have a description.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0124",
            "Query": "data..",
            "References": [
              "https://www.cloudconformity.com/knowledge-base/aws/EC2/security-group-rules-description.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0124"
            ],
            "Resolution": "Add descriptions for all security groups rules",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Missing description for security group rule.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0124",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_security_group\" \"web-node\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 77,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 78,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "  egress {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 97,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    from_port = 0",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 98,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    to_port   = 0",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 99,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    protocol  = \"-1\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 100,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    cidr_blocks = [",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 101,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"0.0.0.0/0\"]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 102,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 103,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 114,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 103,
              "Provider": "AWS",
              "Resource": "aws_security_group.web-node",
              "Service": "ec2",
              "StartLine": 97
            },
            "Description": "Security group rules should include a description for auditing purposes.\n\nSimplifies auditing, debugging, and managing security groups.",
            "ID": "AVD-AWS-0124",
            "Layer": {},
            "Message": "Security group rule does not have a description.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0124",
            "Query": "data..",
            "References": [
              "https://www.cloudconformity.com/knowledge-base/aws/EC2/security-group-rules-description.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0124"
            ],
            "Resolution": "Add descriptions for all security groups rules",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Missing description for security group rule.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0131",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_instance\" \"web_host\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # ec2 have plain text secrets in user data",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  ami           = \"${var.ami}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  instance_type = \"t2.nano\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  vpc_security_group_ids = [",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  \"${aws_security_group.web-node.id}\"]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  subnet_id = \"${aws_subnet.web_subnet.id}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  user_data = \u003c\u003cEOF",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 32,
              "Provider": "AWS",
              "Resource": "aws_instance.web_host",
              "Service": "ec2",
              "StartLine": 1
            },
            "Description": "Block devices should be encrypted to ensure sensitive data is held securely at rest.",
            "ID": "AVD-AWS-0131",
            "Layer": {},
            "Message": "Root block device is not encrypted.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0131",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0131"
            ],
            "Resolution": "Turn on encryption for all block devices",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Instance with unencrypted block device.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0132",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"flowbucket\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 271,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket        = \"${local.resource_prefix.value}-flowlogs\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 272,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 273,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 274,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 275,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name        = \"${local.resource_prefix.value}-flowlogs\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 276,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Environment = local.resource_prefix.value",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 277,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    }, {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 278,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"d68d2897add9bc2203a5ed0632a5cdd8ff8cefb0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 279,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 280,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 288,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.flowbucket",
              "Service": "s3",
              "StartLine": 271
            },
            "Description": "Encryption using AWS keys provides protection for your S3 buckets. To increase control of the encryption and manage factors like rotation use customer managed keys.",
            "ID": "AVD-AWS-0132",
            "Layer": {},
            "Message": "Bucket does not encrypt data with a customer managed key.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0132",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucket-encryption.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0132"
            ],
            "Resolution": "Enable encryption using customer managed keys",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "S3 encryption should use Customer Managed Keys",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0164",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_subnet\" \"web_subnet\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 135,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 136,
                    "Truncated": true
                  },
                  {
                    "Annotation": "true",
                    "Content": "  map_public_ip_on_launch = true",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 139,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 152,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 153,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 139,
              "Provider": "AWS",
              "Resource": "aws_subnet.web_subnet",
              "Service": "ec2",
              "StartLine": 139
            },
            "Description": "You should limit the provision of public IP addresses for resources. Resources should not be exposed on the public internet, but should have access limited to consumers required for the function of your application.",
            "ID": "AVD-AWS-0164",
            "Layer": {},
            "Message": "Subnet associates public IP address.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0164",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-instance-addressing.html#concepts-public-addresses",
              "https://avd.aquasec.com/misconfig/avd-aws-0164"
            ],
            "Resolution": "Set the instance to not be publicly accessible",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Instances in a subnet should not receive a public IP address by default.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0164",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_subnet\" \"web_subnet2\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 155,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 156,
                    "Truncated": true
                  },
                  {
                    "Annotation": "true",
                    "Content": "  map_public_ip_on_launch = true",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 159,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 172,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 173,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 159,
              "Provider": "AWS",
              "Resource": "aws_subnet.web_subnet2",
              "Service": "ec2",
              "StartLine": 159
            },
            "Description": "You should limit the provision of public IP addresses for resources. Resources should not be exposed on the public internet, but should have access limited to consumers required for the function of your application.",
            "ID": "AVD-AWS-0164",
            "Layer": {},
            "Message": "Subnet associates public IP address.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0164",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-instance-addressing.html#concepts-public-addresses",
              "https://avd.aquasec.com/misconfig/avd-aws-0164"
            ],
            "Resolution": "Set the instance to not be publicly accessible",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Instances in a subnet should not receive a public IP address by default.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0178",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_vpc\" \"web_vpc\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 117,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  cidr_block           = \"172.16.0.0/16\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 118,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  enable_dns_hostnames = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 119,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  enable_dns_support   = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 120,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 121,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name = \"${local.resource_prefix.value}-vpc\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 122,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    }, {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 123,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"d68d2897add9bc2203a5ed0632a5cdd8ff8cefb0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 124,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_file             = \"terraform/aws/ec2.tf\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 125,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 126,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 133,
              "Provider": "AWS",
              "Resource": "aws_vpc.web_vpc",
              "Service": "ec2",
              "StartLine": 117
            },
            "Description": "VPC Flow Logs provide visibility into network traffic that traverses the VPC and can be used to detect anomalous traffic or insight during security workflows.",
            "ID": "AVD-AWS-0178",
            "Layer": {},
            "Message": "VPC Flow Logs is not enabled for VPC",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0178",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0178"
            ],
            "Resolution": "Enable flow logs for VPC",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "VPC Flow Logs is a feature that enables you to capture information about the IP traffic going to and from network interfaces in your VPC. After you've created a flow log, you can view and retrieve its data in Amazon CloudWatch Logs. It is recommended that VPC Flow Logs be enabled for packet \"Rejects\" for VPCs.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0092",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"flowbucket\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 271,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket        = \"${local.resource_prefix.value}-flowlogs\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 272,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 273,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 274,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 275,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name        = \"${local.resource_prefix.value}-flowlogs\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 276,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Environment = local.resource_prefix.value",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 277,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    }, {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 278,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"d68d2897add9bc2203a5ed0632a5cdd8ff8cefb0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 279,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 280,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 288,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.flowbucket",
              "Service": "s3",
              "StartLine": 271
            },
            "Description": "\nBuckets should not have ACLs that allow public access\n",
            "ID": "AVD-AWS-0092",
            "Layer": {},
            "Message": "No issues found",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0092",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0092"
            ],
            "Resolution": "Don't use canned ACLs or switch to private acl",
            "Severity": "HIGH",
            "Status": "PASS",
            "Title": "S3 Buckets not publicly accessible through ACL.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0099",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_security_group\" \"web-node\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 77,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # security group is open to the world in SSH port",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 78,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name        = \"${local.resource_prefix.value}-sg\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 79,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  description = \"${local.resource_prefix.value} Security Group\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 80,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  vpc_id      = aws_vpc.web_vpc.id",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 81,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 82,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  ingress {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 83,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    from_port = 80",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 84,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    to_port   = 80",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 85,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 86,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 115,
              "Provider": "AWS",
              "Resource": "aws_security_group.web-node",
              "Service": "ec2",
              "StartLine": 77
            },
            "Description": "Security groups should include a description for auditing purposes.\n\nSimplifies auditing, debugging, and managing security groups.",
            "ID": "AVD-AWS-0099",
            "Layer": {},
            "Message": "No issues found",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0099",
            "Query": "data..",
            "References": [
              "https://www.cloudconformity.com/knowledge-base/aws/EC2/security-group-rules-description.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0099"
            ],
            "Resolution": "Add descriptions for all security groups",
            "Severity": "LOW",
            "Status": "PASS",
            "Title": "Missing description for security group.",
            "Type": "Terraform Security Check"
          }
        ],
        "Target": "terraform/aws/ec2.tf",
        "Type": "terraform"
      },
      {
        "Class": "config",
        "Misconfigurations": [
          {
            "AVDID": "AVD-AWS-0030",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource aws_ecr_repository \"repository\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                 = \"${local.resource_prefix.value}-repository\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  image_tag_mutability = \"MUTABLE\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name = \"${local.resource_prefix.value}-repository\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    }, {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"d68d2897add9bc2203a5ed0632a5cdd8ff8cefb0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_file             = \"terraform/aws/ecr.tf\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 17,
              "Provider": "AWS",
              "Resource": "aws_ecr_repository.repository",
              "Service": "ecr",
              "StartLine": 1
            },
            "Description": "Repository image scans should be enabled to ensure vulnerable software can be discovered and remediated as soon as possible.",
            "ID": "AVD-AWS-0030",
            "Layer": {},
            "Message": "Image scanning is not enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0030",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonECR/latest/userguide/image-scanning.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0030"
            ],
            "Resolution": "Enable ECR image scanning",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "ECR repository has image scans disabled.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0031",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource aws_ecr_repository \"repository\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "  image_tag_mutability = \"MUTABLE\"",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 16,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 17,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 3,
              "Provider": "AWS",
              "Resource": "aws_ecr_repository.repository",
              "Service": "ecr",
              "StartLine": 3
            },
            "Description": "ECR images should be set to IMMUTABLE to prevent code injection through image mutation.\n\nThis can be done by setting \u003ccode\u003eimage_tab_mutability\u003c/code\u003e to \u003ccode\u003eIMMUTABLE\u003c/code\u003e",
            "ID": "AVD-AWS-0031",
            "Layer": {},
            "Message": "Repository tags are mutable.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0031",
            "Query": "data..",
            "References": [
              "https://sysdig.com/blog/toctou-tag-mutability/",
              "https://avd.aquasec.com/misconfig/avd-aws-0031"
            ],
            "Resolution": "Only use immutable images in ECR",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "ECR images tags shouldn't be mutable.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0033",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource aws_ecr_repository \"repository\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                 = \"${local.resource_prefix.value}-repository\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  image_tag_mutability = \"MUTABLE\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name = \"${local.resource_prefix.value}-repository\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    }, {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"d68d2897add9bc2203a5ed0632a5cdd8ff8cefb0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_file             = \"terraform/aws/ecr.tf\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 17,
              "Provider": "AWS",
              "Resource": "aws_ecr_repository.repository",
              "Service": "ecr",
              "StartLine": 1
            },
            "Description": "Images in the ECR repository are encrypted by default using AWS managed encryption keys. To increase control of the encryption and control the management of factors like key rotation, use a Customer Managed Key.",
            "ID": "AVD-AWS-0033",
            "Layer": {},
            "Message": "Repository is not encrypted using KMS.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0033",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonECR/latest/userguide/encryption-at-rest.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0033"
            ],
            "Resolution": "Use customer managed keys",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "ECR Repository should use customer managed keys to allow more control",
            "Type": "Terraform Security Check"
          }
        ],
        "Target": "terraform/aws/ecr.tf",
        "Type": "terraform"
      },
      {
        "Class": "config",
        "Misconfigurations": [
          {
            "AVDID": "AVD-AWS-0038",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource aws_eks_cluster \"eks_cluster\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 117,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name     = local.eks_name.value",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 118,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  role_arn = \"${aws_iam_role.iam_for_eks.arn}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 119,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 120,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  vpc_config {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 121,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    endpoint_private_access = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 122,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    subnet_ids              = [\"${aws_subnet.eks_subnet1.id}\", \"${aws_subnet.eks_subnet2.id}\"]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 123,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 124,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 125,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 126,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 140,
              "Provider": "AWS",
              "Resource": "aws_eks_cluster.eks_cluster",
              "Service": "eks",
              "StartLine": 117
            },
            "Description": "By default cluster control plane logging is not turned on. Logging is available for audit, api, authenticator, controllerManager and scheduler. All logging should be turned on for cluster control plane.",
            "ID": "AVD-AWS-0038",
            "Layer": {},
            "Message": "Control plane API logging is not enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0038",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0038"
            ],
            "Resolution": "Enable logging for the EKS control plane",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "EKS Clusters should have cluster control plane logging turned on",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0038",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource aws_eks_cluster \"eks_cluster\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 117,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name     = local.eks_name.value",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 118,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  role_arn = \"${aws_iam_role.iam_for_eks.arn}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 119,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 120,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  vpc_config {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 121,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    endpoint_private_access = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 122,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    subnet_ids              = [\"${aws_subnet.eks_subnet1.id}\", \"${aws_subnet.eks_subnet2.id}\"]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 123,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 124,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 125,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 126,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 140,
              "Provider": "AWS",
              "Resource": "aws_eks_cluster.eks_cluster",
              "Service": "eks",
              "StartLine": 117
            },
            "Description": "By default cluster control plane logging is not turned on. Logging is available for audit, api, authenticator, controllerManager and scheduler. All logging should be turned on for cluster control plane.",
            "ID": "AVD-AWS-0038",
            "Layer": {},
            "Message": "Control plane audit logging is not enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0038",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0038"
            ],
            "Resolution": "Enable logging for the EKS control plane",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "EKS Clusters should have cluster control plane logging turned on",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0038",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource aws_eks_cluster \"eks_cluster\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 117,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name     = local.eks_name.value",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 118,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  role_arn = \"${aws_iam_role.iam_for_eks.arn}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 119,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 120,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  vpc_config {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 121,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    endpoint_private_access = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 122,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    subnet_ids              = [\"${aws_subnet.eks_subnet1.id}\", \"${aws_subnet.eks_subnet2.id}\"]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 123,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 124,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 125,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 126,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 140,
              "Provider": "AWS",
              "Resource": "aws_eks_cluster.eks_cluster",
              "Service": "eks",
              "StartLine": 117
            },
            "Description": "By default cluster control plane logging is not turned on. Logging is available for audit, api, authenticator, controllerManager and scheduler. All logging should be turned on for cluster control plane.",
            "ID": "AVD-AWS-0038",
            "Layer": {},
            "Message": "Control plane authenticator logging is not enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0038",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0038"
            ],
            "Resolution": "Enable logging for the EKS control plane",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "EKS Clusters should have cluster control plane logging turned on",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0038",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource aws_eks_cluster \"eks_cluster\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 117,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name     = local.eks_name.value",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 118,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  role_arn = \"${aws_iam_role.iam_for_eks.arn}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 119,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 120,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  vpc_config {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 121,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    endpoint_private_access = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 122,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    subnet_ids              = [\"${aws_subnet.eks_subnet1.id}\", \"${aws_subnet.eks_subnet2.id}\"]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 123,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 124,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 125,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 126,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 140,
              "Provider": "AWS",
              "Resource": "aws_eks_cluster.eks_cluster",
              "Service": "eks",
              "StartLine": 117
            },
            "Description": "By default cluster control plane logging is not turned on. Logging is available for audit, api, authenticator, controllerManager and scheduler. All logging should be turned on for cluster control plane.",
            "ID": "AVD-AWS-0038",
            "Layer": {},
            "Message": "Control plane controller manager logging is not enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0038",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0038"
            ],
            "Resolution": "Enable logging for the EKS control plane",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "EKS Clusters should have cluster control plane logging turned on",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0038",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource aws_eks_cluster \"eks_cluster\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 117,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name     = local.eks_name.value",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 118,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  role_arn = \"${aws_iam_role.iam_for_eks.arn}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 119,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 120,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  vpc_config {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 121,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    endpoint_private_access = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 122,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    subnet_ids              = [\"${aws_subnet.eks_subnet1.id}\", \"${aws_subnet.eks_subnet2.id}\"]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 123,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 124,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 125,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 126,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 140,
              "Provider": "AWS",
              "Resource": "aws_eks_cluster.eks_cluster",
              "Service": "eks",
              "StartLine": 117
            },
            "Description": "By default cluster control plane logging is not turned on. Logging is available for audit, api, authenticator, controllerManager and scheduler. All logging should be turned on for cluster control plane.",
            "ID": "AVD-AWS-0038",
            "Layer": {},
            "Message": "Control plane scheduler logging is not enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0038",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0038"
            ],
            "Resolution": "Enable logging for the EKS control plane",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "EKS Clusters should have cluster control plane logging turned on",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0039",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource aws_eks_cluster \"eks_cluster\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 117,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name     = local.eks_name.value",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 118,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  role_arn = \"${aws_iam_role.iam_for_eks.arn}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 119,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 120,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  vpc_config {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 121,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    endpoint_private_access = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 122,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    subnet_ids              = [\"${aws_subnet.eks_subnet1.id}\", \"${aws_subnet.eks_subnet2.id}\"]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 123,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 124,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 125,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 126,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 140,
              "Provider": "AWS",
              "Resource": "aws_eks_cluster.eks_cluster",
              "Service": "eks",
              "StartLine": 117
            },
            "Description": "EKS cluster resources should have the encryption_config block set with protection of the secrets resource.",
            "ID": "AVD-AWS-0039",
            "Layer": {},
            "Message": "Cluster does not have secret encryption enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0039",
            "Query": "data..",
            "References": [
              "https://aws.amazon.com/about-aws/whats-new/2020/03/amazon-eks-adds-envelope-encryption-for-secrets-with-aws-kms/",
              "https://avd.aquasec.com/misconfig/avd-aws-0039"
            ],
            "Resolution": "Enable encryption of EKS secrets",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "EKS should have the encryption of secrets enabled",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0040",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource aws_eks_cluster \"eks_cluster\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 117,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 118,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "  vpc_config {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 121,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    endpoint_private_access = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 122,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    subnet_ids              = [\"${aws_subnet.eks_subnet1.id}\", \"${aws_subnet.eks_subnet2.id}\"]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 123,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 124,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 139,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 140,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 124,
              "Provider": "AWS",
              "Resource": "aws_eks_cluster.eks_cluster",
              "Service": "eks",
              "StartLine": 121
            },
            "Description": "EKS clusters are available publicly by default, this should be explicitly disabled in the vpc_config of the EKS cluster resource.",
            "ID": "AVD-AWS-0040",
            "Layer": {},
            "Message": "Public cluster access is enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0040",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0040"
            ],
            "Resolution": "Don't enable public access to EKS Clusters",
            "Severity": "CRITICAL",
            "Status": "FAIL",
            "Title": "EKS Clusters should have the public access disabled",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0041",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource aws_eks_cluster \"eks_cluster\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 117,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 118,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "  vpc_config {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 121,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    endpoint_private_access = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 122,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    subnet_ids              = [\"${aws_subnet.eks_subnet1.id}\", \"${aws_subnet.eks_subnet2.id}\"]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 123,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 124,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 139,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 140,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 124,
              "Provider": "AWS",
              "Resource": "aws_eks_cluster.eks_cluster",
              "Service": "eks",
              "StartLine": 121
            },
            "Description": "EKS Clusters have public access cidrs set to 0.0.0.0/0 by default which is wide open to the internet. This should be explicitly set to a more specific private CIDR range",
            "ID": "AVD-AWS-0041",
            "Layer": {},
            "Message": "Cluster allows access from a public CIDR: 0.0.0.0/0.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0041",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/eks/latest/userguide/create-public-private-vpc.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0041"
            ],
            "Resolution": "Don't enable public access to EKS Clusters",
            "Severity": "CRITICAL",
            "Status": "FAIL",
            "Title": "EKS cluster should not have open CIDR range for public access",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0164",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource aws_subnet \"eks_subnet1\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 61,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 62,
                    "Truncated": true
                  },
                  {
                    "Annotation": "true",
                    "Content": "  map_public_ip_on_launch = true",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 65,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 86,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 87,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 65,
              "Provider": "AWS",
              "Resource": "aws_subnet.eks_subnet1",
              "Service": "ec2",
              "StartLine": 65
            },
            "Description": "You should limit the provision of public IP addresses for resources. Resources should not be exposed on the public internet, but should have access limited to consumers required for the function of your application.",
            "ID": "AVD-AWS-0164",
            "Layer": {},
            "Message": "Subnet associates public IP address.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0164",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-instance-addressing.html#concepts-public-addresses",
              "https://avd.aquasec.com/misconfig/avd-aws-0164"
            ],
            "Resolution": "Set the instance to not be publicly accessible",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Instances in a subnet should not receive a public IP address by default.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0164",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource aws_subnet \"eks_subnet2\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 89,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 90,
                    "Truncated": true
                  },
                  {
                    "Annotation": "true",
                    "Content": "  map_public_ip_on_launch = true",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 93,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 114,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 115,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 93,
              "Provider": "AWS",
              "Resource": "aws_subnet.eks_subnet2",
              "Service": "ec2",
              "StartLine": 93
            },
            "Description": "You should limit the provision of public IP addresses for resources. Resources should not be exposed on the public internet, but should have access limited to consumers required for the function of your application.",
            "ID": "AVD-AWS-0164",
            "Layer": {},
            "Message": "Subnet associates public IP address.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0164",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-instance-addressing.html#concepts-public-addresses",
              "https://avd.aquasec.com/misconfig/avd-aws-0164"
            ],
            "Resolution": "Set the instance to not be publicly accessible",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Instances in a subnet should not receive a public IP address by default.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0178",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource aws_vpc \"eks_vpc\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 43,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  cidr_block           = \"10.10.0.0/16\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 44,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  enable_dns_hostnames = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 45,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  enable_dns_support   = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 46,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 47,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name = \"${local.resource_prefix.value}-eks-vpc\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 48,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    }, {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 49,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"d68d2897add9bc2203a5ed0632a5cdd8ff8cefb0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 50,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_file             = \"terraform/aws/eks.tf\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 51,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 52,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 59,
              "Provider": "AWS",
              "Resource": "aws_vpc.eks_vpc",
              "Service": "ec2",
              "StartLine": 43
            },
            "Description": "VPC Flow Logs provide visibility into network traffic that traverses the VPC and can be used to detect anomalous traffic or insight during security workflows.",
            "ID": "AVD-AWS-0178",
            "Layer": {},
            "Message": "VPC Flow Logs is not enabled for VPC",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0178",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0178"
            ],
            "Resolution": "Enable flow logs for VPC",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "VPC Flow Logs is a feature that enables you to capture information about the IP traffic going to and from network interfaces in your VPC. After you've created a flow log, you can view and retrieve its data in Amazon CloudWatch Logs. It is recommended that VPC Flow Logs be enabled for packet \"Rejects\" for VPCs.",
            "Type": "Terraform Security Check"
          }
        ],
        "Target": "terraform/aws/eks.tf",
        "Type": "terraform"
      },
      {
        "Class": "config",
        "Misconfigurations": [
          {
            "AVDID": "AVD-AWS-0053",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_elb\" \"weblb\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name = \"weblb-terraform-elb\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  listener {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    instance_port     = 8000",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    instance_protocol = \"http\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    lb_port           = 80",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    lb_protocol       = \"http\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 10,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 11,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 40,
              "Provider": "AWS",
              "Resource": "aws_elb.weblb",
              "Service": "elb",
              "StartLine": 2
            },
            "Description": "There are many scenarios in which you would want to expose a load balancer to the wider internet, but this check exists as a warning to prevent accidental exposure of internal assets. You should ensure that this resource should be exposed publicly.",
            "ID": "AVD-AWS-0053",
            "Layer": {},
            "Message": "Load balancer is exposed publicly.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0053",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-aws-0053"
            ],
            "Resolution": "Switch to an internal load balancer or add a tfsec ignore",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Load balancer is exposed to the internet.",
            "Type": "Terraform Security Check"
          }
        ],
        "Target": "terraform/aws/elb.tf",
        "Type": "terraform"
      },
      {
        "Class": "config",
        "Misconfigurations": [
          {
            "AVDID": "AVD-AWS-0042",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_elasticsearch_domain\" \"monitoring-framework\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  domain_name           = \"tg-${var.environment}-es\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  elasticsearch_version = \"2.3\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  cluster_config {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    instance_type            = \"t2.small.elasticsearch\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    instance_count           = 1",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    dedicated_master_enabled = false",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    dedicated_master_type    = \"m4.large.elasticsearch\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 27,
              "Provider": "AWS",
              "Resource": "aws_elasticsearch_domain.monitoring-framework",
              "Service": "elastic-search",
              "StartLine": 1
            },
            "Description": "Amazon ES exposes four Elasticsearch logs through Amazon CloudWatch Logs: error logs, search slow logs, index slow logs, and audit logs. \n\nSearch slow logs, index slow logs, and error logs are useful for troubleshooting performance and stability issues. \n\nAudit logs track user activity for compliance purposes. \n\nAll the logs are disabled by default.",
            "ID": "AVD-AWS-0042",
            "Layer": {},
            "Message": "Domain audit logging is not enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0042",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createdomain-configure-slow-logs.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0042"
            ],
            "Resolution": "Enable logging for ElasticSearch domains",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Domain logging should be enabled for Elastic Search domains",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0043",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_elasticsearch_domain\" \"monitoring-framework\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  domain_name           = \"tg-${var.environment}-es\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  elasticsearch_version = \"2.3\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  cluster_config {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    instance_type            = \"t2.small.elasticsearch\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    instance_count           = 1",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    dedicated_master_enabled = false",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    dedicated_master_type    = \"m4.large.elasticsearch\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 27,
              "Provider": "AWS",
              "Resource": "aws_elasticsearch_domain.monitoring-framework",
              "Service": "elastic-search",
              "StartLine": 1
            },
            "Description": "Traffic flowing between Elasticsearch nodes should be encrypted to ensure sensitive data is kept private.",
            "ID": "AVD-AWS-0043",
            "Layer": {},
            "Message": "Domain does not have in-transit encryption enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0043",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/ntn.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0043"
            ],
            "Resolution": "Enable encrypted node to node communication",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Elasticsearch domain uses plaintext traffic for node to node communication.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0046",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_elasticsearch_domain\" \"monitoring-framework\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  domain_name           = \"tg-${var.environment}-es\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  elasticsearch_version = \"2.3\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  cluster_config {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    instance_type            = \"t2.small.elasticsearch\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    instance_count           = 1",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    dedicated_master_enabled = false",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    dedicated_master_type    = \"m4.large.elasticsearch\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 27,
              "Provider": "AWS",
              "Resource": "aws_elasticsearch_domain.monitoring-framework",
              "Service": "elastic-search",
              "StartLine": 1
            },
            "Description": "Plain HTTP is unencrypted and human-readable. This means that if a malicious actor was to eavesdrop on your connection, they would be able to see all of your data flowing back and forth.\n\nYou should use HTTPS, which is HTTP over an encrypted (TLS) connection, meaning eavesdroppers cannot read your traffic.",
            "ID": "AVD-AWS-0046",
            "Layer": {},
            "Message": "Domain does not enforce HTTPS.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0046",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-data-protection.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0046"
            ],
            "Resolution": "Enforce the use of HTTPS for ElasticSearch",
            "Severity": "CRITICAL",
            "Status": "FAIL",
            "Title": "Elasticsearch doesn't enforce HTTPS traffic.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0048",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_elasticsearch_domain\" \"monitoring-framework\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  domain_name           = \"tg-${var.environment}-es\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  elasticsearch_version = \"2.3\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  cluster_config {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    instance_type            = \"t2.small.elasticsearch\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    instance_count           = 1",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    dedicated_master_enabled = false",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    dedicated_master_type    = \"m4.large.elasticsearch\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 27,
              "Provider": "AWS",
              "Resource": "aws_elasticsearch_domain.monitoring-framework",
              "Service": "elastic-search",
              "StartLine": 1
            },
            "Description": "You should ensure your Elasticsearch data is encrypted at rest to help prevent sensitive information from being read by unauthorised users.",
            "ID": "AVD-AWS-0048",
            "Layer": {},
            "Message": "Domain does not have at-rest encryption enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0048",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/encryption-at-rest.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0048"
            ],
            "Resolution": "Enable ElasticSearch domain encryption",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Elasticsearch domain isn't encrypted at rest.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0126",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_elasticsearch_domain\" \"monitoring-framework\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  domain_name           = \"tg-${var.environment}-es\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  elasticsearch_version = \"2.3\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  cluster_config {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    instance_type            = \"t2.small.elasticsearch\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    instance_count           = 1",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    dedicated_master_enabled = false",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    dedicated_master_type    = \"m4.large.elasticsearch\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 27,
              "Provider": "AWS",
              "Resource": "aws_elasticsearch_domain.monitoring-framework",
              "Service": "elastic-search",
              "StartLine": 1
            },
            "Description": "You should not use outdated/insecure TLS versions for encryption. You should be using TLS v1.2+.",
            "ID": "AVD-AWS-0126",
            "Layer": {},
            "Message": "Domain does not have a secure TLS policy.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0126",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-data-protection.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0126"
            ],
            "Resolution": "Use the most modern TLS/SSL policies available",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Elasticsearch domain endpoint is using outdated TLS policy.",
            "Type": "Terraform Security Check"
          }
        ],
        "Target": "terraform/aws/es.tf",
        "Type": "terraform"
      },
      {
        "Class": "config",
        "Misconfigurations": [
          {
            "AVDID": "AVD-AWS-0057",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_iam_user_policy\" \"userpolicy\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 25,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 26,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "      \"Action\": [",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 34,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "        \"ec2:*\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 35,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "        \"s3:*\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 36,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "        \"lambda:*\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 37,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "        \"cloudwatch:*\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 38,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "      ],",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 39,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 45,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 46,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 39,
              "Provider": "AWS",
              "Resource": "aws_iam_user_policy.userpolicy",
              "Service": "iam",
              "StartLine": 34
            },
            "Description": "You should use the principle of least privilege when defining your IAM policies. This means you should specify each exact permission required without using wildcards, as this could cause the granting of access to certain undesired actions, resources and principals.",
            "ID": "AVD-AWS-0057",
            "Layer": {},
            "Message": "IAM policy document uses wildcarded action 'ec2:*'",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0057",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0057"
            ],
            "Resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0057",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_iam_user_policy\" \"userpolicy\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 25,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 26,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "      \"Action\": [",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 34,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "        \"ec2:*\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 35,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "        \"s3:*\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 36,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "        \"lambda:*\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 37,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "        \"cloudwatch:*\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 38,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "      ],",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 39,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 45,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 46,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 39,
              "Provider": "AWS",
              "Resource": "aws_iam_user_policy.userpolicy",
              "Service": "iam",
              "StartLine": 34
            },
            "Description": "You should use the principle of least privilege when defining your IAM policies. This means you should specify each exact permission required without using wildcards, as this could cause the granting of access to certain undesired actions, resources and principals.",
            "ID": "AVD-AWS-0057",
            "Layer": {},
            "Message": "IAM policy document uses wildcarded action 'ec2:*'",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0057",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0057"
            ],
            "Resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0057",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_iam_user_policy\" \"userpolicy\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 25,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 26,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "      \"Action\": [",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 34,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "        \"ec2:*\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 35,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "        \"s3:*\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 36,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "        \"lambda:*\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 37,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "        \"cloudwatch:*\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 38,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "      ],",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 39,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 45,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 46,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 39,
              "Provider": "AWS",
              "Resource": "aws_iam_user_policy.userpolicy",
              "Service": "iam",
              "StartLine": 34
            },
            "Description": "You should use the principle of least privilege when defining your IAM policies. This means you should specify each exact permission required without using wildcards, as this could cause the granting of access to certain undesired actions, resources and principals.",
            "ID": "AVD-AWS-0057",
            "Layer": {},
            "Message": "IAM policy document uses wildcarded action 'ec2:*'",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0057",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0057"
            ],
            "Resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0057",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_iam_user_policy\" \"userpolicy\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 25,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 26,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "      \"Action\": [",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 34,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "        \"ec2:*\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 35,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "        \"s3:*\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 36,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "        \"lambda:*\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 37,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "        \"cloudwatch:*\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 38,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "      ],",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 39,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 45,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 46,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 39,
              "Provider": "AWS",
              "Resource": "aws_iam_user_policy.userpolicy",
              "Service": "iam",
              "StartLine": 34
            },
            "Description": "You should use the principle of least privilege when defining your IAM policies. This means you should specify each exact permission required without using wildcards, as this could cause the granting of access to certain undesired actions, resources and principals.",
            "ID": "AVD-AWS-0057",
            "Layer": {},
            "Message": "IAM policy document uses wildcarded action 'ec2:*'",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0057",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0057"
            ],
            "Resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0057",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_iam_user_policy\" \"userpolicy\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 25,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 26,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "      \"Resource\": \"*\"",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 41,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 45,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 46,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 41,
              "Provider": "AWS",
              "Resource": "aws_iam_user_policy.userpolicy",
              "Service": "iam",
              "StartLine": 41
            },
            "Description": "You should use the principle of least privilege when defining your IAM policies. This means you should specify each exact permission required without using wildcards, as this could cause the granting of access to certain undesired actions, resources and principals.",
            "ID": "AVD-AWS-0057",
            "Layer": {},
            "Message": "IAM policy document uses sensitive action 'ec2:*' on wildcarded resource '*'",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0057",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0057"
            ],
            "Resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0143",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_iam_user\" \"user\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name          = \"${local.resource_prefix.value}-user\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name        = \"${local.resource_prefix.value}-user\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Environment = local.resource_prefix.value",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    }, {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"d68d2897add9bc2203a5ed0632a5cdd8ff8cefb0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 19,
              "Provider": "AWS",
              "Resource": "aws_iam_user.user",
              "Service": "iam",
              "StartLine": 1
            },
            "Description": "\nCIS recommends that you apply IAM policies directly to groups and roles but not users. Assigning privileges at the group or role level reduces the complexity of access management as the number of users grow. Reducing access management complexity might in turn reduce opportunity for a principal to inadvertently receive or retain excessive privileges.\n\t\t\t",
            "ID": "AVD-AWS-0143",
            "Layer": {},
            "Message": "One or more policies are attached directly to a user",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0143",
            "Query": "data..",
            "References": [
              "https://console.aws.amazon.com/iam/",
              "https://avd.aquasec.com/misconfig/avd-aws-0143"
            ],
            "Resolution": "Grant policies at the group level instead.",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "IAM policies should not be granted directly to users.",
            "Type": "Terraform Security Check"
          }
        ],
        "Target": "terraform/aws/iam.tf",
        "Type": "terraform"
      },
      {
        "Class": "config",
        "Misconfigurations": [
          {
            "AVDID": "AVD-AWS-0065",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_kms_key\" \"logs_key\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # key does not have rotation enabled",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  description = \"${local.resource_prefix.value}-logs bucket key\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  deletion_window_in_days = 7",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"d68d2897add9bc2203a5ed0632a5cdd8ff8cefb0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_file             = \"terraform/aws/kms.tf\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_last_modified_at = \"2020-06-16 14:46:24\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 16,
              "Provider": "AWS",
              "Resource": "aws_kms_key.logs_key",
              "Service": "kms",
              "StartLine": 1
            },
            "Description": "You should configure your KMS keys to auto rotate to maintain security and defend against compromise.",
            "ID": "AVD-AWS-0065",
            "Layer": {},
            "Message": "Key does not have rotation enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0065",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/kms/latest/developerguide/rotate-keys.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0065"
            ],
            "Resolution": "Configure KMS key to auto rotate",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "A KMS key is not configured to auto-rotate.",
            "Type": "Terraform Security Check"
          }
        ],
        "Target": "terraform/aws/kms.tf",
        "Type": "terraform"
      },
      {
        "Class": "config",
        "Misconfigurations": [
          {
            "AVDID": "AVD-AWS-0066",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_lambda_function\" \"analysis_lambda\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 31,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # lambda have plain text secrets in environment variables",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 32,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  filename      = \"resources/lambda_function_payload.zip\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 33,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  function_name = \"${local.resource_prefix.value}-analysis\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 34,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  role          = \"${aws_iam_role.iam_for_lambda.arn}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 35,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  handler       = \"exports.test\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 36,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 37,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  source_code_hash = \"${filebase64sha256(\"resources/lambda_function_payload.zip\")}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 38,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 39,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 40,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 58,
              "Provider": "AWS",
              "Resource": "aws_lambda_function.analysis_lambda",
              "Service": "lambda",
              "StartLine": 31
            },
            "Description": "X-Ray tracing enables end-to-end debugging and analysis of all function activity. This will allow for identifying bottlenecks, slow downs and timeouts.",
            "ID": "AVD-AWS-0066",
            "Layer": {},
            "Message": "Function does not have tracing enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0066",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/lambda/latest/dg/services-xray.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0066"
            ],
            "Resolution": "Enable tracing",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Lambda functions should have X-Ray tracing enabled",
            "Type": "Terraform Security Check"
          }
        ],
        "Target": "terraform/aws/lambda.tf",
        "Type": "terraform"
      },
      {
        "Class": "config",
        "Misconfigurations": [
          {
            "AVDID": "AVD-AWS-0075",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_neptune_cluster\" \"default\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  cluster_identifier                  = var.neptune-dbname",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  engine                              = \"neptune\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  backup_retention_period             = 5",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  preferred_backup_window             = \"07:00-09:00\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  skip_final_snapshot                 = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  iam_database_authentication_enabled = false",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  apply_immediately                   = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_encrypted                   = false",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 20,
              "Provider": "AWS",
              "Resource": "aws_neptune_cluster.default",
              "Service": "neptune",
              "StartLine": 1
            },
            "Description": "Neptune does not have auditing by default. To ensure that you are able to accurately audit the usage of your Neptune instance you should enable export logs.",
            "ID": "AVD-AWS-0075",
            "Layer": {},
            "Message": "Cluster does not have audit logging enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0075",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/neptune/latest/userguide/auditing.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0075"
            ],
            "Resolution": "Enable export logs",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Neptune logs export should be enabled",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0076",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_neptune_cluster\" \"default\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": true
                  },
                  {
                    "Annotation": "false",
                    "Content": "  storage_encrypted                   = false",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 19,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 20,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 9,
              "Provider": "AWS",
              "Resource": "aws_neptune_cluster.default",
              "Service": "neptune",
              "StartLine": 9
            },
            "Description": "Encryption of Neptune storage ensures that if their is compromise of the disks, the data is still protected.",
            "ID": "AVD-AWS-0076",
            "Layer": {},
            "Message": "Cluster does not have storage encryption enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0076",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/neptune/latest/userguide/encrypt.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0076"
            ],
            "Resolution": "Enable encryption of Neptune storage",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Neptune storage must be encrypted at rest",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0128",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_neptune_cluster\" \"default\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  cluster_identifier                  = var.neptune-dbname",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  engine                              = \"neptune\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  backup_retention_period             = 5",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  preferred_backup_window             = \"07:00-09:00\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  skip_final_snapshot                 = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  iam_database_authentication_enabled = false",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  apply_immediately                   = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_encrypted                   = false",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 20,
              "Provider": "AWS",
              "Resource": "aws_neptune_cluster.default",
              "Service": "neptune",
              "StartLine": 1
            },
            "Description": "Encryption using AWS keys provides protection for your Neptune underlying storage. To increase control of the encryption and manage factors like rotation use customer managed keys.",
            "ID": "AVD-AWS-0128",
            "Layer": {},
            "Message": "Cluster does not encrypt data with a customer managed key.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0128",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/neptune/latest/userguide/encrypt.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0128"
            ],
            "Resolution": "Enable encryption using customer managed keys",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Neptune encryption should use Customer Managed Keys",
            "Type": "Terraform Security Check"
          }
        ],
        "Target": "terraform/aws/neptune.tf",
        "Type": "terraform"
      },
      {
        "Class": "config",
        "Misconfigurations": [
          {
            "AVDID": "AVD-AWS-0077",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_rds_cluster\" \"app1-rds-cluster\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": true
                  },
                  {
                    "Annotation": "0",
                    "Content": "  backup_retention_period = 0",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 14,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 15,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 4,
              "Provider": "AWS",
              "Resource": "aws_rds_cluster.app1-rds-cluster",
              "Service": "rds",
              "StartLine": 4
            },
            "Description": "RDS backup retention for clusters defaults to 1 day, this may not be enough to identify and respond to an issue. Backup retention periods should be set to a period that is a balance on cost and limiting risk.",
            "ID": "AVD-AWS-0077",
            "Layer": {},
            "Message": "Cluster has very low backup retention period.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0077",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithAutomatedBackups.html#USER_WorkingWithAutomatedBackups.BackupRetention",
              "https://avd.aquasec.com/misconfig/avd-aws-0077"
            ],
            "Resolution": "Explicitly set the retention period to greater than the default",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "RDS Cluster and RDS instance should have backup retention longer than default 1 day",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0077",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_rds_cluster\" \"app2-rds-cluster\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 17,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 18,
                    "Truncated": true
                  },
                  {
                    "Annotation": "1",
                    "Content": "  backup_retention_period = 1",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 20,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 30,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 31,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 20,
              "Provider": "AWS",
              "Resource": "aws_rds_cluster.app2-rds-cluster",
              "Service": "rds",
              "StartLine": 20
            },
            "Description": "RDS backup retention for clusters defaults to 1 day, this may not be enough to identify and respond to an issue. Backup retention periods should be set to a period that is a balance on cost and limiting risk.",
            "ID": "AVD-AWS-0077",
            "Layer": {},
            "Message": "Cluster has very low backup retention period.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0077",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithAutomatedBackups.html#USER_WorkingWithAutomatedBackups.BackupRetention",
              "https://avd.aquasec.com/misconfig/avd-aws-0077"
            ],
            "Resolution": "Explicitly set the retention period to greater than the default",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "RDS Cluster and RDS instance should have backup retention longer than default 1 day",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0079",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_rds_cluster\" \"app1-rds-cluster\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  cluster_identifier      = \"app1-rds-cluster\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  allocated_storage       = 10",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  backup_retention_period = 0",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"079fe74f6b96d887c245664fbd8cf676c92f20e5\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_file             = \"terraform/aws/rds.tf\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_last_modified_at = \"2021-12-08 23:26:32\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_last_modified_by = \"tron47@gmail.com\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 15,
              "Provider": "AWS",
              "Resource": "aws_rds_cluster.app1-rds-cluster",
              "Service": "rds",
              "StartLine": 1
            },
            "Description": "Encryption should be enabled for an RDS Aurora cluster. \n\nWhen enabling encryption by setting the kms_key_id, the storage_encrypted must also be set to true.",
            "ID": "AVD-AWS-0079",
            "Layer": {},
            "Message": "Cluster does not have storage encryption enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0079",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Encryption.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0079"
            ],
            "Resolution": "Enable encryption for RDS clusters",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "There is no encryption specified or encryption is disabled on the RDS Cluster.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0079",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_rds_cluster\" \"app2-rds-cluster\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 17,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  cluster_identifier      = \"app2-rds-cluster\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 18,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  allocated_storage       = 10",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 19,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  backup_retention_period = 1",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 20,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 21,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"079fe74f6b96d887c245664fbd8cf676c92f20e5\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 22,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_file             = \"terraform/aws/rds.tf\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 23,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_last_modified_at = \"2021-12-08 23:26:32\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 24,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_last_modified_by = \"tron47@gmail.com\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 25,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 26,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 31,
              "Provider": "AWS",
              "Resource": "aws_rds_cluster.app2-rds-cluster",
              "Service": "rds",
              "StartLine": 17
            },
            "Description": "Encryption should be enabled for an RDS Aurora cluster. \n\nWhen enabling encryption by setting the kms_key_id, the storage_encrypted must also be set to true.",
            "ID": "AVD-AWS-0079",
            "Layer": {},
            "Message": "Cluster does not have storage encryption enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0079",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Encryption.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0079"
            ],
            "Resolution": "Enable encryption for RDS clusters",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "There is no encryption specified or encryption is disabled on the RDS Cluster.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0079",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_rds_cluster\" \"app3-rds-cluster\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 33,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  cluster_identifier      = \"app3-rds-cluster\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 34,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  allocated_storage       = 10",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 35,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  backup_retention_period = 15",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 36,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 37,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"079fe74f6b96d887c245664fbd8cf676c92f20e5\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 38,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_file             = \"terraform/aws/rds.tf\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 39,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_last_modified_at = \"2021-12-08 23:26:32\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 40,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_last_modified_by = \"tron47@gmail.com\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 41,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 42,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 47,
              "Provider": "AWS",
              "Resource": "aws_rds_cluster.app3-rds-cluster",
              "Service": "rds",
              "StartLine": 33
            },
            "Description": "Encryption should be enabled for an RDS Aurora cluster. \n\nWhen enabling encryption by setting the kms_key_id, the storage_encrypted must also be set to true.",
            "ID": "AVD-AWS-0079",
            "Layer": {},
            "Message": "Cluster does not have storage encryption enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0079",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Encryption.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0079"
            ],
            "Resolution": "Enable encryption for RDS clusters",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "There is no encryption specified or encryption is disabled on the RDS Cluster.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0079",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_rds_cluster\" \"app4-rds-cluster\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 49,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  cluster_identifier      = \"app4-rds-cluster\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 50,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  allocated_storage       = 10",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 51,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  backup_retention_period = 15",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 52,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 53,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"079fe74f6b96d887c245664fbd8cf676c92f20e5\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 54,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_file             = \"terraform/aws/rds.tf\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 55,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_last_modified_at = \"2021-12-08 23:26:32\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 56,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_last_modified_by = \"tron47@gmail.com\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 57,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 58,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 63,
              "Provider": "AWS",
              "Resource": "aws_rds_cluster.app4-rds-cluster",
              "Service": "rds",
              "StartLine": 49
            },
            "Description": "Encryption should be enabled for an RDS Aurora cluster. \n\nWhen enabling encryption by setting the kms_key_id, the storage_encrypted must also be set to true.",
            "ID": "AVD-AWS-0079",
            "Layer": {},
            "Message": "Cluster does not have storage encryption enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0079",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Encryption.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0079"
            ],
            "Resolution": "Enable encryption for RDS clusters",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "There is no encryption specified or encryption is disabled on the RDS Cluster.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0079",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_rds_cluster\" \"app5-rds-cluster\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 65,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  cluster_identifier      = \"app5-rds-cluster\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 66,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  allocated_storage       = 10",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 67,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  backup_retention_period = 15",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 68,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 69,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"079fe74f6b96d887c245664fbd8cf676c92f20e5\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 70,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_file             = \"terraform/aws/rds.tf\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 71,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_last_modified_at = \"2021-12-08 23:26:32\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 72,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_last_modified_by = \"tron47@gmail.com\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 73,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 74,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 79,
              "Provider": "AWS",
              "Resource": "aws_rds_cluster.app5-rds-cluster",
              "Service": "rds",
              "StartLine": 65
            },
            "Description": "Encryption should be enabled for an RDS Aurora cluster. \n\nWhen enabling encryption by setting the kms_key_id, the storage_encrypted must also be set to true.",
            "ID": "AVD-AWS-0079",
            "Layer": {},
            "Message": "Cluster does not have storage encryption enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0079",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Encryption.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0079"
            ],
            "Resolution": "Enable encryption for RDS clusters",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "There is no encryption specified or encryption is disabled on the RDS Cluster.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0079",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_rds_cluster\" \"app6-rds-cluster\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 81,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  cluster_identifier      = \"app6-rds-cluster\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 82,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  allocated_storage       = 10",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 83,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  backup_retention_period = 15",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 84,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 85,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"079fe74f6b96d887c245664fbd8cf676c92f20e5\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 86,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_file             = \"terraform/aws/rds.tf\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 87,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_last_modified_at = \"2021-12-08 23:26:32\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 88,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_last_modified_by = \"tron47@gmail.com\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 89,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 90,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 95,
              "Provider": "AWS",
              "Resource": "aws_rds_cluster.app6-rds-cluster",
              "Service": "rds",
              "StartLine": 81
            },
            "Description": "Encryption should be enabled for an RDS Aurora cluster. \n\nWhen enabling encryption by setting the kms_key_id, the storage_encrypted must also be set to true.",
            "ID": "AVD-AWS-0079",
            "Layer": {},
            "Message": "Cluster does not have storage encryption enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0079",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Encryption.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0079"
            ],
            "Resolution": "Enable encryption for RDS clusters",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "There is no encryption specified or encryption is disabled on the RDS Cluster.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0079",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_rds_cluster\" \"app7-rds-cluster\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 97,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  cluster_identifier      = \"app7-rds-cluster\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 98,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  allocated_storage       = 10",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 99,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  backup_retention_period = 25",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 100,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 101,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"079fe74f6b96d887c245664fbd8cf676c92f20e5\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 102,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_file             = \"terraform/aws/rds.tf\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 103,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_last_modified_at = \"2021-12-08 23:26:32\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 104,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_last_modified_by = \"tron47@gmail.com\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 105,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 106,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 111,
              "Provider": "AWS",
              "Resource": "aws_rds_cluster.app7-rds-cluster",
              "Service": "rds",
              "StartLine": 97
            },
            "Description": "Encryption should be enabled for an RDS Aurora cluster. \n\nWhen enabling encryption by setting the kms_key_id, the storage_encrypted must also be set to true.",
            "ID": "AVD-AWS-0079",
            "Layer": {},
            "Message": "Cluster does not have storage encryption enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0079",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Encryption.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0079"
            ],
            "Resolution": "Enable encryption for RDS clusters",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "There is no encryption specified or encryption is disabled on the RDS Cluster.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0079",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_rds_cluster\" \"app8-rds-cluster\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 113,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  cluster_identifier      = \"app8-rds-cluster\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 114,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  allocated_storage       = 10",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 115,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  backup_retention_period = 25",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 116,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 117,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"079fe74f6b96d887c245664fbd8cf676c92f20e5\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 118,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_file             = \"terraform/aws/rds.tf\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 119,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_last_modified_at = \"2021-12-08 23:26:32\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 120,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_last_modified_by = \"tron47@gmail.com\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 121,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 122,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 128,
              "Provider": "AWS",
              "Resource": "aws_rds_cluster.app8-rds-cluster",
              "Service": "rds",
              "StartLine": 113
            },
            "Description": "Encryption should be enabled for an RDS Aurora cluster. \n\nWhen enabling encryption by setting the kms_key_id, the storage_encrypted must also be set to true.",
            "ID": "AVD-AWS-0079",
            "Layer": {},
            "Message": "Cluster does not have storage encryption enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0079",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Encryption.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0079"
            ],
            "Resolution": "Enable encryption for RDS clusters",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "There is no encryption specified or encryption is disabled on the RDS Cluster.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0079",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_rds_cluster\" \"app9-rds-cluster\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 130,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  cluster_identifier      = \"app9-rds-cluster\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 131,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  allocated_storage       = 10",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 132,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  backup_retention_period = 25",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 133,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 134,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"079fe74f6b96d887c245664fbd8cf676c92f20e5\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 135,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_file             = \"terraform/aws/rds.tf\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 136,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_last_modified_at = \"2021-12-08 23:26:32\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 137,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_last_modified_by = \"tron47@gmail.com\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 138,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 139,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 144,
              "Provider": "AWS",
              "Resource": "aws_rds_cluster.app9-rds-cluster",
              "Service": "rds",
              "StartLine": 130
            },
            "Description": "Encryption should be enabled for an RDS Aurora cluster. \n\nWhen enabling encryption by setting the kms_key_id, the storage_encrypted must also be set to true.",
            "ID": "AVD-AWS-0079",
            "Layer": {},
            "Message": "Cluster does not have storage encryption enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0079",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Encryption.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0079"
            ],
            "Resolution": "Enable encryption for RDS clusters",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "There is no encryption specified or encryption is disabled on the RDS Cluster.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0077",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_rds_cluster\" \"app8-rds-cluster\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 113,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  cluster_identifier      = \"app8-rds-cluster\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 114,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  allocated_storage       = 10",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 115,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  backup_retention_period = 25",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 116,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 117,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"079fe74f6b96d887c245664fbd8cf676c92f20e5\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 118,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_file             = \"terraform/aws/rds.tf\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 119,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_last_modified_at = \"2021-12-08 23:26:32\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 120,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_last_modified_by = \"tron47@gmail.com\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 121,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 122,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 128,
              "Provider": "AWS",
              "Resource": "aws_rds_cluster.app8-rds-cluster",
              "Service": "rds",
              "StartLine": 113
            },
            "Description": "RDS backup retention for clusters defaults to 1 day, this may not be enough to identify and respond to an issue. Backup retention periods should be set to a period that is a balance on cost and limiting risk.",
            "ID": "AVD-AWS-0077",
            "Layer": {},
            "Message": "No issues found",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0077",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithAutomatedBackups.html#USER_WorkingWithAutomatedBackups.BackupRetention",
              "https://avd.aquasec.com/misconfig/avd-aws-0077"
            ],
            "Resolution": "Explicitly set the retention period to greater than the default",
            "Severity": "MEDIUM",
            "Status": "PASS",
            "Title": "RDS Cluster and RDS instance should have backup retention longer than default 1 day",
            "Type": "Terraform Security Check"
          }
        ],
        "Target": "terraform/aws/rds.tf",
        "Type": "terraform"
      },
      {
        "Class": "config",
        "Misconfigurations": [
          {
            "AVDID": "AVD-DS-0002",
            "CauseMetadata": {
              "Code": {
                "Lines": null
              },
              "Provider": "Dockerfile",
              "Service": "general"
            },
            "Description": "Running containers with 'root' user can lead to a container escape situation. It is a best practice to run containers as non-root users, which can be done by adding a 'USER' statement to the Dockerfile.",
            "ID": "DS002",
            "Layer": {},
            "Message": "Specify at least 1 USER command in Dockerfile with non-root user as argument",
            "Namespace": "builtin.dockerfile.DS002",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/ds002",
            "Query": "data.builtin.dockerfile.DS002.deny",
            "References": [
              "https://docs.docker.com/develop/develop-images/dockerfile_best-practices/",
              "https://avd.aquasec.com/misconfig/ds002"
            ],
            "Resolution": "Add 'USER \u003cnon root user name\u003e' line to the Dockerfile",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Image user should not be 'root'",
            "Type": "Dockerfile Security Check"
          },
          {
            "AVDID": "AVD-DS-0001",
            "CauseMetadata": {
              "Code": {
                "Lines": null
              },
              "Provider": "Dockerfile",
              "Service": "general"
            },
            "Description": "When using a 'FROM' statement you should use a specific tag to avoid uncontrolled behavior when the image is updated.",
            "ID": "DS001",
            "Layer": {},
            "Message": "No issues found",
            "Namespace": "builtin.dockerfile.DS001",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/ds001",
            "Query": "data.builtin.dockerfile.DS001.deny",
            "References": [
              "https://avd.aquasec.com/misconfig/ds001"
            ],
            "Resolution": "Add a tag to the image in the 'FROM' statement",
            "Severity": "MEDIUM",
            "Status": "PASS",
            "Title": "':latest' tag used",
            "Type": "Dockerfile Security Check"
          },
          {
            "AVDID": "AVD-DS-0004",
            "CauseMetadata": {
              "Code": {
                "Lines": null
              },
              "Provider": "Dockerfile",
              "Service": "general"
            },
            "Description": "Exposing port 22 might allow users to SSH into the container.",
            "ID": "DS004",
            "Layer": {},
            "Message": "No issues found",
            "Namespace": "builtin.dockerfile.DS004",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/ds004",
            "Query": "data.builtin.dockerfile.DS004.deny",
            "References": [
              "https://avd.aquasec.com/misconfig/ds004"
            ],
            "Resolution": "Remove 'EXPOSE 22' statement from the Dockerfile",
            "Severity": "MEDIUM",
            "Status": "PASS",
            "Title": "Port 22 exposed",
            "Type": "Dockerfile Security Check"
          },
          {
            "AVDID": "AVD-DS-0005",
            "CauseMetadata": {
              "Code": {
                "Lines": null
              },
              "Provider": "Dockerfile",
              "Service": "general"
            },
            "Description": "You should use COPY instead of ADD unless you want to extract a tar file. Note that an ADD command will extract a tar file, which adds the risk of Zip-based vulnerabilities. Accordingly, it is advised to use a COPY command, which does not extract tar files.",
            "ID": "DS005",
            "Layer": {},
            "Message": "No issues found",
            "Namespace": "builtin.dockerfile.DS005",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/ds005",
            "Query": "data.builtin.dockerfile.DS005.deny",
            "References": [
              "https://docs.docker.com/engine/reference/builder/#add",
              "https://avd.aquasec.com/misconfig/ds005"
            ],
            "Resolution": "Use COPY instead of ADD",
            "Severity": "LOW",
            "Status": "PASS",
            "Title": "ADD instead of COPY",
            "Type": "Dockerfile Security Check"
          },
          {
            "AVDID": "AVD-DS-0006",
            "CauseMetadata": {
              "Code": {
                "Lines": null
              },
              "Provider": "Dockerfile",
              "Service": "general"
            },
            "Description": "COPY '--from' should not mention the current FROM alias, since it is impossible to copy from itself.",
            "ID": "DS006",
            "Layer": {},
            "Message": "No issues found",
            "Namespace": "builtin.dockerfile.DS006",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/ds006",
            "Query": "data.builtin.dockerfile.DS006.deny",
            "References": [
              "https://docs.docker.com/develop/develop-images/multistage-build/",
              "https://avd.aquasec.com/misconfig/ds006"
            ],
            "Resolution": "Change the '--from' so that it will not refer to itself",
            "Severity": "CRITICAL",
            "Status": "PASS",
            "Title": "COPY '--from' referring to the current image",
            "Type": "Dockerfile Security Check"
          },
          {
            "AVDID": "AVD-DS-0007",
            "CauseMetadata": {
              "Code": {
                "Lines": null
              },
              "Provider": "Dockerfile",
              "Service": "general"
            },
            "Description": "There can only be one ENTRYPOINT instruction in a Dockerfile. Only the last ENTRYPOINT instruction in the Dockerfile will have an effect.",
            "ID": "DS007",
            "Layer": {},
            "Message": "No issues found",
            "Namespace": "builtin.dockerfile.DS007",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/ds007",
            "Query": "data.builtin.dockerfile.DS007.deny",
            "References": [
              "https://docs.docker.com/engine/reference/builder/#entrypoint",
              "https://avd.aquasec.com/misconfig/ds007"
            ],
            "Resolution": "Remove unnecessary ENTRYPOINT instruction.",
            "Severity": "CRITICAL",
            "Status": "PASS",
            "Title": "Multiple ENTRYPOINT instructions listed",
            "Type": "Dockerfile Security Check"
          },
          {
            "AVDID": "AVD-DS-0008",
            "CauseMetadata": {
              "Code": {
                "Lines": null
              },
              "Provider": "Dockerfile",
              "Service": "general"
            },
            "Description": "UNIX ports outside the range 0-65535 are exposed.",
            "ID": "DS008",
            "Layer": {},
            "Message": "No issues found",
            "Namespace": "builtin.dockerfile.DS008",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/ds008",
            "Query": "data.builtin.dockerfile.DS008.deny",
            "References": [
              "https://docs.docker.com/engine/reference/builder/#expose",
              "https://avd.aquasec.com/misconfig/ds008"
            ],
            "Resolution": "Use port number within range",
            "Severity": "CRITICAL",
            "Status": "PASS",
            "Title": "Exposed port out of range",
            "Type": "Dockerfile Security Check"
          },
          {
            "AVDID": "AVD-DS-0009",
            "CauseMetadata": {
              "Code": {
                "Lines": null
              },
              "Provider": "Dockerfile",
              "Service": "general"
            },
            "Description": "For clarity and reliability, you should always use absolute paths for your WORKDIR.",
            "ID": "DS009",
            "Layer": {},
            "Message": "No issues found",
            "Namespace": "builtin.dockerfile.DS009",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/ds009",
            "Query": "data.builtin.dockerfile.DS009.deny",
            "References": [
              "https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#workdir",
              "https://avd.aquasec.com/misconfig/ds009"
            ],
            "Resolution": "Use absolute paths for your WORKDIR",
            "Severity": "HIGH",
            "Status": "PASS",
            "Title": "WORKDIR path not absolute",
            "Type": "Dockerfile Security Check"
          },
          {
            "AVDID": "AVD-DS-0010",
            "CauseMetadata": {
              "Code": {
                "Lines": null
              },
              "Provider": "Dockerfile",
              "Service": "general"
            },
            "Description": "Avoid using 'RUN' with 'sudo' commands, as it can lead to unpredictable behavior.",
            "ID": "DS010",
            "Layer": {},
            "Message": "No issues found",
            "Namespace": "builtin.dockerfile.DS010",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/ds010",
            "Query": "data.builtin.dockerfile.DS010.deny",
            "References": [
              "https://docs.docker.com/engine/reference/builder/#run",
              "https://avd.aquasec.com/misconfig/ds010"
            ],
            "Resolution": "Don't use sudo",
            "Severity": "CRITICAL",
            "Status": "PASS",
            "Title": "RUN using 'sudo'",
            "Type": "Dockerfile Security Check"
          },
          {
            "AVDID": "AVD-DS-0011",
            "CauseMetadata": {
              "Code": {
                "Lines": null
              },
              "Provider": "Dockerfile",
              "Service": "general"
            },
            "Description": "When a COPY command has more than two arguments, the last one should end with a slash.",
            "ID": "DS011",
            "Layer": {},
            "Message": "No issues found",
            "Namespace": "builtin.dockerfile.DS011",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/ds011",
            "Query": "data.builtin.dockerfile.DS011.deny",
            "References": [
              "https://docs.docker.com/engine/reference/builder/#copy",
              "https://avd.aquasec.com/misconfig/ds011"
            ],
            "Resolution": "Add slash to last COPY argument",
            "Severity": "CRITICAL",
            "Status": "PASS",
            "Title": "COPY with more than two arguments not ending with slash",
            "Type": "Dockerfile Security Check"
          },
          {
            "AVDID": "AVD-DS-0012",
            "CauseMetadata": {
              "Code": {
                "Lines": null
              },
              "Provider": "Dockerfile",
              "Service": "general"
            },
            "Description": "Different FROMs can't have the same alias defined.",
            "ID": "DS012",
            "Layer": {},
            "Message": "No issues found",
            "Namespace": "builtin.dockerfile.DS012",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/ds012",
            "Query": "data.builtin.dockerfile.DS012.deny",
            "References": [
              "https://docs.docker.com/develop/develop-images/multistage-build/",
              "https://avd.aquasec.com/misconfig/ds012"
            ],
            "Resolution": "Change aliases to make them different",
            "Severity": "CRITICAL",
            "Status": "PASS",
            "Title": "Duplicate aliases defined in different FROMs",
            "Type": "Dockerfile Security Check"
          },
          {
            "AVDID": "AVD-DS-0013",
            "CauseMetadata": {
              "Code": {
                "Lines": null
              },
              "Provider": "Dockerfile",
              "Service": "general"
            },
            "Description": "Use WORKDIR instead of proliferating instructions like 'RUN cd … \u0026\u0026 do-something', which are hard to read, troubleshoot, and maintain.",
            "ID": "DS013",
            "Layer": {},
            "Message": "No issues found",
            "Namespace": "builtin.dockerfile.DS013",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/ds013",
            "Query": "data.builtin.dockerfile.DS013.deny",
            "References": [
              "https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#workdir",
              "https://avd.aquasec.com/misconfig/ds013"
            ],
            "Resolution": "Use WORKDIR to change directory",
            "Severity": "MEDIUM",
            "Status": "PASS",
            "Title": "'RUN cd ...' to change directory",
            "Type": "Dockerfile Security Check"
          },
          {
            "AVDID": "AVD-DS-0014",
            "CauseMetadata": {
              "Code": {
                "Lines": null
              },
              "Provider": "Dockerfile",
              "Service": "general"
            },
            "Description": "Avoid using both 'wget' and 'curl' since these tools have the same effect.",
            "ID": "DS014",
            "Layer": {},
            "Message": "No issues found",
            "Namespace": "builtin.dockerfile.DS014",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/ds014",
            "Query": "data.builtin.dockerfile.DS014.deny",
            "References": [
              "https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#run",
              "https://avd.aquasec.com/misconfig/ds014"
            ],
            "Resolution": "Pick one util, either 'wget' or 'curl'",
            "Severity": "LOW",
            "Status": "PASS",
            "Title": "RUN using 'wget' and 'curl'",
            "Type": "Dockerfile Security Check"
          },
          {
            "AVDID": "AVD-DS-0015",
            "CauseMetadata": {
              "Code": {
                "Lines": null
              },
              "Provider": "Dockerfile",
              "Service": "general"
            },
            "Description": "You should use 'yum clean all' after using a 'yum install' command to clean package cached data and reduce image size.",
            "ID": "DS015",
            "Layer": {},
            "Message": "No issues found",
            "Namespace": "builtin.dockerfile.DS015",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/ds015",
            "Query": "data.builtin.dockerfile.DS015.deny",
            "References": [
              "https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#run",
              "https://avd.aquasec.com/misconfig/ds015"
            ],
            "Resolution": "Add 'yum clean all' to Dockerfile",
            "Severity": "HIGH",
            "Status": "PASS",
            "Title": "'yum clean all' missing",
            "Type": "Dockerfile Security Check"
          },
          {
            "AVDID": "AVD-DS-0016",
            "CauseMetadata": {
              "Code": {
                "Lines": null
              },
              "Provider": "Dockerfile",
              "Service": "general"
            },
            "Description": "There can only be one CMD instruction in a Dockerfile. If you list more than one CMD then only the last CMD will take effect.",
            "ID": "DS016",
            "Layer": {},
            "Message": "No issues found",
            "Namespace": "builtin.dockerfile.DS016",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/ds016",
            "Query": "data.builtin.dockerfile.DS016.deny",
            "References": [
              "https://docs.docker.com/engine/reference/builder/#cmd",
              "https://avd.aquasec.com/misconfig/ds016"
            ],
            "Resolution": "Dockefile should only have one CMD instruction. Remove all the other CMD instructions",
            "Severity": "HIGH",
            "Status": "PASS",
            "Title": "Multiple CMD instructions listed",
            "Type": "Dockerfile Security Check"
          },
          {
            "AVDID": "AVD-DS-0017",
            "CauseMetadata": {
              "Code": {
                "Lines": null
              },
              "Provider": "Dockerfile",
              "Service": "general"
            },
            "Description": "The instruction 'RUN \u003cpackage-manager\u003e update' should always be followed by '\u003cpackage-manager\u003e install' in the same RUN statement.",
            "ID": "DS017",
            "Layer": {},
            "Message": "No issues found",
            "Namespace": "builtin.dockerfile.DS017",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/ds017",
            "Query": "data.builtin.dockerfile.DS017.deny",
            "References": [
              "https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#run",
              "https://avd.aquasec.com/misconfig/ds017"
            ],
            "Resolution": "Combine '\u003cpackage-manager\u003e update' and '\u003cpackage-manager\u003e install' instructions to single one",
            "Severity": "HIGH",
            "Status": "PASS",
            "Title": "'RUN \u003cpackage-manager\u003e update' instruction alone",
            "Type": "Dockerfile Security Check"
          },
          {
            "AVDID": "AVD-DS-0019",
            "CauseMetadata": {
              "Code": {
                "Lines": null
              },
              "Provider": "Dockerfile",
              "Service": "general"
            },
            "Description": "Cached package data should be cleaned after installation to reduce image size.",
            "ID": "DS019",
            "Layer": {},
            "Message": "No issues found",
            "Namespace": "builtin.dockerfile.DS019",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/ds019",
            "Query": "data.builtin.dockerfile.DS019.deny",
            "References": [
              "https://docs.docker.com/develop/develop-images/dockerfile_best-practices/",
              "https://avd.aquasec.com/misconfig/ds019"
            ],
            "Resolution": "Add 'dnf clean all' to Dockerfile",
            "Severity": "HIGH",
            "Status": "PASS",
            "Title": "'dnf clean all' missing",
            "Type": "Dockerfile Security Check"
          },
          {
            "AVDID": "AVD-DS-0020",
            "CauseMetadata": {
              "Code": {
                "Lines": null
              },
              "Provider": "Dockerfile",
              "Service": "general"
            },
            "Description": "The layer and image size should be reduced by deleting unneeded caches after running zypper.",
            "ID": "DS020",
            "Layer": {},
            "Message": "No issues found",
            "Namespace": "builtin.dockerfile.DS020",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/ds020",
            "Query": "data.builtin.dockerfile.DS020.deny",
            "References": [
              "https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#run",
              "https://avd.aquasec.com/misconfig/ds020"
            ],
            "Resolution": "Add 'zypper clean' to Dockerfile",
            "Severity": "HIGH",
            "Status": "PASS",
            "Title": "'zypper clean' missing",
            "Type": "Dockerfile Security Check"
          },
          {
            "AVDID": "AVD-DS-0021",
            "CauseMetadata": {
              "Code": {
                "Lines": null
              },
              "Provider": "Dockerfile",
              "Service": "general"
            },
            "Description": "'apt-get' calls should use the flag '-y' to avoid manual user input.",
            "ID": "DS021",
            "Layer": {},
            "Message": "No issues found",
            "Namespace": "builtin.dockerfile.DS021",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/ds021",
            "Query": "data.builtin.dockerfile.DS021.deny",
            "References": [
              "https://docs.docker.com/engine/reference/builder/#run",
              "https://avd.aquasec.com/misconfig/ds021"
            ],
            "Resolution": "Add '-y' flag to 'apt-get'",
            "Severity": "HIGH",
            "Status": "PASS",
            "Title": "'apt-get' missing '-y' to avoid manual input",
            "Type": "Dockerfile Security Check"
          },
          {
            "AVDID": "AVD-DS-0022",
            "CauseMetadata": {
              "Code": {
                "Lines": null
              },
              "Provider": "Dockerfile",
              "Service": "general"
            },
            "Description": "MAINTAINER has been deprecated since Docker 1.13.0.",
            "ID": "DS022",
            "Layer": {},
            "Message": "No issues found",
            "Namespace": "builtin.dockerfile.DS022",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/ds022",
            "Query": "data.builtin.dockerfile.DS022.deny",
            "References": [
              "https://docs.docker.com/engine/deprecated/#maintainer-in-dockerfile",
              "https://avd.aquasec.com/misconfig/ds022"
            ],
            "Resolution": "Use LABEL instead of MAINTAINER",
            "Severity": "HIGH",
            "Status": "PASS",
            "Title": "Deprecated MAINTAINER used",
            "Type": "Dockerfile Security Check"
          },
          {
            "AVDID": "AVD-DS-0023",
            "CauseMetadata": {
              "Code": {
                "Lines": null
              },
              "Provider": "Dockerfile",
              "Service": "general"
            },
            "Description": "Providing more than one HEALTHCHECK instruction per stage is confusing and error-prone.",
            "ID": "DS023",
            "Layer": {},
            "Message": "No issues found",
            "Namespace": "builtin.dockerfile.DS023",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/ds023",
            "Query": "data.builtin.dockerfile.DS023.deny",
            "References": [
              "https://docs.docker.com/engine/reference/builder/#healthcheck",
              "https://avd.aquasec.com/misconfig/ds023"
            ],
            "Resolution": "One HEALTHCHECK instruction must remain in Dockerfile. Remove all other instructions.",
            "Severity": "MEDIUM",
            "Status": "PASS",
            "Title": "Multiple HEALTHCHECK defined",
            "Type": "Dockerfile Security Check"
          },
          {
            "AVDID": "AVD-DS-0024",
            "CauseMetadata": {
              "Code": {
                "Lines": null
              },
              "Provider": "Dockerfile",
              "Service": "general"
            },
            "Description": "'apt-get dist-upgrade' upgrades a major version so it doesn't make more sense in Dockerfile.",
            "ID": "DS024",
            "Layer": {},
            "Message": "No issues found",
            "Namespace": "builtin.dockerfile.DS024",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/ds024",
            "Query": "data.builtin.dockerfile.DS024.deny",
            "References": [
              "https://avd.aquasec.com/misconfig/ds024"
            ],
            "Resolution": "Just use different image",
            "Severity": "HIGH",
            "Status": "PASS",
            "Title": "'apt-get dist-upgrade' used",
            "Type": "Dockerfile Security Check"
          }
        ],
        "Target": "terraform/aws/resources/Dockerfile",
        "Type": "dockerfile"
      },
      {
        "Class": "config",
        "Misconfigurations": [
          {
            "AVDID": "AVD-AWS-0086",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"data\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is public",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have access logs",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have versioning",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket        = \"${local.resource_prefix.value}-data\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name        = \"${local.resource_prefix.value}-data\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 21,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.data",
              "Service": "s3",
              "StartLine": 1
            },
            "Description": "\nS3 buckets should block public ACLs on buckets and any objects they contain. By blocking, PUTs with fail if the object has any public ACL a.\n",
            "ID": "AVD-AWS-0086",
            "Layer": {},
            "Message": "No public access block so not blocking public acls",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0086",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-control-block-public-access.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0086"
            ],
            "Resolution": "Enable blocking any PUT calls with a public ACL specified",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "S3 Access block should block public ACL",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0086",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"financials\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 42,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 43,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have access logs",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 44,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have versioning",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 45,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket        = \"${local.resource_prefix.value}-financials\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 46,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  acl           = \"private\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 47,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 48,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 49,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name        = \"${local.resource_prefix.value}-financials\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 50,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 51,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 63,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.financials",
              "Service": "s3",
              "StartLine": 42
            },
            "Description": "\nS3 buckets should block public ACLs on buckets and any objects they contain. By blocking, PUTs with fail if the object has any public ACL a.\n",
            "ID": "AVD-AWS-0086",
            "Layer": {},
            "Message": "No public access block so not blocking public acls",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0086",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-control-block-public-access.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0086"
            ],
            "Resolution": "Enable blocking any PUT calls with a public ACL specified",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "S3 Access block should block public ACL",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0086",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"operations\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 65,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 66,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have access logs",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 67,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket = \"${local.resource_prefix.value}-operations\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 68,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  acl    = \"private\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 69,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  versioning {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 70,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enabled = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 71,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 72,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 73,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 74,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 87,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.operations",
              "Service": "s3",
              "StartLine": 65
            },
            "Description": "\nS3 buckets should block public ACLs on buckets and any objects they contain. By blocking, PUTs with fail if the object has any public ACL a.\n",
            "ID": "AVD-AWS-0086",
            "Layer": {},
            "Message": "No public access block so not blocking public acls",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0086",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-control-block-public-access.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0086"
            ],
            "Resolution": "Enable blocking any PUT calls with a public ACL specified",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "S3 Access block should block public ACL",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0086",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"data_science\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 89,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 90,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket = \"${local.resource_prefix.value}-data-science\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 91,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  acl    = \"private\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 92,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  versioning {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 93,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enabled = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 94,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 95,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  logging {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 96,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    target_bucket = \"${aws_s3_bucket.logs.id}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 97,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 98,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 111,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.data_science",
              "Service": "s3",
              "StartLine": 89
            },
            "Description": "\nS3 buckets should block public ACLs on buckets and any objects they contain. By blocking, PUTs with fail if the object has any public ACL a.\n",
            "ID": "AVD-AWS-0086",
            "Layer": {},
            "Message": "No public access block so not blocking public acls",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0086",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-control-block-public-access.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0086"
            ],
            "Resolution": "Enable blocking any PUT calls with a public ACL specified",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "S3 Access block should block public ACL",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0086",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"logs\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 113,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket = \"${local.resource_prefix.value}-logs\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 114,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  acl    = \"log-delivery-write\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 115,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  versioning {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 116,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enabled = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 117,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 118,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  server_side_encryption_configuration {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 119,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    rule {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 120,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "      apply_server_side_encryption_by_default {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 121,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 122,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 141,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.logs",
              "Service": "s3",
              "StartLine": 113
            },
            "Description": "\nS3 buckets should block public ACLs on buckets and any objects they contain. By blocking, PUTs with fail if the object has any public ACL a.\n",
            "ID": "AVD-AWS-0086",
            "Layer": {},
            "Message": "No public access block so not blocking public acls",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0086",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-control-block-public-access.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0086"
            ],
            "Resolution": "Enable blocking any PUT calls with a public ACL specified",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "S3 Access block should block public ACL",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0087",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"data\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is public",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have access logs",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have versioning",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket        = \"${local.resource_prefix.value}-data\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name        = \"${local.resource_prefix.value}-data\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 21,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.data",
              "Service": "s3",
              "StartLine": 1
            },
            "Description": "\nS3 bucket policy should have block public policy to prevent users from putting a policy that enable public access.\n",
            "ID": "AVD-AWS-0087",
            "Layer": {},
            "Message": "No public access block so not blocking public policies",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0087",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/dev-retired/access-control-block-public-access.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0087"
            ],
            "Resolution": "Prevent policies that allow public access being PUT",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "S3 Access block should block public policy",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0087",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"financials\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 42,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 43,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have access logs",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 44,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have versioning",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 45,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket        = \"${local.resource_prefix.value}-financials\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 46,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  acl           = \"private\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 47,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 48,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 49,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name        = \"${local.resource_prefix.value}-financials\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 50,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 51,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 63,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.financials",
              "Service": "s3",
              "StartLine": 42
            },
            "Description": "\nS3 bucket policy should have block public policy to prevent users from putting a policy that enable public access.\n",
            "ID": "AVD-AWS-0087",
            "Layer": {},
            "Message": "No public access block so not blocking public policies",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0087",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/dev-retired/access-control-block-public-access.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0087"
            ],
            "Resolution": "Prevent policies that allow public access being PUT",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "S3 Access block should block public policy",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0087",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"operations\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 65,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 66,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have access logs",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 67,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket = \"${local.resource_prefix.value}-operations\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 68,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  acl    = \"private\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 69,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  versioning {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 70,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enabled = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 71,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 72,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 73,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 74,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 87,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.operations",
              "Service": "s3",
              "StartLine": 65
            },
            "Description": "\nS3 bucket policy should have block public policy to prevent users from putting a policy that enable public access.\n",
            "ID": "AVD-AWS-0087",
            "Layer": {},
            "Message": "No public access block so not blocking public policies",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0087",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/dev-retired/access-control-block-public-access.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0087"
            ],
            "Resolution": "Prevent policies that allow public access being PUT",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "S3 Access block should block public policy",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0087",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"data_science\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 89,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 90,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket = \"${local.resource_prefix.value}-data-science\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 91,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  acl    = \"private\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 92,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  versioning {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 93,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enabled = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 94,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 95,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  logging {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 96,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    target_bucket = \"${aws_s3_bucket.logs.id}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 97,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 98,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 111,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.data_science",
              "Service": "s3",
              "StartLine": 89
            },
            "Description": "\nS3 bucket policy should have block public policy to prevent users from putting a policy that enable public access.\n",
            "ID": "AVD-AWS-0087",
            "Layer": {},
            "Message": "No public access block so not blocking public policies",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0087",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/dev-retired/access-control-block-public-access.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0087"
            ],
            "Resolution": "Prevent policies that allow public access being PUT",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "S3 Access block should block public policy",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0087",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"logs\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 113,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket = \"${local.resource_prefix.value}-logs\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 114,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  acl    = \"log-delivery-write\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 115,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  versioning {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 116,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enabled = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 117,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 118,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  server_side_encryption_configuration {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 119,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    rule {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 120,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "      apply_server_side_encryption_by_default {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 121,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 122,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 141,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.logs",
              "Service": "s3",
              "StartLine": 113
            },
            "Description": "\nS3 bucket policy should have block public policy to prevent users from putting a policy that enable public access.\n",
            "ID": "AVD-AWS-0087",
            "Layer": {},
            "Message": "No public access block so not blocking public policies",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0087",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/dev-retired/access-control-block-public-access.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0087"
            ],
            "Resolution": "Prevent policies that allow public access being PUT",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "S3 Access block should block public policy",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0088",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"data\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is public",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have access logs",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have versioning",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket        = \"${local.resource_prefix.value}-data\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name        = \"${local.resource_prefix.value}-data\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 21,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.data",
              "Service": "s3",
              "StartLine": 1
            },
            "Description": "S3 Buckets should be encrypted to protect the data that is stored within them if access is compromised.",
            "ID": "AVD-AWS-0088",
            "Layer": {},
            "Message": "Bucket does not have encryption enabled",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0088",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucket-encryption.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0088"
            ],
            "Resolution": "Configure bucket encryption",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Unencrypted S3 bucket.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0088",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"financials\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 42,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 43,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have access logs",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 44,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have versioning",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 45,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket        = \"${local.resource_prefix.value}-financials\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 46,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  acl           = \"private\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 47,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 48,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 49,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name        = \"${local.resource_prefix.value}-financials\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 50,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 51,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 63,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.financials",
              "Service": "s3",
              "StartLine": 42
            },
            "Description": "S3 Buckets should be encrypted to protect the data that is stored within them if access is compromised.",
            "ID": "AVD-AWS-0088",
            "Layer": {},
            "Message": "Bucket does not have encryption enabled",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0088",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucket-encryption.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0088"
            ],
            "Resolution": "Configure bucket encryption",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Unencrypted S3 bucket.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0088",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"operations\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 65,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 66,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have access logs",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 67,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket = \"${local.resource_prefix.value}-operations\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 68,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  acl    = \"private\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 69,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  versioning {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 70,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enabled = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 71,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 72,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 73,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 74,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 87,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.operations",
              "Service": "s3",
              "StartLine": 65
            },
            "Description": "S3 Buckets should be encrypted to protect the data that is stored within them if access is compromised.",
            "ID": "AVD-AWS-0088",
            "Layer": {},
            "Message": "Bucket does not have encryption enabled",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0088",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucket-encryption.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0088"
            ],
            "Resolution": "Configure bucket encryption",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Unencrypted S3 bucket.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0088",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"data_science\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 89,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 90,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket = \"${local.resource_prefix.value}-data-science\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 91,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  acl    = \"private\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 92,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  versioning {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 93,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enabled = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 94,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 95,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  logging {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 96,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    target_bucket = \"${aws_s3_bucket.logs.id}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 97,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 98,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 111,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.data_science",
              "Service": "s3",
              "StartLine": 89
            },
            "Description": "S3 Buckets should be encrypted to protect the data that is stored within them if access is compromised.",
            "ID": "AVD-AWS-0088",
            "Layer": {},
            "Message": "Bucket does not have encryption enabled",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0088",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucket-encryption.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0088"
            ],
            "Resolution": "Configure bucket encryption",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Unencrypted S3 bucket.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0089",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"data\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is public",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have access logs",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have versioning",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket        = \"${local.resource_prefix.value}-data\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name        = \"${local.resource_prefix.value}-data\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 21,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.data",
              "Service": "s3",
              "StartLine": 1
            },
            "Description": "Buckets should have logging enabled so that access can be audited.",
            "ID": "AVD-AWS-0089",
            "Layer": {},
            "Message": "Bucket does not have logging enabled",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0089",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerLogs.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0089"
            ],
            "Resolution": "Add a logging block to the resource to enable access logging",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "S3 Bucket does not have logging enabled.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0089",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"financials\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 42,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 43,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have access logs",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 44,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have versioning",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 45,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket        = \"${local.resource_prefix.value}-financials\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 46,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  acl           = \"private\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 47,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 48,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 49,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name        = \"${local.resource_prefix.value}-financials\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 50,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 51,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 63,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.financials",
              "Service": "s3",
              "StartLine": 42
            },
            "Description": "Buckets should have logging enabled so that access can be audited.",
            "ID": "AVD-AWS-0089",
            "Layer": {},
            "Message": "Bucket does not have logging enabled",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0089",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerLogs.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0089"
            ],
            "Resolution": "Add a logging block to the resource to enable access logging",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "S3 Bucket does not have logging enabled.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0089",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"operations\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 65,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 66,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have access logs",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 67,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket = \"${local.resource_prefix.value}-operations\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 68,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  acl    = \"private\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 69,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  versioning {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 70,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enabled = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 71,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 72,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 73,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 74,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 87,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.operations",
              "Service": "s3",
              "StartLine": 65
            },
            "Description": "Buckets should have logging enabled so that access can be audited.",
            "ID": "AVD-AWS-0089",
            "Layer": {},
            "Message": "Bucket does not have logging enabled",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0089",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerLogs.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0089"
            ],
            "Resolution": "Add a logging block to the resource to enable access logging",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "S3 Bucket does not have logging enabled.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0090",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"data\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is public",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have access logs",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have versioning",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket        = \"${local.resource_prefix.value}-data\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name        = \"${local.resource_prefix.value}-data\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 21,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.data",
              "Service": "s3",
              "StartLine": 1
            },
            "Description": "\nVersioning in Amazon S3 is a means of keeping multiple variants of an object in the same bucket. \nYou can use the S3 Versioning feature to preserve, retrieve, and restore every version of every object stored in your buckets. \nWith versioning you can recover more easily from both unintended user actions and application failures.\n",
            "ID": "AVD-AWS-0090",
            "Layer": {},
            "Message": "Bucket does not have versioning enabled",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0090",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/Versioning.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0090"
            ],
            "Resolution": "Enable versioning to protect against accidental/malicious removal or modification",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "S3 Data should be versioned",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0090",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"financials\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 42,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 43,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have access logs",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 44,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have versioning",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 45,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket        = \"${local.resource_prefix.value}-financials\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 46,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  acl           = \"private\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 47,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 48,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 49,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name        = \"${local.resource_prefix.value}-financials\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 50,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 51,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 63,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.financials",
              "Service": "s3",
              "StartLine": 42
            },
            "Description": "\nVersioning in Amazon S3 is a means of keeping multiple variants of an object in the same bucket. \nYou can use the S3 Versioning feature to preserve, retrieve, and restore every version of every object stored in your buckets. \nWith versioning you can recover more easily from both unintended user actions and application failures.\n",
            "ID": "AVD-AWS-0090",
            "Layer": {},
            "Message": "Bucket does not have versioning enabled",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0090",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/Versioning.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0090"
            ],
            "Resolution": "Enable versioning to protect against accidental/malicious removal or modification",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "S3 Data should be versioned",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0091",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"data\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is public",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have access logs",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have versioning",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket        = \"${local.resource_prefix.value}-data\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name        = \"${local.resource_prefix.value}-data\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 21,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.data",
              "Service": "s3",
              "StartLine": 1
            },
            "Description": "\nS3 buckets should ignore public ACLs on buckets and any objects they contain. By ignoring rather than blocking, PUT calls with public ACLs will still be applied but the ACL will be ignored.\n",
            "ID": "AVD-AWS-0091",
            "Layer": {},
            "Message": "No public access block so not ignoring public acls",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0091",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-control-block-public-access.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0091"
            ],
            "Resolution": "Enable ignoring the application of public ACLs in PUT calls",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "S3 Access Block should Ignore Public Acl",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0091",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"financials\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 42,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 43,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have access logs",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 44,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have versioning",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 45,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket        = \"${local.resource_prefix.value}-financials\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 46,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  acl           = \"private\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 47,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 48,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 49,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name        = \"${local.resource_prefix.value}-financials\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 50,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 51,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 63,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.financials",
              "Service": "s3",
              "StartLine": 42
            },
            "Description": "\nS3 buckets should ignore public ACLs on buckets and any objects they contain. By ignoring rather than blocking, PUT calls with public ACLs will still be applied but the ACL will be ignored.\n",
            "ID": "AVD-AWS-0091",
            "Layer": {},
            "Message": "No public access block so not ignoring public acls",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0091",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-control-block-public-access.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0091"
            ],
            "Resolution": "Enable ignoring the application of public ACLs in PUT calls",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "S3 Access Block should Ignore Public Acl",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0091",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"operations\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 65,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 66,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have access logs",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 67,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket = \"${local.resource_prefix.value}-operations\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 68,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  acl    = \"private\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 69,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  versioning {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 70,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enabled = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 71,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 72,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 73,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 74,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 87,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.operations",
              "Service": "s3",
              "StartLine": 65
            },
            "Description": "\nS3 buckets should ignore public ACLs on buckets and any objects they contain. By ignoring rather than blocking, PUT calls with public ACLs will still be applied but the ACL will be ignored.\n",
            "ID": "AVD-AWS-0091",
            "Layer": {},
            "Message": "No public access block so not ignoring public acls",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0091",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-control-block-public-access.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0091"
            ],
            "Resolution": "Enable ignoring the application of public ACLs in PUT calls",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "S3 Access Block should Ignore Public Acl",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0091",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"data_science\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 89,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 90,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket = \"${local.resource_prefix.value}-data-science\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 91,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  acl    = \"private\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 92,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  versioning {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 93,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enabled = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 94,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 95,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  logging {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 96,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    target_bucket = \"${aws_s3_bucket.logs.id}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 97,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 98,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 111,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.data_science",
              "Service": "s3",
              "StartLine": 89
            },
            "Description": "\nS3 buckets should ignore public ACLs on buckets and any objects they contain. By ignoring rather than blocking, PUT calls with public ACLs will still be applied but the ACL will be ignored.\n",
            "ID": "AVD-AWS-0091",
            "Layer": {},
            "Message": "No public access block so not ignoring public acls",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0091",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-control-block-public-access.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0091"
            ],
            "Resolution": "Enable ignoring the application of public ACLs in PUT calls",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "S3 Access Block should Ignore Public Acl",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0091",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"logs\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 113,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket = \"${local.resource_prefix.value}-logs\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 114,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  acl    = \"log-delivery-write\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 115,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  versioning {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 116,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enabled = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 117,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 118,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  server_side_encryption_configuration {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 119,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    rule {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 120,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "      apply_server_side_encryption_by_default {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 121,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 122,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 141,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.logs",
              "Service": "s3",
              "StartLine": 113
            },
            "Description": "\nS3 buckets should ignore public ACLs on buckets and any objects they contain. By ignoring rather than blocking, PUT calls with public ACLs will still be applied but the ACL will be ignored.\n",
            "ID": "AVD-AWS-0091",
            "Layer": {},
            "Message": "No public access block so not ignoring public acls",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0091",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-control-block-public-access.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0091"
            ],
            "Resolution": "Enable ignoring the application of public ACLs in PUT calls",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "S3 Access Block should Ignore Public Acl",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0093",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"data\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is public",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have access logs",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have versioning",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket        = \"${local.resource_prefix.value}-data\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name        = \"${local.resource_prefix.value}-data\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 21,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.data",
              "Service": "s3",
              "StartLine": 1
            },
            "Description": "S3 buckets should restrict public policies for the bucket. By enabling, the restrict_public_buckets, only the bucket owner and AWS Services can access if it has a public policy.",
            "ID": "AVD-AWS-0093",
            "Layer": {},
            "Message": "No public access block so not restricting public buckets",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0093",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/dev-retired/access-control-block-public-access.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0093"
            ],
            "Resolution": "Limit the access to public buckets to only the owner or AWS Services (eg; CloudFront)",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "S3 Access block should restrict public bucket to limit access",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0093",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"financials\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 42,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 43,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have access logs",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 44,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have versioning",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 45,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket        = \"${local.resource_prefix.value}-financials\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 46,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  acl           = \"private\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 47,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 48,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 49,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name        = \"${local.resource_prefix.value}-financials\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 50,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 51,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 63,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.financials",
              "Service": "s3",
              "StartLine": 42
            },
            "Description": "S3 buckets should restrict public policies for the bucket. By enabling, the restrict_public_buckets, only the bucket owner and AWS Services can access if it has a public policy.",
            "ID": "AVD-AWS-0093",
            "Layer": {},
            "Message": "No public access block so not restricting public buckets",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0093",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/dev-retired/access-control-block-public-access.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0093"
            ],
            "Resolution": "Limit the access to public buckets to only the owner or AWS Services (eg; CloudFront)",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "S3 Access block should restrict public bucket to limit access",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0093",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"operations\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 65,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 66,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have access logs",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 67,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket = \"${local.resource_prefix.value}-operations\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 68,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  acl    = \"private\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 69,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  versioning {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 70,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enabled = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 71,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 72,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 73,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 74,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 87,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.operations",
              "Service": "s3",
              "StartLine": 65
            },
            "Description": "S3 buckets should restrict public policies for the bucket. By enabling, the restrict_public_buckets, only the bucket owner and AWS Services can access if it has a public policy.",
            "ID": "AVD-AWS-0093",
            "Layer": {},
            "Message": "No public access block so not restricting public buckets",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0093",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/dev-retired/access-control-block-public-access.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0093"
            ],
            "Resolution": "Limit the access to public buckets to only the owner or AWS Services (eg; CloudFront)",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "S3 Access block should restrict public bucket to limit access",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0093",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"data_science\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 89,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 90,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket = \"${local.resource_prefix.value}-data-science\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 91,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  acl    = \"private\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 92,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  versioning {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 93,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enabled = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 94,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 95,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  logging {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 96,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    target_bucket = \"${aws_s3_bucket.logs.id}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 97,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 98,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 111,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.data_science",
              "Service": "s3",
              "StartLine": 89
            },
            "Description": "S3 buckets should restrict public policies for the bucket. By enabling, the restrict_public_buckets, only the bucket owner and AWS Services can access if it has a public policy.",
            "ID": "AVD-AWS-0093",
            "Layer": {},
            "Message": "No public access block so not restricting public buckets",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0093",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/dev-retired/access-control-block-public-access.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0093"
            ],
            "Resolution": "Limit the access to public buckets to only the owner or AWS Services (eg; CloudFront)",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "S3 Access block should restrict public bucket to limit access",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0093",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"logs\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 113,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket = \"${local.resource_prefix.value}-logs\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 114,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  acl    = \"log-delivery-write\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 115,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  versioning {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 116,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enabled = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 117,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 118,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  server_side_encryption_configuration {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 119,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    rule {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 120,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "      apply_server_side_encryption_by_default {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 121,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 122,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 141,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.logs",
              "Service": "s3",
              "StartLine": 113
            },
            "Description": "S3 buckets should restrict public policies for the bucket. By enabling, the restrict_public_buckets, only the bucket owner and AWS Services can access if it has a public policy.",
            "ID": "AVD-AWS-0093",
            "Layer": {},
            "Message": "No public access block so not restricting public buckets",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0093",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/dev-retired/access-control-block-public-access.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0093"
            ],
            "Resolution": "Limit the access to public buckets to only the owner or AWS Services (eg; CloudFront)",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "S3 Access block should restrict public bucket to limit access",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0094",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"data\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is public",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have access logs",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have versioning",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket        = \"${local.resource_prefix.value}-data\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name        = \"${local.resource_prefix.value}-data\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 21,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.data",
              "Service": "s3",
              "StartLine": 1
            },
            "Description": "The \"block public access\" settings in S3 override individual policies that apply to a given bucket, meaning that all public access can be controlled in one central types for that bucket. It is therefore good practice to define these settings for each bucket in order to clearly define the public access that can be allowed for it.",
            "ID": "AVD-AWS-0094",
            "Layer": {},
            "Message": "Bucket does not have a corresponding public access block.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0094",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-control-block-public-access.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0094"
            ],
            "Resolution": "Define a aws_s3_bucket_public_access_block for the given bucket to control public access policies",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "S3 buckets should each define an aws_s3_bucket_public_access_block",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0094",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"financials\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 42,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 43,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have access logs",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 44,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have versioning",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 45,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket        = \"${local.resource_prefix.value}-financials\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 46,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  acl           = \"private\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 47,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 48,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 49,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name        = \"${local.resource_prefix.value}-financials\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 50,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 51,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 63,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.financials",
              "Service": "s3",
              "StartLine": 42
            },
            "Description": "The \"block public access\" settings in S3 override individual policies that apply to a given bucket, meaning that all public access can be controlled in one central types for that bucket. It is therefore good practice to define these settings for each bucket in order to clearly define the public access that can be allowed for it.",
            "ID": "AVD-AWS-0094",
            "Layer": {},
            "Message": "Bucket does not have a corresponding public access block.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0094",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-control-block-public-access.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0094"
            ],
            "Resolution": "Define a aws_s3_bucket_public_access_block for the given bucket to control public access policies",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "S3 buckets should each define an aws_s3_bucket_public_access_block",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0094",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"operations\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 65,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 66,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have access logs",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 67,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket = \"${local.resource_prefix.value}-operations\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 68,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  acl    = \"private\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 69,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  versioning {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 70,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enabled = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 71,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 72,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 73,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 74,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 87,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.operations",
              "Service": "s3",
              "StartLine": 65
            },
            "Description": "The \"block public access\" settings in S3 override individual policies that apply to a given bucket, meaning that all public access can be controlled in one central types for that bucket. It is therefore good practice to define these settings for each bucket in order to clearly define the public access that can be allowed for it.",
            "ID": "AVD-AWS-0094",
            "Layer": {},
            "Message": "Bucket does not have a corresponding public access block.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0094",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-control-block-public-access.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0094"
            ],
            "Resolution": "Define a aws_s3_bucket_public_access_block for the given bucket to control public access policies",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "S3 buckets should each define an aws_s3_bucket_public_access_block",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0094",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"data_science\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 89,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 90,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket = \"${local.resource_prefix.value}-data-science\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 91,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  acl    = \"private\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 92,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  versioning {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 93,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enabled = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 94,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 95,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  logging {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 96,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    target_bucket = \"${aws_s3_bucket.logs.id}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 97,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 98,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 111,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.data_science",
              "Service": "s3",
              "StartLine": 89
            },
            "Description": "The \"block public access\" settings in S3 override individual policies that apply to a given bucket, meaning that all public access can be controlled in one central types for that bucket. It is therefore good practice to define these settings for each bucket in order to clearly define the public access that can be allowed for it.",
            "ID": "AVD-AWS-0094",
            "Layer": {},
            "Message": "Bucket does not have a corresponding public access block.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0094",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-control-block-public-access.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0094"
            ],
            "Resolution": "Define a aws_s3_bucket_public_access_block for the given bucket to control public access policies",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "S3 buckets should each define an aws_s3_bucket_public_access_block",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0094",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"logs\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 113,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket = \"${local.resource_prefix.value}-logs\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 114,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  acl    = \"log-delivery-write\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 115,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  versioning {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 116,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enabled = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 117,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 118,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  server_side_encryption_configuration {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 119,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    rule {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 120,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "      apply_server_side_encryption_by_default {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 121,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 122,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 141,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.logs",
              "Service": "s3",
              "StartLine": 113
            },
            "Description": "The \"block public access\" settings in S3 override individual policies that apply to a given bucket, meaning that all public access can be controlled in one central types for that bucket. It is therefore good practice to define these settings for each bucket in order to clearly define the public access that can be allowed for it.",
            "ID": "AVD-AWS-0094",
            "Layer": {},
            "Message": "Bucket does not have a corresponding public access block.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0094",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-control-block-public-access.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0094"
            ],
            "Resolution": "Define a aws_s3_bucket_public_access_block for the given bucket to control public access policies",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "S3 buckets should each define an aws_s3_bucket_public_access_block",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0132",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"data\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is public",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have access logs",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have versioning",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket        = \"${local.resource_prefix.value}-data\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name        = \"${local.resource_prefix.value}-data\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 21,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.data",
              "Service": "s3",
              "StartLine": 1
            },
            "Description": "Encryption using AWS keys provides protection for your S3 buckets. To increase control of the encryption and manage factors like rotation use customer managed keys.",
            "ID": "AVD-AWS-0132",
            "Layer": {},
            "Message": "Bucket does not encrypt data with a customer managed key.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0132",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucket-encryption.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0132"
            ],
            "Resolution": "Enable encryption using customer managed keys",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "S3 encryption should use Customer Managed Keys",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0132",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"financials\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 42,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 43,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have access logs",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 44,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have versioning",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 45,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket        = \"${local.resource_prefix.value}-financials\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 46,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  acl           = \"private\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 47,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 48,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 49,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name        = \"${local.resource_prefix.value}-financials\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 50,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 51,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 63,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.financials",
              "Service": "s3",
              "StartLine": 42
            },
            "Description": "Encryption using AWS keys provides protection for your S3 buckets. To increase control of the encryption and manage factors like rotation use customer managed keys.",
            "ID": "AVD-AWS-0132",
            "Layer": {},
            "Message": "Bucket does not encrypt data with a customer managed key.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0132",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucket-encryption.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0132"
            ],
            "Resolution": "Enable encryption using customer managed keys",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "S3 encryption should use Customer Managed Keys",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0132",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"operations\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 65,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 66,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have access logs",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 67,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket = \"${local.resource_prefix.value}-operations\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 68,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  acl    = \"private\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 69,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  versioning {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 70,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enabled = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 71,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 72,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 73,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 74,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 87,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.operations",
              "Service": "s3",
              "StartLine": 65
            },
            "Description": "Encryption using AWS keys provides protection for your S3 buckets. To increase control of the encryption and manage factors like rotation use customer managed keys.",
            "ID": "AVD-AWS-0132",
            "Layer": {},
            "Message": "Bucket does not encrypt data with a customer managed key.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0132",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucket-encryption.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0132"
            ],
            "Resolution": "Enable encryption using customer managed keys",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "S3 encryption should use Customer Managed Keys",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0132",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"data_science\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 89,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 90,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket = \"${local.resource_prefix.value}-data-science\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 91,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  acl    = \"private\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 92,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  versioning {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 93,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enabled = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 94,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 95,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  logging {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 96,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    target_bucket = \"${aws_s3_bucket.logs.id}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 97,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 98,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 111,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.data_science",
              "Service": "s3",
              "StartLine": 89
            },
            "Description": "Encryption using AWS keys provides protection for your S3 buckets. To increase control of the encryption and manage factors like rotation use customer managed keys.",
            "ID": "AVD-AWS-0132",
            "Layer": {},
            "Message": "Bucket does not encrypt data with a customer managed key.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0132",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucket-encryption.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0132"
            ],
            "Resolution": "Enable encryption using customer managed keys",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "S3 encryption should use Customer Managed Keys",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0088",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"logs\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 113,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket = \"${local.resource_prefix.value}-logs\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 114,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  acl    = \"log-delivery-write\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 115,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  versioning {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 116,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enabled = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 117,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 118,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  server_side_encryption_configuration {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 119,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    rule {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 120,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "      apply_server_side_encryption_by_default {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 121,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 122,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 141,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.logs",
              "Service": "s3",
              "StartLine": 113
            },
            "Description": "S3 Buckets should be encrypted to protect the data that is stored within them if access is compromised.",
            "ID": "AVD-AWS-0088",
            "Layer": {},
            "Message": "Bucket encryption correctly configured",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0088",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucket-encryption.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0088"
            ],
            "Resolution": "Configure bucket encryption",
            "Severity": "HIGH",
            "Status": "PASS",
            "Title": "Unencrypted S3 bucket.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0089",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"logs\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 113,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket = \"${local.resource_prefix.value}-logs\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 114,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  acl    = \"log-delivery-write\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 115,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  versioning {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 116,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enabled = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 117,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 118,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  server_side_encryption_configuration {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 119,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    rule {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 120,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "      apply_server_side_encryption_by_default {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 121,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 122,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 141,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.logs",
              "Service": "s3",
              "StartLine": 113
            },
            "Description": "Buckets should have logging enabled so that access can be audited.",
            "ID": "AVD-AWS-0089",
            "Layer": {},
            "Message": "No issues found",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0089",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerLogs.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0089"
            ],
            "Resolution": "Add a logging block to the resource to enable access logging",
            "Severity": "MEDIUM",
            "Status": "PASS",
            "Title": "S3 Bucket does not have logging enabled.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0090",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"logs\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 113,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket = \"${local.resource_prefix.value}-logs\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 114,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  acl    = \"log-delivery-write\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 115,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  versioning {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 116,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enabled = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 117,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 118,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  server_side_encryption_configuration {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 119,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    rule {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 120,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "      apply_server_side_encryption_by_default {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 121,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 122,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 141,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.logs",
              "Service": "s3",
              "StartLine": 113
            },
            "Description": "\nVersioning in Amazon S3 is a means of keeping multiple variants of an object in the same bucket. \nYou can use the S3 Versioning feature to preserve, retrieve, and restore every version of every object stored in your buckets. \nWith versioning you can recover more easily from both unintended user actions and application failures.\n",
            "ID": "AVD-AWS-0090",
            "Layer": {},
            "Message": "No issues found",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0090",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/Versioning.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0090"
            ],
            "Resolution": "Enable versioning to protect against accidental/malicious removal or modification",
            "Severity": "MEDIUM",
            "Status": "PASS",
            "Title": "S3 Data should be versioned",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0092",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"data\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is public",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have access logs",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have versioning",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket        = \"${local.resource_prefix.value}-data\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name        = \"${local.resource_prefix.value}-data\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 21,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.data",
              "Service": "s3",
              "StartLine": 1
            },
            "Description": "\nBuckets should not have ACLs that allow public access\n",
            "ID": "AVD-AWS-0092",
            "Layer": {},
            "Message": "No issues found",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0092",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0092"
            ],
            "Resolution": "Don't use canned ACLs or switch to private acl",
            "Severity": "HIGH",
            "Status": "PASS",
            "Title": "S3 Buckets not publicly accessible through ACL.",
            "Type": "Terraform Security Check"
          }
        ],
        "Target": "terraform/aws/s3.tf",
        "Type": "terraform"
      },
      {
        "Class": "config",
        "Misconfigurations": [
          {
            "AVDID": "AVD-AWS-0176",
            "CauseMetadata": {
              "Code": {
                "Lines": null
              },
              "Provider": "AWS",
              "Service": "rds"
            },
            "Description": "Ensure IAM Database Authentication is enabled for RDS database instances to manage database access",
            "ID": "N/A",
            "Layer": {},
            "Message": "No issues found",
            "Namespace": "builtin.aws.rds.aws0176",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/n/a",
            "Query": "data.builtin.aws.rds.aws0176.deny",
            "References": [
              "https://docs.aws.amazon.com/neptune/latest/userguide/iam-auth.html",
              "https://avd.aquasec.com/misconfig/n/a"
            ],
            "Resolution": "Modify the PostgreSQL and MySQL type RDS instances to enable IAM database authentication.",
            "Severity": "MEDIUM",
            "Status": "PASS",
            "Title": "RDS IAM Database Authentication Disabled",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0177",
            "CauseMetadata": {
              "Code": {
                "Lines": null
              },
              "Provider": "AWS",
              "Service": "rds"
            },
            "Description": "Ensure deletion protection is enabled for RDS database instances.",
            "ID": "N/A",
            "Layer": {},
            "Message": "No issues found",
            "Namespace": "builtin.aws.rds.aws0177",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/n/a",
            "Query": "data.builtin.aws.rds.aws0177.deny",
            "References": [
              "https://aws.amazon.com/about-aws/whats-new/2018/09/amazon-rds-now-provides-database-deletion-protection/",
              "https://avd.aquasec.com/misconfig/n/a"
            ],
            "Resolution": "Modify the RDS instances to enable deletion protection.",
            "Severity": "MEDIUM",
            "Status": "PASS",
            "Title": "RDS Deletion Protection Disabled",
            "Type": "Terraform Security Check"
          }
        ],
        "Target": "terraform/azure",
        "Type": "terraform"
      },
      {
        "Class": "config",
        "Misconfigurations": [
          {
            "AVDID": "AVD-AZU-0040",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource azurerm_kubernetes_cluster \"k8s_cluster\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": true
                  },
                  {
                    "Annotation": "false",
                    "Content": "      enabled = false",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 16,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 34,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 35,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 16,
              "Provider": "Azure",
              "Resource": "azurerm_kubernetes_cluster.k8s_cluster",
              "Service": "container",
              "StartLine": 16
            },
            "Description": "Ensure AKS logging to Azure Monitoring is configured for containers to monitor the performance of workloads.",
            "ID": "AVD-AZU-0040",
            "Layer": {},
            "Message": "Cluster does not have logging enabled via OMS Agent.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0040",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/azure-monitor/insights/container-insights-onboard",
              "https://avd.aquasec.com/misconfig/avd-azu-0040"
            ],
            "Resolution": "Enable logging for AKS",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Ensure AKS logging to Azure Monitoring is Configured",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0041",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource azurerm_kubernetes_cluster \"k8s_cluster\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  dns_prefix          = \"terragoat-${var.environment}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location            = var.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                = \"terragoat-aks-${var.environment}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  identity {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    type = \"SystemAssigned\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  default_node_pool {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 35,
              "Provider": "Azure",
              "Resource": "azurerm_kubernetes_cluster.k8s_cluster",
              "Service": "container",
              "StartLine": 1
            },
            "Description": "The API server is the central way to interact with and manage a cluster. To improve cluster security and minimize attacks, the API server should only be accessible from a limited set of IP address ranges.",
            "ID": "AVD-AZU-0041",
            "Layer": {},
            "Message": "Cluster does not limit API access to specific IP addresses.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0041",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/aks/api-server-authorized-ip-ranges",
              "https://avd.aquasec.com/misconfig/avd-azu-0041"
            ],
            "Resolution": "Limit the access to the API server to a limited IP range",
            "Severity": "CRITICAL",
            "Status": "FAIL",
            "Title": "Ensure AKS has an API Server Authorized IP Ranges enabled",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0042",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource azurerm_kubernetes_cluster \"k8s_cluster\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": true
                  },
                  {
                    "Annotation": "false",
                    "Content": "    enabled = false",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 23,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 34,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 35,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 23,
              "Provider": "Azure",
              "Resource": "azurerm_kubernetes_cluster.k8s_cluster",
              "Service": "container",
              "StartLine": 23
            },
            "Description": "Using Kubernetes role-based access control (RBAC), you can grant users, groups, and service accounts access to only the resources they need.",
            "ID": "AVD-AZU-0042",
            "Layer": {},
            "Message": "Cluster has RBAC disabled",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0042",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/aks/concepts-identity",
              "https://avd.aquasec.com/misconfig/avd-azu-0042"
            ],
            "Resolution": "Enable RBAC",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Ensure RBAC is enabled on AKS clusters",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0043",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource azurerm_kubernetes_cluster \"k8s_cluster\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  dns_prefix          = \"terragoat-${var.environment}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location            = var.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                = \"terragoat-aks-${var.environment}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  identity {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    type = \"SystemAssigned\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  default_node_pool {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 35,
              "Provider": "Azure",
              "Resource": "azurerm_kubernetes_cluster.k8s_cluster",
              "Service": "container",
              "StartLine": 1
            },
            "Description": "The Kubernetes object type NetworkPolicy should be defined to have opportunity allow or block traffic to pods, as in a Kubernetes cluster configured with default settings, all pods can discover and communicate with each other without any restrictions.",
            "ID": "AVD-AZU-0043",
            "Layer": {},
            "Message": "Kubernetes cluster does not have a network policy set.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0043",
            "Query": "data..",
            "References": [
              "https://kubernetes.io/docs/concepts/services-networking/network-policies",
              "https://avd.aquasec.com/misconfig/avd-azu-0043"
            ],
            "Resolution": "Configure a network policy",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Ensure AKS cluster has Network Policy configured",
            "Type": "Terraform Security Check"
          }
        ],
        "Target": "terraform/azure/aks.tf",
        "Type": "terraform"
      },
      {
        "Class": "config",
        "Misconfigurations": [
          {
            "AVDID": "AVD-AZU-0001",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource azurerm_app_service \"app-service1\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 22,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  app_service_plan_id = azurerm_app_service_plan.example.id",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 23,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location            = var.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 24,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                = \"terragoat-app-service-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 25,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 26,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  https_only          = false",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 27,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  site_config {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 28,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    min_tls_version = \"1.1\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 29,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 30,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 31,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 41,
              "Provider": "Azure",
              "Resource": "azurerm_app_service.app-service1",
              "Service": "appservice",
              "StartLine": 22
            },
            "Description": "The TLS mutual authentication technique in enterprise environments ensures the authenticity of clients to the server. If incoming client certificates are enabled only an authenticated client with valid certificates can access the app.",
            "ID": "AVD-AZU-0001",
            "Layer": {},
            "Message": "App service does not have client certificates enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0001",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0001"
            ],
            "Resolution": "Enable incoming certificates for clients",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Web App accepts incoming client certificate",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0001",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource azurerm_app_service \"app-service2\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 43,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  app_service_plan_id = azurerm_app_service_plan.example.id",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 44,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location            = var.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 45,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                = \"terragoat-app-service-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 46,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 47,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  https_only          = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 48,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 49,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  auth_settings {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 50,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enabled = false",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 51,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 52,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 63,
              "Provider": "Azure",
              "Resource": "azurerm_app_service.app-service2",
              "Service": "appservice",
              "StartLine": 43
            },
            "Description": "The TLS mutual authentication technique in enterprise environments ensures the authenticity of clients to the server. If incoming client certificates are enabled only an authenticated client with valid certificates can access the app.",
            "ID": "AVD-AZU-0001",
            "Layer": {},
            "Message": "App service does not have client certificates enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0001",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0001"
            ],
            "Resolution": "Enable incoming certificates for clients",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Web App accepts incoming client certificate",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0002",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource azurerm_app_service \"app-service1\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 22,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  app_service_plan_id = azurerm_app_service_plan.example.id",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 23,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location            = var.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 24,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                = \"terragoat-app-service-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 25,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 26,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  https_only          = false",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 27,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  site_config {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 28,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    min_tls_version = \"1.1\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 29,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 30,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 31,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 41,
              "Provider": "Azure",
              "Resource": "azurerm_app_service.app-service1",
              "Service": "appservice",
              "StartLine": 22
            },
            "Description": "Registering the identity used by an App with AD allows it to interact with other services without using username and password",
            "ID": "AVD-AZU-0002",
            "Layer": {},
            "Message": "App service does not have an identity type.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0002",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0002"
            ],
            "Resolution": "Register the app identity with AD",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Web App has registration with AD enabled",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0002",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource azurerm_app_service \"app-service2\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 43,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  app_service_plan_id = azurerm_app_service_plan.example.id",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 44,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location            = var.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 45,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                = \"terragoat-app-service-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 46,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 47,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  https_only          = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 48,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 49,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  auth_settings {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 50,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enabled = false",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 51,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 52,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 63,
              "Provider": "Azure",
              "Resource": "azurerm_app_service.app-service2",
              "Service": "appservice",
              "StartLine": 43
            },
            "Description": "Registering the identity used by an App with AD allows it to interact with other services without using username and password",
            "ID": "AVD-AZU-0002",
            "Layer": {},
            "Message": "App service does not have an identity type.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0002",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0002"
            ],
            "Resolution": "Register the app identity with AD",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Web App has registration with AD enabled",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0003",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource azurerm_app_service \"app-service1\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 22,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  app_service_plan_id = azurerm_app_service_plan.example.id",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 23,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location            = var.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 24,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                = \"terragoat-app-service-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 25,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 26,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  https_only          = false",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 27,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  site_config {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 28,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    min_tls_version = \"1.1\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 29,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 30,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 31,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 41,
              "Provider": "Azure",
              "Resource": "azurerm_app_service.app-service1",
              "Service": "appservice",
              "StartLine": 22
            },
            "Description": "Enabling authentication ensures that all communications in the application are authenticated. The auth_settings block needs to be filled out with the appropriate auth backend settings",
            "ID": "AVD-AZU-0003",
            "Layer": {},
            "Message": "App service does not have authentication enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0003",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0003"
            ],
            "Resolution": "Enable authentication to prevent anonymous request being accepted",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "App Service authentication is activated",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0003",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource azurerm_app_service \"app-service2\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 43,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 44,
                    "Truncated": true
                  },
                  {
                    "Annotation": "false",
                    "Content": "    enabled = false",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 51,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 62,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 63,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 51,
              "Provider": "Azure",
              "Resource": "azurerm_app_service.app-service2",
              "Service": "appservice",
              "StartLine": 51
            },
            "Description": "Enabling authentication ensures that all communications in the application are authenticated. The auth_settings block needs to be filled out with the appropriate auth backend settings",
            "ID": "AVD-AZU-0003",
            "Layer": {},
            "Message": "App service does not have authentication enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0003",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0003"
            ],
            "Resolution": "Enable authentication to prevent anonymous request being accepted",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "App Service authentication is activated",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0005",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource azurerm_app_service \"app-service1\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 22,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 23,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "  site_config {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 28,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    min_tls_version = \"1.1\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 29,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 30,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 40,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 41,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 30,
              "Provider": "Azure",
              "Resource": "azurerm_app_service.app-service1",
              "Service": "appservice",
              "StartLine": 28
            },
            "Description": "Use the latest version of HTTP to ensure you are benefiting from security fixes",
            "ID": "AVD-AZU-0005",
            "Layer": {},
            "Message": "App service does not have HTTP/2 enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0005",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0005"
            ],
            "Resolution": "Use the latest version of HTTP",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Web App uses the latest HTTP version",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0005",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource azurerm_app_service \"app-service2\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 43,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  app_service_plan_id = azurerm_app_service_plan.example.id",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 44,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location            = var.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 45,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                = \"terragoat-app-service-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 46,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 47,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  https_only          = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 48,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 49,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  auth_settings {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 50,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enabled = false",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 51,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 52,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 63,
              "Provider": "Azure",
              "Resource": "azurerm_app_service.app-service2",
              "Service": "appservice",
              "StartLine": 43
            },
            "Description": "Use the latest version of HTTP to ensure you are benefiting from security fixes",
            "ID": "AVD-AZU-0005",
            "Layer": {},
            "Message": "App service does not have HTTP/2 enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0005",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0005"
            ],
            "Resolution": "Use the latest version of HTTP",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Web App uses the latest HTTP version",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0006",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource azurerm_app_service \"app-service1\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 22,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 23,
                    "Truncated": true
                  },
                  {
                    "Annotation": "\"1.1\"",
                    "Content": "    min_tls_version = \"1.1\"",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 29,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 40,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 41,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 29,
              "Provider": "Azure",
              "Resource": "azurerm_app_service.app-service1",
              "Service": "appservice",
              "StartLine": 29
            },
            "Description": "Use a more recent TLS/SSL policy for the App Service",
            "ID": "AVD-AZU-0006",
            "Layer": {},
            "Message": "App service does not require a secure TLS version.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0006",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0006"
            ],
            "Resolution": "The TLS version being outdated and has known vulnerabilities",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Web App uses latest TLS version",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0006",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource azurerm_app_service \"app-service2\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 43,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  app_service_plan_id = azurerm_app_service_plan.example.id",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 44,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location            = var.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 45,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                = \"terragoat-app-service-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 46,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 47,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  https_only          = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 48,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 49,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  auth_settings {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 50,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enabled = false",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 51,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 52,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 63,
              "Provider": "Azure",
              "Resource": "azurerm_app_service.app-service2",
              "Service": "appservice",
              "StartLine": 43
            },
            "Description": "Use a more recent TLS/SSL policy for the App Service",
            "ID": "AVD-AZU-0006",
            "Layer": {},
            "Message": "No issues found",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0006",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0006"
            ],
            "Resolution": "The TLS version being outdated and has known vulnerabilities",
            "Severity": "HIGH",
            "Status": "PASS",
            "Title": "Web App uses latest TLS version",
            "Type": "Terraform Security Check"
          }
        ],
        "Target": "terraform/azure/app_service.tf",
        "Type": "terraform"
      },
      {
        "Class": "config",
        "Misconfigurations": [
          {
            "AVDID": "AVD-AZU-0039",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource azurerm_linux_virtual_machine \"linux_machine\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  },
                  {
                    "Annotation": "false",
                    "Content": "  disable_password_authentication = false",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 17,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 41,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 42,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 17,
              "Provider": "Azure",
              "Resource": "azurerm_linux_virtual_machine.linux_machine",
              "Service": "compute",
              "StartLine": 17
            },
            "Description": "Access to virtual machines should be authenticated using SSH keys. Removing the option of password authentication enforces more secure methods while removing the risks inherent with passwords.",
            "ID": "AVD-AZU-0039",
            "Layer": {},
            "Message": "Linux virtual machine allows password authentication.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0039",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0039"
            ],
            "Resolution": "Use ssh authentication for virtual machines",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Password authentication should be disabled on Azure virtual machines",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0037",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource azurerm_windows_virtual_machine \"windows_machine\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 44,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  admin_password        = random_string.password.result",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 45,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  admin_username        = \"tg-${var.environment}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 46,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location              = var.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 47,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                  = \"tg-win\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 48,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  network_interface_ids = [azurerm_network_interface.ni_win.id]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 49,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name   = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 50,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  size                  = \"Standard_F2\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 51,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  os_disk {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 52,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 53,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 77,
              "Provider": "Azure",
              "Resource": "azurerm_windows_virtual_machine.windows_machine",
              "Service": "compute",
              "StartLine": 44
            },
            "Description": "When creating Azure Virtual Machines, custom_data is used to pass start up information into the EC2 instance. This custom_dat must not contain access key credentials.",
            "ID": "AVD-AZU-0037",
            "Layer": {},
            "Message": "No issues found",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0037",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0037"
            ],
            "Resolution": "Don't use sensitive credentials in the VM custom_data",
            "Severity": "MEDIUM",
            "Status": "PASS",
            "Title": "Ensure that no sensitive credentials are exposed in VM custom_data",
            "Type": "Terraform Security Check"
          }
        ],
        "Target": "terraform/azure/instance.tf",
        "Type": "terraform"
      },
      {
        "Class": "config",
        "Misconfigurations": [
          {
            "AVDID": "AVD-AZU-0013",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_key_vault\" \"example\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                = \"terragoat-key-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location            = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tenant_id           = data.azurerm_client_config.current.tenant_id",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  sku_name            = \"premium\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  access_policy {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    tenant_id = data.azurerm_client_config.current.tenant_id",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    object_id = data.azurerm_client_config.current.object_id",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 31,
              "Provider": "Azure",
              "Resource": "azurerm_key_vault.example",
              "Service": "keyvault",
              "StartLine": 1
            },
            "Description": "Network ACLs allow you to reduce your exposure to risk by limiting what can access your key vault. \n\nThe default action of the Network ACL should be set to deny for when IPs are not matched. Azure services can be allowed to bypass.",
            "ID": "AVD-AZU-0013",
            "Layer": {},
            "Message": "Vault network ACL does not block access by default.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0013",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/key-vault/general/network-security",
              "https://avd.aquasec.com/misconfig/avd-azu-0013"
            ],
            "Resolution": "Set a network ACL for the key vault",
            "Severity": "CRITICAL",
            "Status": "FAIL",
            "Title": "Key vault should have the network acl block specified",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0014",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_key_vault_key\" \"generated\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 33,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name         = \"terragoat-generated-certificate-${var.environment}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 34,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  key_vault_id = azurerm_key_vault.example.id",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 35,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  key_type     = \"RSA\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 36,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  key_size     = 2048",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 37,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  key_opts = [",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 38,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"decrypt\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 39,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"encrypt\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 40,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"sign\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 41,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 42,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 56,
              "Provider": "Azure",
              "Resource": "azurerm_key_vault_key.generated",
              "Service": "keyvault",
              "StartLine": 33
            },
            "Description": "Expiration Date is an optional Key Vault Key behavior and is not set by default.\n\nSet when the resource will be become inactive.",
            "ID": "AVD-AZU-0014",
            "Layer": {},
            "Message": "Key should have an expiry date specified.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0014",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/powershell/module/az.keyvault/update-azkeyvaultkey?view=azps-5.8.0#example-1--modify-a-key-to-enable-it--and-set-the-expiration-date-and-tags",
              "https://avd.aquasec.com/misconfig/avd-azu-0014"
            ],
            "Resolution": "Set an expiration date on the vault key",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Ensure that the expiration date is set on all keys",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0015",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_key_vault_secret\" \"secret\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 58,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  key_vault_id = azurerm_key_vault.example.id",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 59,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name         = \"terragoat-secret-${var.environment}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 60,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  value        = random_string.password.result",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 61,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 62,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"f8ff847bb69370bbe03b3d2b70db586ff6c867fc\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 63,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_file             = \"terraform/azure/key_vault.tf\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 64,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_last_modified_at = \"2020-06-19 21:16:08\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 65,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_last_modified_by = \"Adin.Ermie@outlook.com\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 66,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 67,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 72,
              "Provider": "Azure",
              "Resource": "azurerm_key_vault_secret.secret",
              "Service": "keyvault",
              "StartLine": 58
            },
            "Description": "Content Type is an optional Key Vault Secret behavior and is not enabled by default.\n\nClients may specify the content type of a secret to assist in interpreting the secret data when it's retrieved. The maximum length of this field is 255 characters. There are no pre-defined values. The suggested usage is as a hint for interpreting the secret data.",
            "ID": "AVD-AZU-0015",
            "Layer": {},
            "Message": "Secret does not have a content-type specified.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0015",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/key-vault/secrets/about-secrets",
              "https://avd.aquasec.com/misconfig/avd-azu-0015"
            ],
            "Resolution": "Provide content type for secrets to aid interpretation on retrieval",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Key vault Secret should have a content type set",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0016",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_key_vault\" \"example\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                = \"terragoat-key-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location            = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tenant_id           = data.azurerm_client_config.current.tenant_id",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  sku_name            = \"premium\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  access_policy {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    tenant_id = data.azurerm_client_config.current.tenant_id",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    object_id = data.azurerm_client_config.current.object_id",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 31,
              "Provider": "Azure",
              "Resource": "azurerm_key_vault.example",
              "Service": "keyvault",
              "StartLine": 1
            },
            "Description": "Purge protection is an optional Key Vault behavior and is not enabled by default.\n\nPurge protection can only be enabled once soft-delete is enabled. It can be turned on via CLI or PowerShell.",
            "ID": "AVD-AZU-0016",
            "Layer": {},
            "Message": "Vault does not have purge protection enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0016",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/key-vault/general/soft-delete-overview#purge-protection",
              "https://avd.aquasec.com/misconfig/avd-azu-0016"
            ],
            "Resolution": "Enable purge protection for key vaults",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Key vault should have purge protection enabled",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0017",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_key_vault_secret\" \"secret\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 58,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  key_vault_id = azurerm_key_vault.example.id",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 59,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name         = \"terragoat-secret-${var.environment}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 60,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  value        = random_string.password.result",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 61,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 62,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"f8ff847bb69370bbe03b3d2b70db586ff6c867fc\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 63,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_file             = \"terraform/azure/key_vault.tf\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 64,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_last_modified_at = \"2020-06-19 21:16:08\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 65,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_last_modified_by = \"Adin.Ermie@outlook.com\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 66,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 67,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 72,
              "Provider": "Azure",
              "Resource": "azurerm_key_vault_secret.secret",
              "Service": "keyvault",
              "StartLine": 58
            },
            "Description": "Expiration Date is an optional Key Vault Secret behavior and is not set by default.\n\nSet when the resource will be become inactive.",
            "ID": "AVD-AZU-0017",
            "Layer": {},
            "Message": "Secret should have an expiry date specified.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0017",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/key-vault/secrets/about-secrets",
              "https://avd.aquasec.com/misconfig/avd-azu-0017"
            ],
            "Resolution": "Set an expiry for secrets",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Key Vault Secret should have an expiration date set",
            "Type": "Terraform Security Check"
          }
        ],
        "Target": "terraform/azure/key_vault.tf",
        "Type": "terraform"
      },
      {
        "Class": "config",
        "Misconfigurations": [
          {
            "AVDID": "AVD-AZU-0031",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource azurerm_monitor_log_profile \"logging_profile\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_account_id = azurerm_storage_account.example.id",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  categories         = [\"Action\"]",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  locations          = [var.location]",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name               = \"terragoat-${var.environment}\"",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  retention_policy {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enabled = true",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "30",
                    "Content": "    days    = 30",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 8,
              "Provider": "Azure",
              "Resource": "azurerm_monitor_log_profile.logging_profile",
              "Service": "monitor",
              "StartLine": 8
            },
            "Description": "The average time to detect a breach is up to 210 days, to ensure that all the information required for an effective investigation is available, the retention period should allow for delayed starts to investigating.",
            "ID": "AVD-AZU-0031",
            "Layer": {},
            "Message": "Profile has a log retention policy of less than 1 year.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0031",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/azure-monitor/essentials/platform-logs-overview",
              "https://avd.aquasec.com/misconfig/avd-azu-0031"
            ],
            "Resolution": "Set a retention period that will allow for delayed investigation",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Ensure the activity retention log is set to at least a year",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0032",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource azurerm_monitor_log_profile \"logging_profile\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_account_id = azurerm_storage_account.example.id",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  categories         = [\"Action\"]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  locations          = [var.location]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name               = \"terragoat-${var.environment}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  retention_policy {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enabled = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    days    = 30",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 10,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 10,
              "Provider": "Azure",
              "Resource": "azurerm_monitor_log_profile.logging_profile",
              "Service": "monitor",
              "StartLine": 1
            },
            "Description": "Log profiles should capture all regions to ensure that all events are logged",
            "ID": "AVD-AZU-0032",
            "Layer": {},
            "Message": "Log profile does not log to all regions (68 regions missing).",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0032",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/cli/azure/monitor/log-profiles?view=azure-cli-latest#az_monitor_log_profiles_create-required-parameters",
              "https://avd.aquasec.com/misconfig/avd-azu-0032"
            ],
            "Resolution": "Enable capture for all locations",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Ensure activitys are captured for all locations",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0033",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource azurerm_monitor_log_profile \"logging_profile\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_account_id = azurerm_storage_account.example.id",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  categories         = [\"Action\"]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  locations          = [var.location]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name               = \"terragoat-${var.environment}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  retention_policy {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enabled = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    days    = 30",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 10,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 10,
              "Provider": "Azure",
              "Resource": "azurerm_monitor_log_profile.logging_profile",
              "Service": "monitor",
              "StartLine": 1
            },
            "Description": "Log profiles should capture all categories to ensure that all events are logged",
            "ID": "AVD-AZU-0033",
            "Layer": {},
            "Message": "Log profile does not require the 'Delete' category.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0033",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/azure-monitor/essentials/activity-log",
              "https://docs.microsoft.com/en-us/cli/azure/monitor/log-profiles?view=azure-cli-latest#az_monitor_log_profiles_create-required-parameters",
              "https://avd.aquasec.com/misconfig/avd-azu-0033"
            ],
            "Resolution": "Configure log profile to capture all activities",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Ensure log profile captures all activities",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0033",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource azurerm_monitor_log_profile \"logging_profile\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_account_id = azurerm_storage_account.example.id",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  categories         = [\"Action\"]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  locations          = [var.location]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name               = \"terragoat-${var.environment}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  retention_policy {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enabled = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    days    = 30",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 10,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 10,
              "Provider": "Azure",
              "Resource": "azurerm_monitor_log_profile.logging_profile",
              "Service": "monitor",
              "StartLine": 1
            },
            "Description": "Log profiles should capture all categories to ensure that all events are logged",
            "ID": "AVD-AZU-0033",
            "Layer": {},
            "Message": "Log profile does not require the 'Write' category.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0033",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/azure-monitor/essentials/activity-log",
              "https://docs.microsoft.com/en-us/cli/azure/monitor/log-profiles?view=azure-cli-latest#az_monitor_log_profiles_create-required-parameters",
              "https://avd.aquasec.com/misconfig/avd-azu-0033"
            ],
            "Resolution": "Configure log profile to capture all activities",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Ensure log profile captures all activities",
            "Type": "Terraform Security Check"
          }
        ],
        "Target": "terraform/azure/logging.tf",
        "Type": "terraform"
      },
      {
        "Class": "config",
        "Misconfigurations": [
          {
            "AVDID": "AVD-AZU-0011",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_storage_account\" \"security_storage_account\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                      = \"securitystorageaccount-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name       = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location                  = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  account_tier              = \"Standard\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  account_replication_type  = \"LRS\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  enable_https_traffic_only = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"a1d1c1ce31a1bde6dafa188846d90eca82abe5fd\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 18,
              "Provider": "Azure",
              "Resource": "azurerm_storage_account.security_storage_account",
              "Service": "storage",
              "StartLine": 1
            },
            "Description": "Azure Storage currently supports three versions of the TLS protocol: 1.0, 1.1, and 1.2. \n\nAzure Storage uses TLS 1.2 on public HTTPS endpoints, but TLS 1.0 and TLS 1.1 are still supported for backward compatibility.\n\nThis check will warn if the minimum TLS is not set to TLS1_2.",
            "ID": "AVD-AZU-0011",
            "Layer": {},
            "Message": "Storage account uses an insecure TLS version.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0011",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/storage/common/transport-layer-security-configure-minimum-version",
              "https://avd.aquasec.com/misconfig/avd-azu-0011"
            ],
            "Resolution": "Use a more recent TLS/SSL policy for the load balancer",
            "Severity": "CRITICAL",
            "Status": "FAIL",
            "Title": "The minimum TLS version for Storage Accounts should be TLS1_2",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0018",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server_security_alert_policy\" \"alertpolicy5\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 209,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name        = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 210,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  server_name                = azurerm_mssql_server.mssql5.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 211,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  state                      = \"Enabled\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 212,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_endpoint           = azurerm_storage_account.security_storage_account.primary_blob_endpoint",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 213,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_account_access_key = azurerm_storage_account.security_storage_account.primary_access_key",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 214,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  disabled_alerts = [",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 215,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Sql_Injection\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 216,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Data_Exfiltration\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 217,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 218,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 220,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server_security_alert_policy.alertpolicy5",
              "Service": "database",
              "StartLine": 209
            },
            "Description": "SQL Server sends alerts for threat detection via email, if there are no email addresses set then mitigation will be delayed.",
            "ID": "AVD-AZU-0018",
            "Layer": {},
            "Message": "Security alert policy does not include any email addresses for notification.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0018",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0018"
            ],
            "Resolution": "Provide at least one email address for threat alerts",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "At least one email address is set for threat alerts",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0022",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server\" \"mssql1\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 20,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                         = \"terragoat-mssql1-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 21,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name          = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 22,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location                     = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 23,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  version                      = \"12.0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 24,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login          = \"missadministrator\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 25,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login_password = \"AdminPassword123!\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 26,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 27,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"c6f8caa51942284d02465518822685897ad90141\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 28,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 29,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 37,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server.mssql1",
              "Service": "database",
              "StartLine": 20
            },
            "Description": "Database resources should not publicly available. You should limit all access to the minimum that is required for your application to function.",
            "ID": "AVD-AZU-0022",
            "Layer": {},
            "Message": "Database server has public network access enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0022",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0022"
            ],
            "Resolution": "Disable public access to database when not required",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Ensure databases are not publicly accessible",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0022",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server\" \"mssql2\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 39,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                         = \"mssql2-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 40,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name          = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 41,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location                     = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 42,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  version                      = \"12.0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 43,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login          = \"missadministrator\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 44,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login_password = \"AdminPassword123!\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 45,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 46,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"c6f8caa51942284d02465518822685897ad90141\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 47,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 48,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 56,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server.mssql2",
              "Service": "database",
              "StartLine": 39
            },
            "Description": "Database resources should not publicly available. You should limit all access to the minimum that is required for your application to function.",
            "ID": "AVD-AZU-0022",
            "Layer": {},
            "Message": "Database server has public network access enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0022",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0022"
            ],
            "Resolution": "Disable public access to database when not required",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Ensure databases are not publicly accessible",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0022",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server\" \"mssql3\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 58,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                         = \"mssql3-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 59,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name          = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 60,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location                     = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 61,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  version                      = \"12.0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 62,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login          = \"missadministrator\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 63,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login_password = \"AdminPassword123!\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 64,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 65,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"c6f8caa51942284d02465518822685897ad90141\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 66,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 67,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 75,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server.mssql3",
              "Service": "database",
              "StartLine": 58
            },
            "Description": "Database resources should not publicly available. You should limit all access to the minimum that is required for your application to function.",
            "ID": "AVD-AZU-0022",
            "Layer": {},
            "Message": "Database server has public network access enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0022",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0022"
            ],
            "Resolution": "Disable public access to database when not required",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Ensure databases are not publicly accessible",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0022",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server\" \"mssql4\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 77,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                         = \"mssql4-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 78,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name          = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 79,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location                     = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 80,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  version                      = \"12.0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 81,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login          = \"missadministrator\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 82,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login_password = \"AdminPassword123!\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 83,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 84,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"c6f8caa51942284d02465518822685897ad90141\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 85,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 86,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 94,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server.mssql4",
              "Service": "database",
              "StartLine": 77
            },
            "Description": "Database resources should not publicly available. You should limit all access to the minimum that is required for your application to function.",
            "ID": "AVD-AZU-0022",
            "Layer": {},
            "Message": "Database server has public network access enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0022",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0022"
            ],
            "Resolution": "Disable public access to database when not required",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Ensure databases are not publicly accessible",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0022",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server\" \"mssql5\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 96,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                         = \"mssql5-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 97,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name          = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 98,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location                     = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 99,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  version                      = \"12.0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 100,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login          = \"missadministrator\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 101,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login_password = \"AdminPassword123!\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 102,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 103,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"c6f8caa51942284d02465518822685897ad90141\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 104,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 105,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 113,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server.mssql5",
              "Service": "database",
              "StartLine": 96
            },
            "Description": "Database resources should not publicly available. You should limit all access to the minimum that is required for your application to function.",
            "ID": "AVD-AZU-0022",
            "Layer": {},
            "Message": "Database server has public network access enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0022",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0022"
            ],
            "Resolution": "Disable public access to database when not required",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Ensure databases are not publicly accessible",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0022",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server\" \"mssql6\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 115,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                         = \"mssql6-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 116,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name          = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 117,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location                     = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 118,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  version                      = \"12.0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 119,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login          = \"missadministrator\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 120,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login_password = \"AdminPassword123!\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 121,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 122,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"c6f8caa51942284d02465518822685897ad90141\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 123,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 124,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 132,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server.mssql6",
              "Service": "database",
              "StartLine": 115
            },
            "Description": "Database resources should not publicly available. You should limit all access to the minimum that is required for your application to function.",
            "ID": "AVD-AZU-0022",
            "Layer": {},
            "Message": "Database server has public network access enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0022",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0022"
            ],
            "Resolution": "Disable public access to database when not required",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Ensure databases are not publicly accessible",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0022",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server\" \"mssql7\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 134,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                         = \"mssql7-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 135,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name          = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 136,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location                     = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 137,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  version                      = \"12.0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 138,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login          = \"missadministrator\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 139,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login_password = \"AdminPassword123!\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 140,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 141,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"c6f8caa51942284d02465518822685897ad90141\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 142,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 143,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 151,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server.mssql7",
              "Service": "database",
              "StartLine": 134
            },
            "Description": "Database resources should not publicly available. You should limit all access to the minimum that is required for your application to function.",
            "ID": "AVD-AZU-0022",
            "Layer": {},
            "Message": "Database server has public network access enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0022",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0022"
            ],
            "Resolution": "Disable public access to database when not required",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Ensure databases are not publicly accessible",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0023",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server_security_alert_policy\" \"alertpolicy1\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 153,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name        = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 154,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  server_name                = azurerm_mssql_server.mssql1.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 155,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  state                      = \"Enabled\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 156,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_endpoint           = azurerm_storage_account.security_storage_account.primary_blob_endpoint",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 157,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_account_access_key = azurerm_storage_account.security_storage_account.primary_access_key",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 158,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  disabled_alerts = [",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 159,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Sql_Injection\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 160,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Data_Exfiltration\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 161,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 162,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 165,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server_security_alert_policy.alertpolicy1",
              "Service": "database",
              "StartLine": 153
            },
            "Description": "Subscription owners should be notified when there are security alerts. By ensuring the administrators of the account have been notified they can quickly assist in any required remediation",
            "ID": "AVD-AZU-0023",
            "Layer": {},
            "Message": "Security alert policy does not alert account admins.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0023",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0023"
            ],
            "Resolution": "Enable email to subscription owners",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Security threat alerts go to subcription owners and co-administrators",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0023",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server_security_alert_policy\" \"alertpolicy2\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 167,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name        = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 168,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  server_name                = azurerm_mssql_server.mssql2.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 169,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  state                      = \"Enabled\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 170,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_endpoint           = azurerm_storage_account.security_storage_account.primary_blob_endpoint",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 171,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_account_access_key = azurerm_storage_account.security_storage_account.primary_access_key",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 172,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  disabled_alerts = [",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 173,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Sql_Injection\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 174,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Data_Exfiltration\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 175,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 176,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 179,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server_security_alert_policy.alertpolicy2",
              "Service": "database",
              "StartLine": 167
            },
            "Description": "Subscription owners should be notified when there are security alerts. By ensuring the administrators of the account have been notified they can quickly assist in any required remediation",
            "ID": "AVD-AZU-0023",
            "Layer": {},
            "Message": "Security alert policy does not alert account admins.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0023",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0023"
            ],
            "Resolution": "Enable email to subscription owners",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Security threat alerts go to subcription owners and co-administrators",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0023",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server_security_alert_policy\" \"alertpolicy3\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 181,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name        = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 182,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  server_name                = azurerm_mssql_server.mssql3.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 183,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  state                      = \"Enabled\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 184,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_endpoint           = azurerm_storage_account.security_storage_account.primary_blob_endpoint",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 185,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_account_access_key = azurerm_storage_account.security_storage_account.primary_access_key",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 186,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  disabled_alerts = [",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 187,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Sql_Injection\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 188,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Data_Exfiltration\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 189,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 190,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 193,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server_security_alert_policy.alertpolicy3",
              "Service": "database",
              "StartLine": 181
            },
            "Description": "Subscription owners should be notified when there are security alerts. By ensuring the administrators of the account have been notified they can quickly assist in any required remediation",
            "ID": "AVD-AZU-0023",
            "Layer": {},
            "Message": "Security alert policy does not alert account admins.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0023",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0023"
            ],
            "Resolution": "Enable email to subscription owners",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Security threat alerts go to subcription owners and co-administrators",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0023",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server_security_alert_policy\" \"alertpolicy4\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 195,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name        = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 196,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  server_name                = azurerm_mssql_server.mssql4.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 197,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  state                      = \"Enabled\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 198,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_endpoint           = azurerm_storage_account.security_storage_account.primary_blob_endpoint",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 199,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_account_access_key = azurerm_storage_account.security_storage_account.primary_access_key",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 200,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  disabled_alerts = [",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 201,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Sql_Injection\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 202,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Data_Exfiltration\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 203,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 204,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 207,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server_security_alert_policy.alertpolicy4",
              "Service": "database",
              "StartLine": 195
            },
            "Description": "Subscription owners should be notified when there are security alerts. By ensuring the administrators of the account have been notified they can quickly assist in any required remediation",
            "ID": "AVD-AZU-0023",
            "Layer": {},
            "Message": "Security alert policy does not alert account admins.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0023",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0023"
            ],
            "Resolution": "Enable email to subscription owners",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Security threat alerts go to subcription owners and co-administrators",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0023",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server_security_alert_policy\" \"alertpolicy5\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 209,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name        = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 210,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  server_name                = azurerm_mssql_server.mssql5.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 211,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  state                      = \"Enabled\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 212,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_endpoint           = azurerm_storage_account.security_storage_account.primary_blob_endpoint",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 213,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_account_access_key = azurerm_storage_account.security_storage_account.primary_access_key",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 214,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  disabled_alerts = [",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 215,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Sql_Injection\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 216,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Data_Exfiltration\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 217,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 218,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 220,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server_security_alert_policy.alertpolicy5",
              "Service": "database",
              "StartLine": 209
            },
            "Description": "Subscription owners should be notified when there are security alerts. By ensuring the administrators of the account have been notified they can quickly assist in any required remediation",
            "ID": "AVD-AZU-0023",
            "Layer": {},
            "Message": "Security alert policy does not alert account admins.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0023",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0023"
            ],
            "Resolution": "Enable email to subscription owners",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Security threat alerts go to subcription owners and co-administrators",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0023",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server_security_alert_policy\" \"alertpolicy6\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 222,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name        = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 223,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  server_name                = azurerm_mssql_server.mssql6.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 224,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  state                      = \"Enabled\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 225,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_endpoint           = azurerm_storage_account.security_storage_account.primary_blob_endpoint",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 226,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_account_access_key = azurerm_storage_account.security_storage_account.primary_access_key",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 227,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  disabled_alerts = [",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 228,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Sql_Injection\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 229,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Data_Exfiltration\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 230,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 231,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 234,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server_security_alert_policy.alertpolicy6",
              "Service": "database",
              "StartLine": 222
            },
            "Description": "Subscription owners should be notified when there are security alerts. By ensuring the administrators of the account have been notified they can quickly assist in any required remediation",
            "ID": "AVD-AZU-0023",
            "Layer": {},
            "Message": "Security alert policy does not alert account admins.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0023",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0023"
            ],
            "Resolution": "Enable email to subscription owners",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Security threat alerts go to subcription owners and co-administrators",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0023",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server_security_alert_policy\" \"alertpolicy7\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 236,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name        = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 237,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  server_name                = azurerm_mssql_server.mssql7.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 238,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  state                      = \"Enabled\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 239,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_endpoint           = azurerm_storage_account.security_storage_account.primary_blob_endpoint",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 240,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_account_access_key = azurerm_storage_account.security_storage_account.primary_access_key",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 241,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  disabled_alerts = [",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 242,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Sql_Injection\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 243,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Data_Exfiltration\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 244,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 245,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 248,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server_security_alert_policy.alertpolicy7",
              "Service": "database",
              "StartLine": 236
            },
            "Description": "Subscription owners should be notified when there are security alerts. By ensuring the administrators of the account have been notified they can quickly assist in any required remediation",
            "ID": "AVD-AZU-0023",
            "Layer": {},
            "Message": "Security alert policy does not alert account admins.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0023",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0023"
            ],
            "Resolution": "Enable email to subscription owners",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Security threat alerts go to subcription owners and co-administrators",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0026",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server\" \"mssql1\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 20,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                         = \"terragoat-mssql1-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 21,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name          = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 22,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location                     = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 23,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  version                      = \"12.0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 24,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login          = \"missadministrator\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 25,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login_password = \"AdminPassword123!\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 26,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 27,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"c6f8caa51942284d02465518822685897ad90141\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 28,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 29,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 37,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server.mssql1",
              "Service": "database",
              "StartLine": 20
            },
            "Description": "You should not use outdated/insecure TLS versions for encryption. You should be using TLS v1.2+.",
            "ID": "AVD-AZU-0026",
            "Layer": {},
            "Message": "Database server does not require a secure TLS version.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0026",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0026"
            ],
            "Resolution": "Use the most modern TLS policies available",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Databases should have the minimum TLS set for connections",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0026",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server\" \"mssql2\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 39,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                         = \"mssql2-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 40,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name          = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 41,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location                     = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 42,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  version                      = \"12.0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 43,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login          = \"missadministrator\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 44,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login_password = \"AdminPassword123!\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 45,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 46,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"c6f8caa51942284d02465518822685897ad90141\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 47,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 48,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 56,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server.mssql2",
              "Service": "database",
              "StartLine": 39
            },
            "Description": "You should not use outdated/insecure TLS versions for encryption. You should be using TLS v1.2+.",
            "ID": "AVD-AZU-0026",
            "Layer": {},
            "Message": "Database server does not require a secure TLS version.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0026",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0026"
            ],
            "Resolution": "Use the most modern TLS policies available",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Databases should have the minimum TLS set for connections",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0026",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server\" \"mssql3\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 58,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                         = \"mssql3-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 59,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name          = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 60,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location                     = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 61,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  version                      = \"12.0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 62,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login          = \"missadministrator\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 63,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login_password = \"AdminPassword123!\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 64,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 65,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"c6f8caa51942284d02465518822685897ad90141\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 66,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 67,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 75,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server.mssql3",
              "Service": "database",
              "StartLine": 58
            },
            "Description": "You should not use outdated/insecure TLS versions for encryption. You should be using TLS v1.2+.",
            "ID": "AVD-AZU-0026",
            "Layer": {},
            "Message": "Database server does not require a secure TLS version.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0026",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0026"
            ],
            "Resolution": "Use the most modern TLS policies available",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Databases should have the minimum TLS set for connections",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0026",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server\" \"mssql4\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 77,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                         = \"mssql4-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 78,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name          = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 79,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location                     = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 80,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  version                      = \"12.0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 81,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login          = \"missadministrator\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 82,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login_password = \"AdminPassword123!\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 83,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 84,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"c6f8caa51942284d02465518822685897ad90141\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 85,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 86,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 94,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server.mssql4",
              "Service": "database",
              "StartLine": 77
            },
            "Description": "You should not use outdated/insecure TLS versions for encryption. You should be using TLS v1.2+.",
            "ID": "AVD-AZU-0026",
            "Layer": {},
            "Message": "Database server does not require a secure TLS version.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0026",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0026"
            ],
            "Resolution": "Use the most modern TLS policies available",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Databases should have the minimum TLS set for connections",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0026",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server\" \"mssql5\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 96,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                         = \"mssql5-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 97,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name          = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 98,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location                     = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 99,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  version                      = \"12.0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 100,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login          = \"missadministrator\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 101,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login_password = \"AdminPassword123!\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 102,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 103,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"c6f8caa51942284d02465518822685897ad90141\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 104,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 105,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 113,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server.mssql5",
              "Service": "database",
              "StartLine": 96
            },
            "Description": "You should not use outdated/insecure TLS versions for encryption. You should be using TLS v1.2+.",
            "ID": "AVD-AZU-0026",
            "Layer": {},
            "Message": "Database server does not require a secure TLS version.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0026",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0026"
            ],
            "Resolution": "Use the most modern TLS policies available",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Databases should have the minimum TLS set for connections",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0026",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server\" \"mssql6\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 115,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                         = \"mssql6-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 116,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name          = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 117,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location                     = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 118,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  version                      = \"12.0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 119,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login          = \"missadministrator\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 120,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login_password = \"AdminPassword123!\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 121,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 122,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"c6f8caa51942284d02465518822685897ad90141\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 123,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 124,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 132,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server.mssql6",
              "Service": "database",
              "StartLine": 115
            },
            "Description": "You should not use outdated/insecure TLS versions for encryption. You should be using TLS v1.2+.",
            "ID": "AVD-AZU-0026",
            "Layer": {},
            "Message": "Database server does not require a secure TLS version.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0026",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0026"
            ],
            "Resolution": "Use the most modern TLS policies available",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Databases should have the minimum TLS set for connections",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0026",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server\" \"mssql7\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 134,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                         = \"mssql7-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 135,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name          = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 136,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location                     = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 137,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  version                      = \"12.0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 138,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login          = \"missadministrator\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 139,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login_password = \"AdminPassword123!\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 140,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 141,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"c6f8caa51942284d02465518822685897ad90141\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 142,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 143,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 151,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server.mssql7",
              "Service": "database",
              "StartLine": 134
            },
            "Description": "You should not use outdated/insecure TLS versions for encryption. You should be using TLS v1.2+.",
            "ID": "AVD-AZU-0026",
            "Layer": {},
            "Message": "Database server does not require a secure TLS version.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0026",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0026"
            ],
            "Resolution": "Use the most modern TLS policies available",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Databases should have the minimum TLS set for connections",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0027",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server\" \"mssql1\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 20,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                         = \"terragoat-mssql1-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 21,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name          = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 22,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location                     = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 23,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  version                      = \"12.0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 24,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login          = \"missadministrator\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 25,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login_password = \"AdminPassword123!\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 26,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 27,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"c6f8caa51942284d02465518822685897ad90141\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 28,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 29,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 37,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server.mssql1",
              "Service": "database",
              "StartLine": 20
            },
            "Description": "Auditing helps you maintain regulatory compliance, understand database activity, and gain insight into discrepancies and anomalies that could indicate business concerns or suspected security violations.",
            "ID": "AVD-AZU-0027",
            "Layer": {},
            "Message": "Server does not have an extended audit policy configured.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0027",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/azure-sql/database/auditing-overview",
              "https://avd.aquasec.com/misconfig/avd-azu-0027"
            ],
            "Resolution": "Enable auditing on Azure SQL databases",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Auditing should be enabled on Azure SQL Databases",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0027",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server\" \"mssql2\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 39,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                         = \"mssql2-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 40,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name          = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 41,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location                     = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 42,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  version                      = \"12.0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 43,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login          = \"missadministrator\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 44,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login_password = \"AdminPassword123!\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 45,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 46,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"c6f8caa51942284d02465518822685897ad90141\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 47,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 48,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 56,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server.mssql2",
              "Service": "database",
              "StartLine": 39
            },
            "Description": "Auditing helps you maintain regulatory compliance, understand database activity, and gain insight into discrepancies and anomalies that could indicate business concerns or suspected security violations.",
            "ID": "AVD-AZU-0027",
            "Layer": {},
            "Message": "Server does not have an extended audit policy configured.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0027",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/azure-sql/database/auditing-overview",
              "https://avd.aquasec.com/misconfig/avd-azu-0027"
            ],
            "Resolution": "Enable auditing on Azure SQL databases",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Auditing should be enabled on Azure SQL Databases",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0027",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server\" \"mssql3\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 58,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                         = \"mssql3-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 59,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name          = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 60,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location                     = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 61,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  version                      = \"12.0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 62,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login          = \"missadministrator\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 63,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login_password = \"AdminPassword123!\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 64,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 65,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"c6f8caa51942284d02465518822685897ad90141\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 66,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 67,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 75,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server.mssql3",
              "Service": "database",
              "StartLine": 58
            },
            "Description": "Auditing helps you maintain regulatory compliance, understand database activity, and gain insight into discrepancies and anomalies that could indicate business concerns or suspected security violations.",
            "ID": "AVD-AZU-0027",
            "Layer": {},
            "Message": "Server does not have an extended audit policy configured.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0027",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/azure-sql/database/auditing-overview",
              "https://avd.aquasec.com/misconfig/avd-azu-0027"
            ],
            "Resolution": "Enable auditing on Azure SQL databases",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Auditing should be enabled on Azure SQL Databases",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0027",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server\" \"mssql4\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 77,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                         = \"mssql4-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 78,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name          = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 79,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location                     = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 80,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  version                      = \"12.0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 81,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login          = \"missadministrator\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 82,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login_password = \"AdminPassword123!\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 83,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 84,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"c6f8caa51942284d02465518822685897ad90141\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 85,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 86,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 94,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server.mssql4",
              "Service": "database",
              "StartLine": 77
            },
            "Description": "Auditing helps you maintain regulatory compliance, understand database activity, and gain insight into discrepancies and anomalies that could indicate business concerns or suspected security violations.",
            "ID": "AVD-AZU-0027",
            "Layer": {},
            "Message": "Server does not have an extended audit policy configured.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0027",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/azure-sql/database/auditing-overview",
              "https://avd.aquasec.com/misconfig/avd-azu-0027"
            ],
            "Resolution": "Enable auditing on Azure SQL databases",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Auditing should be enabled on Azure SQL Databases",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0027",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server\" \"mssql5\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 96,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                         = \"mssql5-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 97,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name          = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 98,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location                     = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 99,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  version                      = \"12.0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 100,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login          = \"missadministrator\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 101,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login_password = \"AdminPassword123!\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 102,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 103,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"c6f8caa51942284d02465518822685897ad90141\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 104,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 105,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 113,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server.mssql5",
              "Service": "database",
              "StartLine": 96
            },
            "Description": "Auditing helps you maintain regulatory compliance, understand database activity, and gain insight into discrepancies and anomalies that could indicate business concerns or suspected security violations.",
            "ID": "AVD-AZU-0027",
            "Layer": {},
            "Message": "Server does not have an extended audit policy configured.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0027",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/azure-sql/database/auditing-overview",
              "https://avd.aquasec.com/misconfig/avd-azu-0027"
            ],
            "Resolution": "Enable auditing on Azure SQL databases",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Auditing should be enabled on Azure SQL Databases",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0027",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server\" \"mssql6\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 115,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                         = \"mssql6-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 116,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name          = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 117,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location                     = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 118,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  version                      = \"12.0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 119,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login          = \"missadministrator\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 120,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login_password = \"AdminPassword123!\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 121,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 122,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"c6f8caa51942284d02465518822685897ad90141\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 123,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 124,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 132,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server.mssql6",
              "Service": "database",
              "StartLine": 115
            },
            "Description": "Auditing helps you maintain regulatory compliance, understand database activity, and gain insight into discrepancies and anomalies that could indicate business concerns or suspected security violations.",
            "ID": "AVD-AZU-0027",
            "Layer": {},
            "Message": "Server does not have an extended audit policy configured.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0027",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/azure-sql/database/auditing-overview",
              "https://avd.aquasec.com/misconfig/avd-azu-0027"
            ],
            "Resolution": "Enable auditing on Azure SQL databases",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Auditing should be enabled on Azure SQL Databases",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0027",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server\" \"mssql7\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 134,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                         = \"mssql7-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 135,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name          = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 136,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location                     = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 137,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  version                      = \"12.0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 138,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login          = \"missadministrator\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 139,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login_password = \"AdminPassword123!\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 140,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 141,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"c6f8caa51942284d02465518822685897ad90141\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 142,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 143,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 151,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server.mssql7",
              "Service": "database",
              "StartLine": 134
            },
            "Description": "Auditing helps you maintain regulatory compliance, understand database activity, and gain insight into discrepancies and anomalies that could indicate business concerns or suspected security violations.",
            "ID": "AVD-AZU-0027",
            "Layer": {},
            "Message": "Server does not have an extended audit policy configured.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0027",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/azure-sql/database/auditing-overview",
              "https://avd.aquasec.com/misconfig/avd-azu-0027"
            ],
            "Resolution": "Enable auditing on Azure SQL databases",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Auditing should be enabled on Azure SQL Databases",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0028",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server_security_alert_policy\" \"alertpolicy1\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 153,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name        = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 154,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  server_name                = azurerm_mssql_server.mssql1.name",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 155,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  state                      = \"Enabled\"",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 156,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_endpoint           = azurerm_storage_account.security_storage_account.primary_blob_endpoint",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 157,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_account_access_key = azurerm_storage_account.security_storage_account.primary_access_key",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 158,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  disabled_alerts = [",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 159,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Sql_Injection\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 160,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Data_Exfiltration\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 161,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 162,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 162,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server_security_alert_policy.alertpolicy1",
              "Service": "database",
              "StartLine": 159
            },
            "Description": "SQL Server can alert for security issues including SQL Injection, vulnerabilities, access anomalies and data exfiltration. Ensure none of these are disabled to benefit from the best protection",
            "ID": "AVD-AZU-0028",
            "Layer": {},
            "Message": "Server has a security alert policy which disables alerts.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0028",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0028"
            ],
            "Resolution": "Use all provided threat alerts",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "No threat detections are set",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0028",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server_security_alert_policy\" \"alertpolicy2\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 167,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name        = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 168,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  server_name                = azurerm_mssql_server.mssql2.name",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 169,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  state                      = \"Enabled\"",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 170,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_endpoint           = azurerm_storage_account.security_storage_account.primary_blob_endpoint",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 171,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_account_access_key = azurerm_storage_account.security_storage_account.primary_access_key",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 172,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  disabled_alerts = [",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 173,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Sql_Injection\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 174,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Data_Exfiltration\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 175,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 176,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 176,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server_security_alert_policy.alertpolicy2",
              "Service": "database",
              "StartLine": 173
            },
            "Description": "SQL Server can alert for security issues including SQL Injection, vulnerabilities, access anomalies and data exfiltration. Ensure none of these are disabled to benefit from the best protection",
            "ID": "AVD-AZU-0028",
            "Layer": {},
            "Message": "Server has a security alert policy which disables alerts.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0028",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0028"
            ],
            "Resolution": "Use all provided threat alerts",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "No threat detections are set",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0028",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server_security_alert_policy\" \"alertpolicy3\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 181,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name        = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 182,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  server_name                = azurerm_mssql_server.mssql3.name",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 183,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  state                      = \"Enabled\"",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 184,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_endpoint           = azurerm_storage_account.security_storage_account.primary_blob_endpoint",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 185,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_account_access_key = azurerm_storage_account.security_storage_account.primary_access_key",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 186,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  disabled_alerts = [",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 187,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Sql_Injection\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 188,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Data_Exfiltration\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 189,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 190,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 190,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server_security_alert_policy.alertpolicy3",
              "Service": "database",
              "StartLine": 187
            },
            "Description": "SQL Server can alert for security issues including SQL Injection, vulnerabilities, access anomalies and data exfiltration. Ensure none of these are disabled to benefit from the best protection",
            "ID": "AVD-AZU-0028",
            "Layer": {},
            "Message": "Server has a security alert policy which disables alerts.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0028",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0028"
            ],
            "Resolution": "Use all provided threat alerts",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "No threat detections are set",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0028",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server_security_alert_policy\" \"alertpolicy4\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 195,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name        = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 196,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  server_name                = azurerm_mssql_server.mssql4.name",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 197,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  state                      = \"Enabled\"",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 198,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_endpoint           = azurerm_storage_account.security_storage_account.primary_blob_endpoint",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 199,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_account_access_key = azurerm_storage_account.security_storage_account.primary_access_key",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 200,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  disabled_alerts = [",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 201,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Sql_Injection\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 202,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Data_Exfiltration\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 203,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 204,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 204,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server_security_alert_policy.alertpolicy4",
              "Service": "database",
              "StartLine": 201
            },
            "Description": "SQL Server can alert for security issues including SQL Injection, vulnerabilities, access anomalies and data exfiltration. Ensure none of these are disabled to benefit from the best protection",
            "ID": "AVD-AZU-0028",
            "Layer": {},
            "Message": "Server has a security alert policy which disables alerts.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0028",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0028"
            ],
            "Resolution": "Use all provided threat alerts",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "No threat detections are set",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0028",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server_security_alert_policy\" \"alertpolicy5\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 209,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name        = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 210,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  server_name                = azurerm_mssql_server.mssql5.name",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 211,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  state                      = \"Enabled\"",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 212,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_endpoint           = azurerm_storage_account.security_storage_account.primary_blob_endpoint",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 213,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_account_access_key = azurerm_storage_account.security_storage_account.primary_access_key",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 214,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  disabled_alerts = [",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 215,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Sql_Injection\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 216,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Data_Exfiltration\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 217,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 218,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 218,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server_security_alert_policy.alertpolicy5",
              "Service": "database",
              "StartLine": 215
            },
            "Description": "SQL Server can alert for security issues including SQL Injection, vulnerabilities, access anomalies and data exfiltration. Ensure none of these are disabled to benefit from the best protection",
            "ID": "AVD-AZU-0028",
            "Layer": {},
            "Message": "Server has a security alert policy which disables alerts.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0028",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0028"
            ],
            "Resolution": "Use all provided threat alerts",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "No threat detections are set",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0028",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server_security_alert_policy\" \"alertpolicy6\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 222,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name        = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 223,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  server_name                = azurerm_mssql_server.mssql6.name",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 224,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  state                      = \"Enabled\"",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 225,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_endpoint           = azurerm_storage_account.security_storage_account.primary_blob_endpoint",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 226,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_account_access_key = azurerm_storage_account.security_storage_account.primary_access_key",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 227,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  disabled_alerts = [",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 228,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Sql_Injection\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 229,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Data_Exfiltration\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 230,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 231,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 231,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server_security_alert_policy.alertpolicy6",
              "Service": "database",
              "StartLine": 228
            },
            "Description": "SQL Server can alert for security issues including SQL Injection, vulnerabilities, access anomalies and data exfiltration. Ensure none of these are disabled to benefit from the best protection",
            "ID": "AVD-AZU-0028",
            "Layer": {},
            "Message": "Server has a security alert policy which disables alerts.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0028",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0028"
            ],
            "Resolution": "Use all provided threat alerts",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "No threat detections are set",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0028",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server_security_alert_policy\" \"alertpolicy7\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 236,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name        = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 237,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  server_name                = azurerm_mssql_server.mssql7.name",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 238,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  state                      = \"Enabled\"",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 239,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_endpoint           = azurerm_storage_account.security_storage_account.primary_blob_endpoint",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 240,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_account_access_key = azurerm_storage_account.security_storage_account.primary_access_key",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 241,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  disabled_alerts = [",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 242,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Sql_Injection\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 243,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Data_Exfiltration\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 244,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 245,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 245,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server_security_alert_policy.alertpolicy7",
              "Service": "database",
              "StartLine": 242
            },
            "Description": "SQL Server can alert for security issues including SQL Injection, vulnerabilities, access anomalies and data exfiltration. Ensure none of these are disabled to benefit from the best protection",
            "ID": "AVD-AZU-0028",
            "Layer": {},
            "Message": "Server has a security alert policy which disables alerts.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0028",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0028"
            ],
            "Resolution": "Use all provided threat alerts",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "No threat detections are set",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0008",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_storage_account\" \"security_storage_account\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                      = \"securitystorageaccount-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name       = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location                  = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  account_tier              = \"Standard\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  account_replication_type  = \"LRS\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  enable_https_traffic_only = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"a1d1c1ce31a1bde6dafa188846d90eca82abe5fd\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 18,
              "Provider": "Azure",
              "Resource": "azurerm_storage_account.security_storage_account",
              "Service": "storage",
              "StartLine": 1
            },
            "Description": "You can configure your storage account to accept requests from secure connections only by setting the Secure transfer required property for the storage account. \n\nWhen you require secure transfer, any requests originating from an insecure connection are rejected. \n\nMicrosoft recommends that you always require secure transfer for all of your storage accounts.",
            "ID": "AVD-AZU-0008",
            "Layer": {},
            "Message": "No issues found",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0008",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/storage/common/storage-require-secure-transfer",
              "https://avd.aquasec.com/misconfig/avd-azu-0008"
            ],
            "Resolution": "Only allow secure connection for transferring data into storage accounts",
            "Severity": "HIGH",
            "Status": "PASS",
            "Title": "Storage accounts should be configured to only accept transfers that are over secure connections",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0018",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server_security_alert_policy\" \"alertpolicy1\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 153,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name        = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 154,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  server_name                = azurerm_mssql_server.mssql1.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 155,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  state                      = \"Enabled\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 156,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_endpoint           = azurerm_storage_account.security_storage_account.primary_blob_endpoint",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 157,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_account_access_key = azurerm_storage_account.security_storage_account.primary_access_key",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 158,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  disabled_alerts = [",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 159,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Sql_Injection\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 160,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Data_Exfiltration\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 161,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 162,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 165,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server_security_alert_policy.alertpolicy1",
              "Service": "database",
              "StartLine": 153
            },
            "Description": "SQL Server sends alerts for threat detection via email, if there are no email addresses set then mitigation will be delayed.",
            "ID": "AVD-AZU-0018",
            "Layer": {},
            "Message": "No issues found",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0018",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0018"
            ],
            "Resolution": "Provide at least one email address for threat alerts",
            "Severity": "MEDIUM",
            "Status": "PASS",
            "Title": "At least one email address is set for threat alerts",
            "Type": "Terraform Security Check"
          }
        ],
        "Target": "terraform/azure/mssql.tf",
        "Type": "terraform"
      },
      {
        "Class": "config",
        "Misconfigurations": [
          {
            "AVDID": "AVD-AZU-0047",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource azurerm_network_security_group \"bad_sg\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 69,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 70,
                    "Truncated": true
                  },
                  {
                    "Annotation": "\"*\"",
                    "Content": "    source_address_prefix      = \"*\"",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 80,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 106,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 107,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 80,
              "Provider": "Azure",
              "Resource": "azurerm_network_security_group.bad_sg",
              "Service": "network",
              "StartLine": 80
            },
            "Description": "Network security rules should not use very broad subnets.\n\nWhere possible, segments should be broken into smaller subnets.",
            "ID": "AVD-AZU-0047",
            "Layer": {},
            "Message": "Security group rule allows ingress from public internet.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0047",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/security/fundamentals/network-best-practices",
              "https://avd.aquasec.com/misconfig/avd-azu-0047"
            ],
            "Resolution": "Set a more restrictive cidr range",
            "Severity": "CRITICAL",
            "Status": "FAIL",
            "Title": "An inbound network security rule allows traffic from /0.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0047",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource azurerm_network_security_group \"bad_sg\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 69,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 70,
                    "Truncated": true
                  },
                  {
                    "Annotation": "\"*\"",
                    "Content": "    source_address_prefix      = \"*\"",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 92,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 106,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 107,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 92,
              "Provider": "Azure",
              "Resource": "azurerm_network_security_group.bad_sg",
              "Service": "network",
              "StartLine": 92
            },
            "Description": "Network security rules should not use very broad subnets.\n\nWhere possible, segments should be broken into smaller subnets.",
            "ID": "AVD-AZU-0047",
            "Layer": {},
            "Message": "Security group rule allows ingress from public internet.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0047",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/security/fundamentals/network-best-practices",
              "https://avd.aquasec.com/misconfig/avd-azu-0047"
            ],
            "Resolution": "Set a more restrictive cidr range",
            "Severity": "CRITICAL",
            "Status": "FAIL",
            "Title": "An inbound network security rule allows traffic from /0.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0048",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource azurerm_network_security_group \"bad_sg\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 69,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 70,
                    "Truncated": true
                  },
                  {
                    "Annotation": "\"*\"",
                    "Content": "    source_address_prefix      = \"*\"",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 92,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 106,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 107,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 92,
              "Provider": "Azure",
              "Resource": "azurerm_network_security_group.bad_sg",
              "Service": "network",
              "StartLine": 92
            },
            "Description": "RDP access can be configured on either the network security group or in the network security group rule.\n\nRDP access should not be permitted from the internet (*, 0.0.0.0, /0, internet, any). Consider using the Azure Bastion Service.",
            "ID": "AVD-AZU-0048",
            "Layer": {},
            "Message": "Security group rule allows ingress to RDP port from multiple public internet addresses.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0048",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/bastion/tutorial-create-host-portal",
              "https://avd.aquasec.com/misconfig/avd-azu-0048"
            ],
            "Resolution": "Block RDP port from internet",
            "Severity": "CRITICAL",
            "Status": "FAIL",
            "Title": "RDP access should not be accessible from the Internet, should be blocked on port 3389",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0049",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource azurerm_network_watcher_flow_log \"flow_log\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 125,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 126,
                    "Truncated": true
                  },
                  {
                    "Annotation": "false",
                    "Content": "    enabled = false",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 132,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 144,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 145,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 132,
              "Provider": "Azure",
              "Resource": "azurerm_network_watcher_flow_log.flow_log",
              "Service": "network",
              "StartLine": 132
            },
            "Description": "Flow logs are the source of truth for all network activity in your cloud environment. \nTo enable analysis in security event that was detected late, you need to have the logs available. \n\t\t\t\nSetting an retention policy will help ensure as much information is available for review.",
            "ID": "AVD-AZU-0049",
            "Layer": {},
            "Message": "Flow log does not enable the log retention policy.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0049",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/network-watcher/network-watcher-monitoring-overview",
              "https://avd.aquasec.com/misconfig/avd-azu-0049"
            ],
            "Resolution": "Ensure flow log retention is turned on with an expiry of \u003e90 days",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Retention policy for flow logs should be enabled and set to greater than 90 days",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0050",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource azurerm_network_security_group \"bad_sg\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 69,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 70,
                    "Truncated": true
                  },
                  {
                    "Annotation": "\"*\"",
                    "Content": "    source_address_prefix      = \"*\"",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 80,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 106,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 107,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 80,
              "Provider": "Azure",
              "Resource": "azurerm_network_security_group.bad_sg",
              "Service": "network",
              "StartLine": 80
            },
            "Description": "SSH access can be configured on either the network security group or in the network security group rule. \n\nSSH access should not be permitted from the internet (*, 0.0.0.0, /0, internet, any)",
            "ID": "AVD-AZU-0050",
            "Layer": {},
            "Message": "Security group rule allows ingress to SSH port from multiple public internet addresses.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0050",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0050"
            ],
            "Resolution": "Block port 22 access from the internet",
            "Severity": "CRITICAL",
            "Status": "FAIL",
            "Title": "SSH access should not be accessible from the Internet, should be blocked on port 22",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0048",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource azurerm_network_security_group \"bad_sg\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 69,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location            = var.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 70,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                = \"terragoat-${var.environment}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 71,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 72,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 73,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  security_rule {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 74,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    access                     = \"Allow\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 75,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    direction                  = \"Inbound\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 76,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    name                       = \"AllowSSH\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 77,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 78,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 107,
              "Provider": "Azure",
              "Resource": "azurerm_network_security_group.bad_sg",
              "Service": "network",
              "StartLine": 69
            },
            "Description": "RDP access can be configured on either the network security group or in the network security group rule.\n\nRDP access should not be permitted from the internet (*, 0.0.0.0, /0, internet, any). Consider using the Azure Bastion Service.",
            "ID": "AVD-AZU-0048",
            "Layer": {},
            "Message": "No issues found",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0048",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/bastion/tutorial-create-host-portal",
              "https://avd.aquasec.com/misconfig/avd-azu-0048"
            ],
            "Resolution": "Block RDP port from internet",
            "Severity": "CRITICAL",
            "Status": "PASS",
            "Title": "RDP access should not be accessible from the Internet, should be blocked on port 3389",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0051",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource azurerm_network_security_group \"bad_sg\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 69,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location            = var.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 70,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                = \"terragoat-${var.environment}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 71,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 72,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 73,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  security_rule {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 74,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    access                     = \"Allow\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 75,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    direction                  = \"Inbound\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 76,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    name                       = \"AllowSSH\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 77,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 78,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 107,
              "Provider": "Azure",
              "Resource": "azurerm_network_security_group.bad_sg",
              "Service": "network",
              "StartLine": 69
            },
            "Description": "Network security rules should not use very broad subnets.\n\nWhere possible, segments should be broken into smaller subnets.",
            "ID": "AVD-AZU-0051",
            "Layer": {},
            "Message": "No issues found",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0051",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/security/fundamentals/network-best-practices",
              "https://avd.aquasec.com/misconfig/avd-azu-0051"
            ],
            "Resolution": "Set a more restrictive cidr range",
            "Severity": "CRITICAL",
            "Status": "PASS",
            "Title": "An outbound network security rule allows traffic to /0.",
            "Type": "Terraform Security Check"
          }
        ],
        "Target": "terraform/azure/networking.tf",
        "Type": "terraform"
      },
      {
        "Class": "config",
        "Misconfigurations": [
          {
            "AVDID": "AVD-AZU-0030",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_role_definition\" \"example\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name        = \"my-custom-role\"",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  scope       = data.azurerm_subscription.current_subscription.id",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  description = \"This is a custom role created via Terraform\"",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  permissions {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    actions     = [\"*\"]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    not_actions = []",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 11,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 12,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 11,
              "Provider": "Azure",
              "Resource": "azurerm_role_definition.example",
              "Service": "authorization",
              "StartLine": 8
            },
            "Description": "The permissions granted to a role should be kept to the minimum required to be able to do the task. Wildcard permissions must not be used.",
            "ID": "AVD-AZU-0030",
            "Layer": {},
            "Message": "No issues found",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0030",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0030"
            ],
            "Resolution": "Use targeted permissions for roles",
            "Severity": "MEDIUM",
            "Status": "PASS",
            "Title": "Roles limited to the required actions",
            "Type": "Terraform Security Check"
          }
        ],
        "Target": "terraform/azure/roles.tf",
        "Type": "terraform"
      },
      {
        "Class": "config",
        "Misconfigurations": [
          {
            "AVDID": "AVD-AZU-0044",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource azurerm_security_center_contact \"contact\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "false",
                    "Content": "  alert_notifications = false",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  alerts_to_admins    = false",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  email               = \"some@email.com\"",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 9,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 6,
              "Provider": "Azure",
              "Resource": "azurerm_security_center_contact.contact",
              "Service": "security-center",
              "StartLine": 6
            },
            "Description": "It is recommended that at least one valid contact is configured for the security center. \nMicrosoft will notify the security contact directly in the event of a security incident using email and require alerting to be turned on.",
            "ID": "AVD-AZU-0044",
            "Layer": {},
            "Message": "Security contact has alert notifications disabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0044",
            "Query": "data..",
            "References": [
              "https://azure.microsoft.com/en-us/services/security-center/",
              "https://avd.aquasec.com/misconfig/avd-azu-0044"
            ],
            "Resolution": " Set alert notifications to be on",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Send notification emails for high severity alerts",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0045",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource azurerm_security_center_subscription_pricing \"pricing\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "\"Free\"",
                    "Content": "  tier = \"Free\"",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 2,
              "Provider": "Azure",
              "Resource": "azurerm_security_center_subscription_pricing.pricing",
              "Service": "security-center",
              "StartLine": 2
            },
            "Description": "To benefit from Azure Defender you should use the Standard subscription tier.\n\t\t\t\n\t\t\tEnabling Azure Defender extends the capabilities of the free mode to workloads running in private and other public clouds, providing unified security management and threat protection across your hybrid cloud workloads.",
            "ID": "AVD-AZU-0045",
            "Layer": {},
            "Message": "Security center subscription uses the free tier.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0045",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/security-center/security-center-pricing",
              "https://avd.aquasec.com/misconfig/avd-azu-0045"
            ],
            "Resolution": "Enable standard subscription tier to benefit from Azure Defender",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Enable the standard security center subscription tier",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0046",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource azurerm_security_center_contact \"contact\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  alert_notifications = false",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  alerts_to_admins    = false",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  email               = \"some@email.com\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 9,
              "Provider": "Azure",
              "Resource": "azurerm_security_center_contact.contact",
              "Service": "security-center",
              "StartLine": 5
            },
            "Description": "It is recommended that at least one valid contact is configured for the security center. \nMicrosoft will notify the security contact directly in the event of a security incident and will look to use a telephone number in cases where a prompt response is required.",
            "ID": "AVD-AZU-0046",
            "Layer": {},
            "Message": "Security contact does not have a phone number listed.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0046",
            "Query": "data..",
            "References": [
              "https://azure.microsoft.com/en-us/services/security-center/",
              "https://avd.aquasec.com/misconfig/avd-azu-0046"
            ],
            "Resolution": "Set a telephone number for security center contact",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "The required contact details should be set for security center",
            "Type": "Terraform Security Check"
          }
        ],
        "Target": "terraform/azure/security_center.tf",
        "Type": "terraform"
      },
      {
        "Class": "config",
        "Misconfigurations": [
          {
            "AVDID": "AVD-AZU-0018",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server_security_alert_policy\" \"example\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 31,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name        = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 32,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  server_name                = azurerm_sql_server.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 33,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  state                      = \"Enabled\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 34,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_endpoint           = azurerm_storage_account.example.primary_blob_endpoint",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 35,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_account_access_key = azurerm_storage_account.example.primary_access_key",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 36,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  disabled_alerts = [",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 37,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Sql_Injection\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 38,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Data_Exfiltration\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 39,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 40,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 42,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server_security_alert_policy.example",
              "Service": "database",
              "StartLine": 31
            },
            "Description": "SQL Server sends alerts for threat detection via email, if there are no email addresses set then mitigation will be delayed.",
            "ID": "AVD-AZU-0018",
            "Layer": {},
            "Message": "Security alert policy does not include any email addresses for notification.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0018",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0018"
            ],
            "Resolution": "Provide at least one email address for threat alerts",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "At least one email address is set for threat alerts",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0019",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_postgresql_server\" \"example\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 73,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                         = \"terragoat-postgresql-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 74,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location                     = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 75,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name          = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 76,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  sku_name                     = \"B_Gen5_2\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 77,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_mb                   = 5120",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 78,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  backup_retention_days        = 7",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 79,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  geo_redundant_backup_enabled = false",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 80,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  auto_grow_enabled            = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 81,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 82,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 96,
              "Provider": "Azure",
              "Resource": "azurerm_postgresql_server.example",
              "Service": "database",
              "StartLine": 73
            },
            "Description": "Postgresql can generate logs for successful connections to improve visibility for audit and configuration issue resolution.",
            "ID": "AVD-AZU-0019",
            "Layer": {},
            "Message": "Database server is not configured to log connections.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0019",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/postgresql/concepts-server-logs#configure-logging",
              "https://avd.aquasec.com/misconfig/avd-azu-0019"
            ],
            "Resolution": "Enable connection logging",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Ensure server parameter 'log_connections' is set to 'ON' for PostgreSQL Database Server",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0020",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mysql_server\" \"example\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 44,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 45,
                    "Truncated": true
                  },
                  {
                    "Annotation": "false",
                    "Content": "  ssl_enforcement_enabled           = false",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 60,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 70,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 71,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 60,
              "Provider": "Azure",
              "Resource": "azurerm_mysql_server.example",
              "Service": "database",
              "StartLine": 60
            },
            "Description": "SSL connections should be enforced were available to ensure secure transfer and reduce the risk of compromising data in flight.",
            "ID": "AVD-AZU-0020",
            "Layer": {},
            "Message": "Database server does not have enforce SSL.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0020",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0020"
            ],
            "Resolution": "Enable SSL enforcement",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "SSL should be enforced on database connections where applicable",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0020",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_postgresql_server\" \"example\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 73,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 74,
                    "Truncated": true
                  },
                  {
                    "Annotation": "false",
                    "Content": "  ssl_enforcement_enabled      = false",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 85,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 95,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 96,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 85,
              "Provider": "Azure",
              "Resource": "azurerm_postgresql_server.example",
              "Service": "database",
              "StartLine": 85
            },
            "Description": "SSL connections should be enforced were available to ensure secure transfer and reduce the risk of compromising data in flight.",
            "ID": "AVD-AZU-0020",
            "Layer": {},
            "Message": "Database server does not have enforce SSL.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0020",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0020"
            ],
            "Resolution": "Enable SSL enforcement",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "SSL should be enforced on database connections where applicable",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0021",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_postgresql_configuration\" \"thrtottling_config\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 98,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                = \"connection_throttling\"",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 99,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 100,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  server_name         = azurerm_postgresql_server.example.name",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 101,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  value               = \"off\"",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 102,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 103,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 102,
              "Provider": "Azure",
              "Resource": "azurerm_postgresql_configuration.thrtottling_config",
              "Service": "database",
              "StartLine": 102
            },
            "Description": "Postgresql can generate logs for connection throttling to improve visibility for audit and configuration issue resolution.",
            "ID": "AVD-AZU-0021",
            "Layer": {},
            "Message": "Database server is not configured to throttle connections.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0021",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/postgresql/concepts-server-logs#configure-logging",
              "https://avd.aquasec.com/misconfig/avd-azu-0021"
            ],
            "Resolution": "Enable connection throttling logging",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Ensure server parameter 'connection_throttling' is set to 'ON' for PostgreSQL Database Server",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0022",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_sql_server\" \"example\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                         = \"terragoat-sqlserver-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name          = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 11,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location                     = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 12,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  version                      = \"12.0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 13,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login          = \"ariel\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 14,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login_password = \"Aa12345678\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 15,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 16,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    environment = var.environment",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 17,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 18,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 29,
              "Provider": "Azure",
              "Resource": "azurerm_sql_server.example",
              "Service": "database",
              "StartLine": 9
            },
            "Description": "Database resources should not publicly available. You should limit all access to the minimum that is required for your application to function.",
            "ID": "AVD-AZU-0022",
            "Layer": {},
            "Message": "Database server has public network access enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0022",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0022"
            ],
            "Resolution": "Disable public access to database when not required",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Ensure databases are not publicly accessible",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0022",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mysql_server\" \"example\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 44,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 45,
                    "Truncated": true
                  },
                  {
                    "Annotation": "true",
                    "Content": "  public_network_access_enabled     = true",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 59,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 70,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 71,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 59,
              "Provider": "Azure",
              "Resource": "azurerm_mysql_server.example",
              "Service": "database",
              "StartLine": 59
            },
            "Description": "Database resources should not publicly available. You should limit all access to the minimum that is required for your application to function.",
            "ID": "AVD-AZU-0022",
            "Layer": {},
            "Message": "Database server has public network access enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0022",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0022"
            ],
            "Resolution": "Disable public access to database when not required",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Ensure databases are not publicly accessible",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0022",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_postgresql_server\" \"example\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 73,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                         = \"terragoat-postgresql-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 74,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location                     = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 75,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name          = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 76,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  sku_name                     = \"B_Gen5_2\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 77,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_mb                   = 5120",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 78,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  backup_retention_days        = 7",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 79,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  geo_redundant_backup_enabled = false",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 80,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  auto_grow_enabled            = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 81,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 82,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 96,
              "Provider": "Azure",
              "Resource": "azurerm_postgresql_server.example",
              "Service": "database",
              "StartLine": 73
            },
            "Description": "Database resources should not publicly available. You should limit all access to the minimum that is required for your application to function.",
            "ID": "AVD-AZU-0022",
            "Layer": {},
            "Message": "Database server has public network access enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0022",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0022"
            ],
            "Resolution": "Disable public access to database when not required",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Ensure databases are not publicly accessible",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0023",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server_security_alert_policy\" \"example\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 31,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name        = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 32,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  server_name                = azurerm_sql_server.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 33,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  state                      = \"Enabled\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 34,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_endpoint           = azurerm_storage_account.example.primary_blob_endpoint",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 35,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_account_access_key = azurerm_storage_account.example.primary_access_key",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 36,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  disabled_alerts = [",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 37,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Sql_Injection\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 38,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Data_Exfiltration\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 39,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 40,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 42,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server_security_alert_policy.example",
              "Service": "database",
              "StartLine": 31
            },
            "Description": "Subscription owners should be notified when there are security alerts. By ensuring the administrators of the account have been notified they can quickly assist in any required remediation",
            "ID": "AVD-AZU-0023",
            "Layer": {},
            "Message": "Security alert policy does not alert account admins.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0023",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0023"
            ],
            "Resolution": "Enable email to subscription owners",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Security threat alerts go to subcription owners and co-administrators",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0024",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_postgresql_configuration\" \"example\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 105,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                = \"log_checkpoints\"",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 106,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 107,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  server_name         = azurerm_postgresql_server.example.name",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 108,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  value               = \"off\"",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 109,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 110,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 109,
              "Provider": "Azure",
              "Resource": "azurerm_postgresql_configuration.example",
              "Service": "database",
              "StartLine": 109
            },
            "Description": "Postgresql can generate logs for checkpoints to improve visibility for audit and configuration issue resolution.",
            "ID": "AVD-AZU-0024",
            "Layer": {},
            "Message": "Database server is not configured to log checkpoints.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0024",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/postgresql/concepts-server-logs#configure-logging",
              "https://avd.aquasec.com/misconfig/avd-azu-0024"
            ],
            "Resolution": "Enable checkpoint logging",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Ensure server parameter 'log_checkpoints' is set to 'ON' for PostgreSQL Database Server",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0026",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_sql_server\" \"example\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                         = \"terragoat-sqlserver-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name          = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 11,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location                     = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 12,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  version                      = \"12.0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 13,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login          = \"ariel\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 14,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login_password = \"Aa12345678\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 15,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 16,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    environment = var.environment",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 17,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 18,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 29,
              "Provider": "Azure",
              "Resource": "azurerm_sql_server.example",
              "Service": "database",
              "StartLine": 9
            },
            "Description": "You should not use outdated/insecure TLS versions for encryption. You should be using TLS v1.2+.",
            "ID": "AVD-AZU-0026",
            "Layer": {},
            "Message": "Database server does not require a secure TLS version.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0026",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0026"
            ],
            "Resolution": "Use the most modern TLS policies available",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Databases should have the minimum TLS set for connections",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0026",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mysql_server\" \"example\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 44,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                = \"terragoat-mysql-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 45,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location            = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 46,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 47,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 48,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login          = \"terragoat-${var.environment}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 49,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login_password = random_string.password.result",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 50,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 51,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  sku_name   = \"B_Gen5_2\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 52,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 53,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 71,
              "Provider": "Azure",
              "Resource": "azurerm_mysql_server.example",
              "Service": "database",
              "StartLine": 44
            },
            "Description": "You should not use outdated/insecure TLS versions for encryption. You should be using TLS v1.2+.",
            "ID": "AVD-AZU-0026",
            "Layer": {},
            "Message": "Database server does not require a secure TLS version.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0026",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0026"
            ],
            "Resolution": "Use the most modern TLS policies available",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Databases should have the minimum TLS set for connections",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0026",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_postgresql_server\" \"example\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 73,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                         = \"terragoat-postgresql-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 74,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location                     = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 75,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name          = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 76,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  sku_name                     = \"B_Gen5_2\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 77,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_mb                   = 5120",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 78,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  backup_retention_days        = 7",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 79,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  geo_redundant_backup_enabled = false",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 80,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  auto_grow_enabled            = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 81,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 82,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 96,
              "Provider": "Azure",
              "Resource": "azurerm_postgresql_server.example",
              "Service": "database",
              "StartLine": 73
            },
            "Description": "You should not use outdated/insecure TLS versions for encryption. You should be using TLS v1.2+.",
            "ID": "AVD-AZU-0026",
            "Layer": {},
            "Message": "Database server does not require a secure TLS version.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0026",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0026"
            ],
            "Resolution": "Use the most modern TLS policies available",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Databases should have the minimum TLS set for connections",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0027",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_sql_server\" \"example\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                         = \"terragoat-sqlserver-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name          = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 11,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location                     = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 12,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  version                      = \"12.0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 13,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login          = \"ariel\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 14,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login_password = \"Aa12345678\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 15,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 16,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    environment = var.environment",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 17,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 18,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 29,
              "Provider": "Azure",
              "Resource": "azurerm_sql_server.example",
              "Service": "database",
              "StartLine": 9
            },
            "Description": "Auditing helps you maintain regulatory compliance, understand database activity, and gain insight into discrepancies and anomalies that could indicate business concerns or suspected security violations.",
            "ID": "AVD-AZU-0027",
            "Layer": {},
            "Message": "Server does not have an extended audit policy configured.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0027",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/azure-sql/database/auditing-overview",
              "https://avd.aquasec.com/misconfig/avd-azu-0027"
            ],
            "Resolution": "Enable auditing on Azure SQL databases",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Auditing should be enabled on Azure SQL Databases",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0028",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server_security_alert_policy\" \"example\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 31,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name        = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 32,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  server_name                = azurerm_sql_server.example.name",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 33,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  state                      = \"Enabled\"",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 34,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_endpoint           = azurerm_storage_account.example.primary_blob_endpoint",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 35,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_account_access_key = azurerm_storage_account.example.primary_access_key",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 36,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  disabled_alerts = [",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 37,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Sql_Injection\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 38,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Data_Exfiltration\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 39,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 40,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 40,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server_security_alert_policy.example",
              "Service": "database",
              "StartLine": 37
            },
            "Description": "SQL Server can alert for security issues including SQL Injection, vulnerabilities, access anomalies and data exfiltration. Ensure none of these are disabled to benefit from the best protection",
            "ID": "AVD-AZU-0028",
            "Layer": {},
            "Message": "Server has a security alert policy which disables alerts.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0028",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0028"
            ],
            "Resolution": "Use all provided threat alerts",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "No threat detections are set",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0029",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_sql_firewall_rule\" \"example\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                = \"terragoat-firewall-rule-${var.environment}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  server_name         = azurerm_sql_server.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  start_ip_address    = \"10.0.17.62\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  end_ip_address      = \"10.0.17.62\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 7,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 7,
              "Provider": "Azure",
              "Resource": "azurerm_sql_firewall_rule.example",
              "Service": "database",
              "StartLine": 1
            },
            "Description": "Azure services can be allowed access through the firewall using a start and end IP address of 0.0.0.0. No other end ip address should be combined with a start of 0.0.0.0",
            "ID": "AVD-AZU-0029",
            "Layer": {},
            "Message": "No issues found",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0029",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/rest/api/sql/2021-02-01-preview/firewall-rules/create-or-update",
              "https://avd.aquasec.com/misconfig/avd-azu-0029"
            ],
            "Resolution": "Don't use wide ip ranges for the sql firewall",
            "Severity": "HIGH",
            "Status": "PASS",
            "Title": "Ensure database firewalls do not permit public access",
            "Type": "Terraform Security Check"
          }
        ],
        "Target": "terraform/azure/sql.tf",
        "Type": "terraform"
      },
      {
        "Class": "config",
        "Misconfigurations": [
          {
            "AVDID": "AVD-AZU-0010",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_storage_account_network_rules\" \"test\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 62,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name  = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 63,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_account_name = azurerm_storage_account.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 64,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 65,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  default_action = \"Deny\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 66,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  ip_rules       = [\"127.0.0.1\"]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 67,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bypass         = [\"Metrics\"]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 68,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 69,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 69,
              "Provider": "Azure",
              "Resource": "azurerm_storage_account_network_rules.test",
              "Service": "storage",
              "StartLine": 62
            },
            "Description": "Some Microsoft services that interact with storage accounts operate from networks that can't be granted access through network rules. \n\nTo help this type of service work as intended, allow the set of trusted Microsoft services to bypass the network rules",
            "ID": "AVD-AZU-0010",
            "Layer": {},
            "Message": "Network rules do not allow bypass for Microsoft Services.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0010",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/storage/common/storage-network-security#trusted-microsoft-services",
              "https://avd.aquasec.com/misconfig/avd-azu-0010"
            ],
            "Resolution": "Allow Trusted Microsoft Services to bypass",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Trusted Microsoft Services should have bypass access to Storage accounts",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0011",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_storage_account\" \"example\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 23,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                     = \"tgsa${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 24,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name      = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 25,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location                 = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 26,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  account_tier             = \"Standard\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 27,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  account_replication_type = \"GRS\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 28,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  queue_properties {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 29,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    logging {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 30,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "      delete                = false",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 31,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 32,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 60,
              "Provider": "Azure",
              "Resource": "azurerm_storage_account.example",
              "Service": "storage",
              "StartLine": 23
            },
            "Description": "Azure Storage currently supports three versions of the TLS protocol: 1.0, 1.1, and 1.2. \n\nAzure Storage uses TLS 1.2 on public HTTPS endpoints, but TLS 1.0 and TLS 1.1 are still supported for backward compatibility.\n\nThis check will warn if the minimum TLS is not set to TLS1_2.",
            "ID": "AVD-AZU-0011",
            "Layer": {},
            "Message": "Storage account uses an insecure TLS version.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0011",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/storage/common/transport-layer-security-configure-minimum-version",
              "https://avd.aquasec.com/misconfig/avd-azu-0011"
            ],
            "Resolution": "Use a more recent TLS/SSL policy for the load balancer",
            "Severity": "CRITICAL",
            "Status": "FAIL",
            "Title": "The minimum TLS version for Storage Accounts should be TLS1_2",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0038",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_managed_disk\" \"example\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": true
                  },
                  {
                    "Annotation": "false",
                    "Content": "    enabled = false",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 20,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 21,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 9,
              "Provider": "Azure",
              "Resource": "azurerm_managed_disk.example",
              "Service": "compute",
              "StartLine": 9
            },
            "Description": "Manage disks should be encrypted at rest. When specifying the \u003ccode\u003eencryption_settings\u003c/code\u003e block, the enabled attribute should be set to \u003ccode\u003etrue\u003c/code\u003e.",
            "ID": "AVD-AZU-0038",
            "Layer": {},
            "Message": "Managed disk is not encrypted.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0038",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/virtual-machines/linux/disk-encryption",
              "https://avd.aquasec.com/misconfig/avd-azu-0038"
            ],
            "Resolution": "Enable encryption on managed disks",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Enable disk encryption on managed disk",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0008",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_storage_account\" \"example\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 23,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                     = \"tgsa${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 24,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name      = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 25,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location                 = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 26,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  account_tier             = \"Standard\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 27,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  account_replication_type = \"GRS\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 28,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  queue_properties {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 29,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    logging {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 30,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "      delete                = false",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 31,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 32,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 60,
              "Provider": "Azure",
              "Resource": "azurerm_storage_account.example",
              "Service": "storage",
              "StartLine": 23
            },
            "Description": "You can configure your storage account to accept requests from secure connections only by setting the Secure transfer required property for the storage account. \n\nWhen you require secure transfer, any requests originating from an insecure connection are rejected. \n\nMicrosoft recommends that you always require secure transfer for all of your storage accounts.",
            "ID": "AVD-AZU-0008",
            "Layer": {},
            "Message": "No issues found",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0008",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/storage/common/storage-require-secure-transfer",
              "https://avd.aquasec.com/misconfig/avd-azu-0008"
            ],
            "Resolution": "Only allow secure connection for transferring data into storage accounts",
            "Severity": "HIGH",
            "Status": "PASS",
            "Title": "Storage accounts should be configured to only accept transfers that are over secure connections",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0012",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_storage_account_network_rules\" \"test\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 62,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name  = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 63,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_account_name = azurerm_storage_account.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 64,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 65,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  default_action = \"Deny\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 66,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  ip_rules       = [\"127.0.0.1\"]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 67,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bypass         = [\"Metrics\"]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 68,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 69,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 69,
              "Provider": "Azure",
              "Resource": "azurerm_storage_account_network_rules.test",
              "Service": "storage",
              "StartLine": 62
            },
            "Description": "The default_action for network rules should come into effect when no other rules are matched.\n\nThe default action should be set to Deny.",
            "ID": "AVD-AZU-0012",
            "Layer": {},
            "Message": "No issues found",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0012",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/firewall/rule-processing",
              "https://avd.aquasec.com/misconfig/avd-azu-0012"
            ],
            "Resolution": "Set network rules to deny",
            "Severity": "CRITICAL",
            "Status": "PASS",
            "Title": "The default action on Storage account network rules should be set to deny",
            "Type": "Terraform Security Check"
          }
        ],
        "Target": "terraform/azure/storage.tf",
        "Type": "terraform"
      },
      {
        "Class": "config",
        "Misconfigurations": [
          {
            "AVDID": "AVD-AWS-0176",
            "CauseMetadata": {
              "Code": {
                "Lines": null
              },
              "Provider": "AWS",
              "Service": "rds"
            },
            "Description": "Ensure IAM Database Authentication is enabled for RDS database instances to manage database access",
            "ID": "N/A",
            "Layer": {},
            "Message": "No issues found",
            "Namespace": "builtin.aws.rds.aws0176",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/n/a",
            "Query": "data.builtin.aws.rds.aws0176.deny",
            "References": [
              "https://docs.aws.amazon.com/neptune/latest/userguide/iam-auth.html",
              "https://avd.aquasec.com/misconfig/n/a"
            ],
            "Resolution": "Modify the PostgreSQL and MySQL type RDS instances to enable IAM database authentication.",
            "Severity": "MEDIUM",
            "Status": "PASS",
            "Title": "RDS IAM Database Authentication Disabled",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0177",
            "CauseMetadata": {
              "Code": {
                "Lines": null
              },
              "Provider": "AWS",
              "Service": "rds"
            },
            "Description": "Ensure deletion protection is enabled for RDS database instances.",
            "ID": "N/A",
            "Layer": {},
            "Message": "No issues found",
            "Namespace": "builtin.aws.rds.aws0177",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/n/a",
            "Query": "data.builtin.aws.rds.aws0177.deny",
            "References": [
              "https://aws.amazon.com/about-aws/whats-new/2018/09/amazon-rds-now-provides-database-deletion-protection/",
              "https://avd.aquasec.com/misconfig/n/a"
            ],
            "Resolution": "Modify the RDS instances to enable deletion protection.",
            "Severity": "MEDIUM",
            "Status": "PASS",
            "Title": "RDS Deletion Protection Disabled",
            "Type": "Terraform Security Check"
          }
        ],
        "Target": "terraform/gcp",
        "Type": "terraform"
      },
      {
        "Class": "config",
        "Misconfigurations": [
          {
            "AVDID": "AVD-GCP-0014",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_sql_database_instance\" \"master_instance\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name             = \"terragoat-${var.environment}-master\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  database_version = \"POSTGRES_11\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  region           = var.region",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  settings {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    tier = \"db-f1-micro\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    ip_configuration {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "      ipv4_enabled = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 19,
              "Provider": "Google",
              "Resource": "google_sql_database_instance.master_instance",
              "Service": "sql",
              "StartLine": 1
            },
            "Description": "Temporary files are not logged by default. To log all temporary files, a value of `0` should set in the `log_temp_files` flag - as all files greater in size than the number of bytes set in this flag will be logged.",
            "ID": "AVD-GCP-0014",
            "Layer": {},
            "Message": "Database instance has temporary file logging disabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0014",
            "Query": "data..",
            "References": [
              "https://postgresqlco.nf/doc/en/param/log_temp_files/",
              "https://avd.aquasec.com/misconfig/avd-gcp-0014"
            ],
            "Resolution": "Enable temporary file logging for all files",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Temporary file logging should be enabled for all temporary files.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0015",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_sql_database_instance\" \"master_instance\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "    ip_configuration {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "      ipv4_enabled = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "      authorized_networks {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "        name  = \"WWW\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 11,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "        value = \"0.0.0.0/0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 12,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "      }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 13,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 14,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 18,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 14,
              "Provider": "Google",
              "Resource": "google_sql_database_instance.master_instance",
              "Service": "sql",
              "StartLine": 8
            },
            "Description": "In-transit data should be encrypted so that if traffic is intercepted data will not be exposed in plaintext to attackers.",
            "ID": "AVD-GCP-0015",
            "Layer": {},
            "Message": "Database instance does not require TLS for all connections.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0015",
            "Query": "data..",
            "References": [
              "https://cloud.google.com/sql/docs/mysql/configure-ssl-instance",
              "https://avd.aquasec.com/misconfig/avd-gcp-0015"
            ],
            "Resolution": "Enforce SSL for all connections",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "SSL connections to a SQL database instance should be enforced.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0016",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_sql_database_instance\" \"master_instance\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name             = \"terragoat-${var.environment}-master\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  database_version = \"POSTGRES_11\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  region           = var.region",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  settings {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    tier = \"db-f1-micro\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    ip_configuration {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "      ipv4_enabled = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 19,
              "Provider": "Google",
              "Resource": "google_sql_database_instance.master_instance",
              "Service": "sql",
              "StartLine": 1
            },
            "Description": "Logging connections provides useful diagnostic data such as session length, which can identify performance issues in an application and potential DoS vectors.",
            "ID": "AVD-GCP-0016",
            "Layer": {},
            "Message": "Database instance is not configured to log connections.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0016",
            "Query": "data..",
            "References": [
              "https://www.postgresql.org/docs/13/runtime-config-logging.html#GUC-LOG-CONNECTIONS",
              "https://avd.aquasec.com/misconfig/avd-gcp-0016"
            ],
            "Resolution": "Enable connection logging.",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Ensure that logging of connections is enabled.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0017",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_sql_database_instance\" \"master_instance\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": true
                  },
                  {
                    "Annotation": "true",
                    "Content": "      ipv4_enabled = true",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 18,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 19,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 9,
              "Provider": "Google",
              "Resource": "google_sql_database_instance.master_instance",
              "Service": "sql",
              "StartLine": 9
            },
            "Description": "Database instances should be configured so that they are not available over the public internet, but to internal compute resources which access them.",
            "ID": "AVD-GCP-0017",
            "Layer": {},
            "Message": "Database instance is granted a public internet address.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0017",
            "Query": "data..",
            "References": [
              "https://www.cloudconformity.com/knowledge-base/gcp/CloudSQL/publicly-accessible-cloud-sql-instances.html",
              "https://avd.aquasec.com/misconfig/avd-gcp-0017"
            ],
            "Resolution": "Remove public access from database instances",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Ensure that Cloud SQL Database Instances are not publicly exposed",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0017",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_sql_database_instance\" \"master_instance\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": true
                  },
                  {
                    "Annotation": "\"0.0.0.0/0\"",
                    "Content": "        value = \"0.0.0.0/0\"",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 12,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 18,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 19,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 12,
              "Provider": "Google",
              "Resource": "google_sql_database_instance.master_instance",
              "Service": "sql",
              "StartLine": 12
            },
            "Description": "Database instances should be configured so that they are not available over the public internet, but to internal compute resources which access them.",
            "ID": "AVD-GCP-0017",
            "Layer": {},
            "Message": "Database instance allows access from the public internet.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0017",
            "Query": "data..",
            "References": [
              "https://www.cloudconformity.com/knowledge-base/gcp/CloudSQL/publicly-accessible-cloud-sql-instances.html",
              "https://avd.aquasec.com/misconfig/avd-gcp-0017"
            ],
            "Resolution": "Remove public access from database instances",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Ensure that Cloud SQL Database Instances are not publicly exposed",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0020",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_sql_database_instance\" \"master_instance\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name             = \"terragoat-${var.environment}-master\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  database_version = \"POSTGRES_11\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  region           = var.region",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  settings {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    tier = \"db-f1-micro\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    ip_configuration {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "      ipv4_enabled = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 19,
              "Provider": "Google",
              "Resource": "google_sql_database_instance.master_instance",
              "Service": "sql",
              "StartLine": 1
            },
            "Description": "Lock waits are often an indication of poor performance and often an indicator of a potential denial of service vulnerability, therefore occurrences should be logged for analysis.",
            "ID": "AVD-GCP-0020",
            "Layer": {},
            "Message": "Database instance is not configured to log lock waits.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0020",
            "Query": "data..",
            "References": [
              "https://www.postgresql.org/docs/13/runtime-config-logging.html#GUC-LOG-LOCK-WAITS",
              "https://avd.aquasec.com/misconfig/avd-gcp-0020"
            ],
            "Resolution": "Enable lock wait logging.",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Ensure that logging of lock waits is enabled.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0022",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_sql_database_instance\" \"master_instance\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name             = \"terragoat-${var.environment}-master\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  database_version = \"POSTGRES_11\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  region           = var.region",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  settings {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    tier = \"db-f1-micro\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    ip_configuration {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "      ipv4_enabled = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 19,
              "Provider": "Google",
              "Resource": "google_sql_database_instance.master_instance",
              "Service": "sql",
              "StartLine": 1
            },
            "Description": "Logging disconnections provides useful diagnostic data such as session length, which can identify performance issues in an application and potential DoS vectors.",
            "ID": "AVD-GCP-0022",
            "Layer": {},
            "Message": "Database instance is not configured to log disconnections.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0022",
            "Query": "data..",
            "References": [
              "https://www.postgresql.org/docs/13/runtime-config-logging.html#GUC-LOG-DISCONNECTIONS",
              "https://avd.aquasec.com/misconfig/avd-gcp-0022"
            ],
            "Resolution": "Enable disconnection logging.",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Ensure that logging of disconnections is enabled.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0024",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_sql_database_instance\" \"master_instance\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": true
                  },
                  {
                    "Annotation": "false",
                    "Content": "      enabled = false",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 16,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 18,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 19,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 16,
              "Provider": "Google",
              "Resource": "google_sql_database_instance.master_instance",
              "Service": "sql",
              "StartLine": 16
            },
            "Description": "Automated backups are not enabled by default. Backups are an easy way to restore data in a corruption or data-loss scenario.",
            "ID": "AVD-GCP-0024",
            "Layer": {},
            "Message": "Database instance does not have backups enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0024",
            "Query": "data..",
            "References": [
              "https://cloud.google.com/sql/docs/mysql/backup-recovery/backups",
              "https://avd.aquasec.com/misconfig/avd-gcp-0024"
            ],
            "Resolution": "Enable automated backups",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Enable automated backups to recover from data-loss",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0025",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_sql_database_instance\" \"master_instance\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name             = \"terragoat-${var.environment}-master\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  database_version = \"POSTGRES_11\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  region           = var.region",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  settings {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    tier = \"db-f1-micro\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    ip_configuration {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "      ipv4_enabled = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 19,
              "Provider": "Google",
              "Resource": "google_sql_database_instance.master_instance",
              "Service": "sql",
              "StartLine": 1
            },
            "Description": "Logging checkpoints provides useful diagnostic data, which can identify performance issues in an application and potential DoS vectors.",
            "ID": "AVD-GCP-0025",
            "Layer": {},
            "Message": "Database instance is not configured to log checkpoints.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0025",
            "Query": "data..",
            "References": [
              "https://www.postgresql.org/docs/13/runtime-config-logging.html#GUC-LOG-CHECKPOINTS",
              "https://avd.aquasec.com/misconfig/avd-gcp-0025"
            ],
            "Resolution": "Enable checkpoints logging.",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Ensure that logging of checkpoints is enabled.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0046",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_bigquery_dataset\" \"dataset\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 21,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 22,
                    "Truncated": true
                  },
                  {
                    "Annotation": "\"allAuthenticatedUsers\"",
                    "Content": "    special_group = \"allAuthenticatedUsers\"",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 24,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 36,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 37,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 24,
              "Provider": "Google",
              "Resource": "google_bigquery_dataset.dataset",
              "Service": "bigquery",
              "StartLine": 24
            },
            "Description": "Using 'allAuthenticatedUsers' provides any GCP user - even those outside of your organisation - access to your BigQuery dataset.",
            "ID": "AVD-GCP-0046",
            "Layer": {},
            "Message": "Dataset grants access to all authenticated GCP users.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0046",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-gcp-0046"
            ],
            "Resolution": "Configure access permissions with higher granularity",
            "Severity": "CRITICAL",
            "Status": "FAIL",
            "Title": "BigQuery datasets should only be accessible within the organisation",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0018",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_sql_database_instance\" \"master_instance\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name             = \"terragoat-${var.environment}-master\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  database_version = \"POSTGRES_11\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  region           = var.region",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  settings {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    tier = \"db-f1-micro\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    ip_configuration {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "      ipv4_enabled = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 19,
              "Provider": "Google",
              "Resource": "google_sql_database_instance.master_instance",
              "Service": "sql",
              "StartLine": 1
            },
            "Description": "Setting the minimum log severity too high will cause errors not to be logged",
            "ID": "AVD-GCP-0018",
            "Layer": {},
            "Message": "No issues found",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0018",
            "Query": "data..",
            "References": [
              "https://postgresqlco.nf/doc/en/param/log_min_messages/",
              "https://www.postgresql.org/docs/13/runtime-config-logging.html#GUC-LOG-MIN-MESSAGES",
              "https://avd.aquasec.com/misconfig/avd-gcp-0018"
            ],
            "Resolution": "Set the minimum log severity to at least ERROR",
            "Severity": "LOW",
            "Status": "PASS",
            "Title": "Ensure that Postgres errors are logged",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0021",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_sql_database_instance\" \"master_instance\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name             = \"terragoat-${var.environment}-master\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  database_version = \"POSTGRES_11\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  region           = var.region",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  settings {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    tier = \"db-f1-micro\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    ip_configuration {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "      ipv4_enabled = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 19,
              "Provider": "Google",
              "Resource": "google_sql_database_instance.master_instance",
              "Service": "sql",
              "StartLine": 1
            },
            "Description": "Logging of statements which could contain sensitive data is not advised, therefore this setting should preclude all statements from being logged.",
            "ID": "AVD-GCP-0021",
            "Layer": {},
            "Message": "No issues found",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0021",
            "Query": "data..",
            "References": [
              "https://www.postgresql.org/docs/13/runtime-config-logging.html#GUC-LOG-MIN-DURATION-STATEMENT",
              "https://avd.aquasec.com/misconfig/avd-gcp-0021"
            ],
            "Resolution": "Disable minimum duration statement logging completely",
            "Severity": "LOW",
            "Status": "PASS",
            "Title": "Ensure that logging of long statements is disabled.",
            "Type": "Terraform Security Check"
          }
        ],
        "Target": "terraform/gcp/big_data.tf",
        "Type": "terraform"
      },
      {
        "Class": "config",
        "Misconfigurations": [
          {
            "AVDID": "AVD-GCP-0001",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_storage_bucket_iam_binding\" \"allow_public_read\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 17,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket  = google_storage_bucket.terragoat_website.id",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 18,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  members = [\"allUsers\"]",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 19,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  role    = \"roles/storage.objectViewer\"",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 20,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 21,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 19,
              "Provider": "Google",
              "Resource": "google_storage_bucket_iam_binding.allow_public_read",
              "Service": "storage",
              "StartLine": 19
            },
            "Description": "Using 'allUsers' or 'allAuthenticatedUsers' as members in an IAM member/binding causes data to be exposed outside of the organisation.",
            "ID": "AVD-GCP-0001",
            "Layer": {},
            "Message": "Bucket allows public access.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0001",
            "Query": "data..",
            "References": [
              "https://jbrojbrojbro.medium.com/you-make-the-rules-with-authentication-controls-for-cloud-storage-53c32543747b",
              "https://avd.aquasec.com/misconfig/avd-gcp-0001"
            ],
            "Resolution": "Restrict public access to the bucket.",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Ensure that Cloud Storage bucket is not anonymously or publicly accessible.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0002",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_storage_bucket\" \"terragoat_website\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name          = \"terragot-${var.environment}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location      = var.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  labels = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"2bdc0871a5f4505be58244029cc6485d45d7bb8e\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_file             = \"terraform__gcp__gcs_tf\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_last_modified_at = \"2022-01-19-17-02-27\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_last_modified_by = \"jameswoolfenden\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 15,
              "Provider": "Google",
              "Resource": "google_storage_bucket.terragoat_website",
              "Service": "storage",
              "StartLine": 1
            },
            "Description": "When you enable uniform bucket-level access on a bucket, Access Control Lists (ACLs) are disabled, and only bucket-level Identity and Access Management (IAM) permissions grant access to that bucket and the objects it contains. You revoke all access granted by object ACLs and the ability to administrate permissions using bucket ACLs.",
            "ID": "AVD-GCP-0002",
            "Layer": {},
            "Message": "Bucket has uniform bucket level access disabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0002",
            "Query": "data..",
            "References": [
              "https://cloud.google.com/storage/docs/uniform-bucket-level-access",
              "https://jbrojbrojbro.medium.com/you-make-the-rules-with-authentication-controls-for-cloud-storage-53c32543747b",
              "https://avd.aquasec.com/misconfig/avd-gcp-0002"
            ],
            "Resolution": "Enable uniform bucket level access to provide a uniform permissioning system.",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Ensure that Cloud Storage buckets have uniform bucket-level access enabled",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0066",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_storage_bucket\" \"terragoat_website\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name          = \"terragot-${var.environment}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location      = var.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  labels = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"2bdc0871a5f4505be58244029cc6485d45d7bb8e\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_file             = \"terraform__gcp__gcs_tf\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_last_modified_at = \"2022-01-19-17-02-27\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_last_modified_by = \"jameswoolfenden\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 15,
              "Provider": "Google",
              "Resource": "google_storage_bucket.terragoat_website",
              "Service": "storage",
              "StartLine": 1
            },
            "Description": "Using unmanaged keys makes rotation and general management difficult.",
            "ID": "AVD-GCP-0066",
            "Layer": {},
            "Message": "Storage bucket encryption does not use a customer-managed key.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0066",
            "Query": "data..",
            "References": [
              "https://cloud.google.com/storage/docs/encryption/customer-managed-keys",
              "https://avd.aquasec.com/misconfig/avd-gcp-0066"
            ],
            "Resolution": "Encrypt Cloud Storage buckets using customer-managed keys.",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Cloud Storage buckets should be encrypted with a customer-managed key.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0003",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_storage_bucket_iam_binding\" \"allow_public_read\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 17,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket  = google_storage_bucket.terragoat_website.id",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 18,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  members = [\"allUsers\"]",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 19,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  role    = \"roles/storage.objectViewer\"",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 20,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 21,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 19,
              "Provider": "Google",
              "Resource": "google_storage_bucket_iam_binding.allow_public_read",
              "Service": "iam",
              "StartLine": 19
            },
            "Description": "Permissions should not be directly granted to users, you identify roles that contain the appropriate permissions, and then grant those roles to the user. \n\nGranting permissions to users quickly become unwieldy and complex to make large scale changes to remove access to a particular resource.\n\nPermissions should be granted on roles, groups, services accounts instead.",
            "ID": "AVD-GCP-0003",
            "Layer": {},
            "Message": "No issues found",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0003",
            "Query": "data..",
            "References": [
              "https://cloud.google.com/iam/docs/overview#permissions",
              "https://cloud.google.com/resource-manager/reference/rest/v1/projects/setIamPolicy",
              "https://avd.aquasec.com/misconfig/avd-gcp-0003"
            ],
            "Resolution": "Roles should be granted permissions and assigned to users",
            "Severity": "MEDIUM",
            "Status": "PASS",
            "Title": "IAM granted directly to user.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0006",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_storage_bucket_iam_binding\" \"allow_public_read\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 17,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket  = google_storage_bucket.terragoat_website.id",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 18,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  members = [\"allUsers\"]",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 19,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  role    = \"roles/storage.objectViewer\"",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 20,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 21,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 19,
              "Provider": "Google",
              "Resource": "google_storage_bucket_iam_binding.allow_public_read",
              "Service": "iam",
              "StartLine": 19
            },
            "Description": "Default service accounts should not be used - consider creating specialised service accounts for individual purposes.",
            "ID": "AVD-GCP-0006",
            "Layer": {},
            "Message": "No issues found",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0006",
            "Query": "data..",
            "References": [
              "",
              "https://avd.aquasec.com/misconfig/avd-gcp-0006"
            ],
            "Resolution": "Use specialised service accounts for specific purposes.",
            "Severity": "MEDIUM",
            "Status": "PASS",
            "Title": "Roles should not be assigned to default service accounts",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0011",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_storage_bucket_iam_binding\" \"allow_public_read\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 17,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket  = google_storage_bucket.terragoat_website.id",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 18,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  members = [\"allUsers\"]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 19,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  role    = \"roles/storage.objectViewer\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 20,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 21,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 21,
              "Provider": "Google",
              "Resource": "google_storage_bucket_iam_binding.allow_public_read",
              "Service": "iam",
              "StartLine": 17
            },
            "Description": "Users with service account access at project level can impersonate any service account. Instead, they should be given access to particular service accounts as required.",
            "ID": "AVD-GCP-0011",
            "Layer": {},
            "Message": "No issues found",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0011",
            "Query": "data..",
            "References": [
              "https://cloud.google.com/iam/docs/impersonating-service-accounts",
              "https://avd.aquasec.com/misconfig/avd-gcp-0011"
            ],
            "Resolution": "Provide access at the service-level instead of project-level, if required",
            "Severity": "MEDIUM",
            "Status": "PASS",
            "Title": "Users should not be granted service account access at the project level",
            "Type": "Terraform Security Check"
          }
        ],
        "Target": "terraform/gcp/gcs.tf",
        "Type": "terraform"
      },
      {
        "Class": "config",
        "Misconfigurations": [
          {
            "AVDID": "AVD-GCP-0047",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_container_cluster\" \"workload_cluster\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name               = \"terragoat-${var.environment}-cluster\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  logging_service    = \"none\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location           = var.region",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  initial_node_count = 1",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 11,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  enable_legacy_abac       = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 12,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  monitoring_service       = \"none\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 13,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  remove_default_node_pool = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 14,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 15,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 22,
              "Provider": "Google",
              "Resource": "google_container_cluster.workload_cluster",
              "Service": "gke",
              "StartLine": 6
            },
            "Description": "By default, Pods in Kubernetes can operate with capabilities beyond what they require. You should constrain the Pod's capabilities to only those required for that workload.\n\nKubernetes offers controls for restricting your Pods to execute with only explicitly granted capabilities. \n\nPod Security Policy allows you to set smart defaults for your Pods, and enforce controls you want to enable across your fleet. \n\nThe policies you define should be specific to the needs of your application",
            "ID": "AVD-GCP-0047",
            "Layer": {},
            "Message": "Cluster pod security policy is not enforced.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0047",
            "Query": "data..",
            "References": [
              "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#admission_controllers",
              "https://avd.aquasec.com/misconfig/avd-gcp-0047"
            ],
            "Resolution": "Use security policies for pods to restrict permissions to those needed to be effective",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Pod security policy enforcement not defined.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0048",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_container_node_pool\" \"custom_node_pool\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 24,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  cluster  = google_container_cluster.workload_cluster.name",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 25,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location = var.region",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 26,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 27,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  node_config {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 28,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    image_type = \"Ubuntu\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 29,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 30,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 31,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 30,
              "Provider": "Google",
              "Resource": "google_container_node_pool.custom_node_pool",
              "Service": "gke",
              "StartLine": 28
            },
            "Description": "The Compute Engine instance metadata server exposes legacy v0.1 and v1beta1 endpoints, which do not enforce metadata query headers. \n\nThis is a feature in the v1 APIs that makes it more difficult for a potential attacker to retrieve instance metadata. \n\nUnless specifically required, we recommend you disable these legacy APIs.\n\nWhen setting the \u003ccode\u003emetadata\u003c/code\u003e block, the default value for \u003ccode\u003edisable-legacy-endpoints\u003c/code\u003e is set to true, they should not be explicitly enabled.",
            "ID": "AVD-GCP-0048",
            "Layer": {},
            "Message": "Cluster has legacy metadata endpoints enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0048",
            "Query": "data..",
            "References": [
              "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#protect_node_metadata_default_for_112",
              "https://avd.aquasec.com/misconfig/avd-gcp-0048"
            ],
            "Resolution": "Disable legacy metadata endpoints",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Legacy metadata endpoints enabled.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0049",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_container_cluster\" \"workload_cluster\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name               = \"terragoat-${var.environment}-cluster\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  logging_service    = \"none\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location           = var.region",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  initial_node_count = 1",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 11,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  enable_legacy_abac       = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 12,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  monitoring_service       = \"none\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 13,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  remove_default_node_pool = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 14,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 15,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 22,
              "Provider": "Google",
              "Resource": "google_container_cluster.workload_cluster",
              "Service": "gke",
              "StartLine": 6
            },
            "Description": "IP aliasing allows the reuse of public IPs internally, removing the need for a NAT gateway.",
            "ID": "AVD-GCP-0049",
            "Layer": {},
            "Message": "Cluster has IP aliasing disabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0049",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-gcp-0049"
            ],
            "Resolution": "Enable IP aliasing",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Clusters should have IP aliasing enabled",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0050",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_container_node_pool\" \"custom_node_pool\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 24,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  cluster  = google_container_cluster.workload_cluster.name",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 25,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location = var.region",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 26,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 27,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  node_config {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 28,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    image_type = \"Ubuntu\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 29,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 30,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 31,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 30,
              "Provider": "Google",
              "Resource": "google_container_node_pool.custom_node_pool",
              "Service": "gke",
              "StartLine": 28
            },
            "Description": "You should create and use a minimally privileged service account to run your GKE cluster instead of using the Compute Engine default service account.",
            "ID": "AVD-GCP-0050",
            "Layer": {},
            "Message": "Node pool does not override the default service account.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0050",
            "Query": "data..",
            "References": [
              "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#use_least_privilege_sa",
              "https://avd.aquasec.com/misconfig/avd-gcp-0050"
            ],
            "Resolution": "Use limited permissions for service accounts to be effective",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Checks for service account defined for GKE nodes",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0051",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_container_cluster\" \"workload_cluster\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name               = \"terragoat-${var.environment}-cluster\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  logging_service    = \"none\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location           = var.region",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  initial_node_count = 1",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 11,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  enable_legacy_abac       = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 12,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  monitoring_service       = \"none\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 13,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  remove_default_node_pool = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 14,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 15,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 22,
              "Provider": "Google",
              "Resource": "google_container_cluster.workload_cluster",
              "Service": "gke",
              "StartLine": 6
            },
            "Description": "Labels make it easier to manage assets and differentiate between clusters and environments, allowing the mapping of computational resources to the wider organisational structure.",
            "ID": "AVD-GCP-0051",
            "Layer": {},
            "Message": "Cluster does not use GCE resource labels.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0051",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-gcp-0051"
            ],
            "Resolution": "Set cluster resource labels",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Clusters should be configured with Labels",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0052",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_container_cluster\" \"workload_cluster\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": true
                  },
                  {
                    "Annotation": "\"none\"",
                    "Content": "  monitoring_service       = \"none\"",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 13,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 21,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 22,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 13,
              "Provider": "Google",
              "Resource": "google_container_cluster.workload_cluster",
              "Service": "gke",
              "StartLine": 13
            },
            "Description": "StackDriver monitoring aggregates logs, events, and metrics from your Kubernetes environment on GKE to help you understand your application's behavior in production.",
            "ID": "AVD-GCP-0052",
            "Layer": {},
            "Message": "Cluster does not use the monitoring.googleapis.com/kubernetes StackDriver monitoring service.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0052",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-gcp-0052"
            ],
            "Resolution": "Enable StackDriver monitoring",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Stackdriver Monitoring should be enabled",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0053",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_container_cluster\" \"workload_cluster\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "      cidr_block = \"0.0.0.0/0\"",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 19,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 21,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 22,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 19,
              "Provider": "Google",
              "Resource": "google_container_cluster.workload_cluster",
              "Service": "gke",
              "StartLine": 19
            },
            "Description": "The GKE control plane is exposed to the public internet by default.",
            "ID": "AVD-GCP-0053",
            "Layer": {},
            "Message": "Cluster exposes control plane to the public internet.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0053",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-gcp-0053"
            ],
            "Resolution": "Use private nodes and master authorised networks to prevent exposure",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "GKE Control Plane should not be publicly accessible",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0054",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_container_node_pool\" \"custom_node_pool\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 24,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  cluster  = google_container_cluster.workload_cluster.name",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 25,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location = var.region",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 26,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 27,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  node_config {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 28,
                    "Truncated": false
                  },
                  {
                    "Annotation": "\"Ubuntu\"",
                    "Content": "    image_type = \"Ubuntu\"",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 29,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 30,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 31,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 29,
              "Provider": "Google",
              "Resource": "google_container_node_pool.custom_node_pool",
              "Service": "gke",
              "StartLine": 29
            },
            "Description": "GKE supports several OS image types but COS is the recommended OS image to use on cluster nodes for enhanced security",
            "ID": "AVD-GCP-0054",
            "Layer": {},
            "Message": "Cluster is not configuring node pools to use the COS containerd image type by default.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0054",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-gcp-0054"
            ],
            "Resolution": "Use the COS image type",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Ensure Container-Optimized OS (cos) is used for Kubernetes Engine Clusters Node image",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0054",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_container_node_pool\" \"custom_node_pool\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 24,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  cluster  = google_container_cluster.workload_cluster.name",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 25,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location = var.region",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 26,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 27,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  node_config {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 28,
                    "Truncated": false
                  },
                  {
                    "Annotation": "\"Ubuntu\"",
                    "Content": "    image_type = \"Ubuntu\"",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 29,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 30,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 31,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 29,
              "Provider": "Google",
              "Resource": "google_container_node_pool.custom_node_pool",
              "Service": "gke",
              "StartLine": 29
            },
            "Description": "GKE supports several OS image types but COS is the recommended OS image to use on cluster nodes for enhanced security",
            "ID": "AVD-GCP-0054",
            "Layer": {},
            "Message": "Node pool is not using the COS containerd image type.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0054",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-gcp-0054"
            ],
            "Resolution": "Use the COS image type",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Ensure Container-Optimized OS (cos) is used for Kubernetes Engine Clusters Node image",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0056",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_container_cluster\" \"workload_cluster\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name               = \"terragoat-${var.environment}-cluster\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  logging_service    = \"none\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location           = var.region",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  initial_node_count = 1",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 11,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  enable_legacy_abac       = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 12,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  monitoring_service       = \"none\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 13,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  remove_default_node_pool = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 14,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 15,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 22,
              "Provider": "Google",
              "Resource": "google_container_cluster.workload_cluster",
              "Service": "gke",
              "StartLine": 6
            },
            "Description": "Enabling a network policy allows the segregation of network traffic by namespace",
            "ID": "AVD-GCP-0056",
            "Layer": {},
            "Message": "Cluster does not have a network policy enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0056",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-gcp-0056"
            ],
            "Resolution": "Enable network policy",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Network Policy should be enabled on GKE clusters",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0057",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_container_node_pool\" \"custom_node_pool\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 24,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  cluster  = google_container_cluster.workload_cluster.name",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 25,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location = var.region",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 26,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 27,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  node_config {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 28,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    image_type = \"Ubuntu\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 29,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 30,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 31,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 30,
              "Provider": "Google",
              "Resource": "google_container_node_pool.custom_node_pool",
              "Service": "gke",
              "StartLine": 28
            },
            "Description": "If the \u003ccode\u003eworkload_metadata_config\u003c/code\u003e block within \u003ccode\u003enode_config\u003c/code\u003e is included, the \u003ccode\u003enode_metadata\u003c/code\u003e attribute should be configured securely.\n\nThe attribute should be set to \u003ccode\u003eSECURE\u003c/code\u003e to use metadata concealment, or \u003ccode\u003eGKE_METADATA_SERVER\u003c/code\u003e if workload identity is enabled. This ensures that the VM metadata is not unnecessarily exposed to pods.",
            "ID": "AVD-GCP-0057",
            "Layer": {},
            "Message": "Cluster exposes node metadata of pools by default.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0057",
            "Query": "data..",
            "References": [
              "https://cloud.google.com/kubernetes-engine/docs/how-to/protecting-cluster-metadata#create-concealed",
              "https://avd.aquasec.com/misconfig/avd-gcp-0057"
            ],
            "Resolution": "Set node metadata to SECURE or GKE_METADATA_SERVER",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Node metadata value disables metadata concealment.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0057",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_container_node_pool\" \"custom_node_pool\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 24,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  cluster  = google_container_cluster.workload_cluster.name",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 25,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location = var.region",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 26,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 27,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  node_config {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 28,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    image_type = \"Ubuntu\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 29,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 30,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 31,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 30,
              "Provider": "Google",
              "Resource": "google_container_node_pool.custom_node_pool",
              "Service": "gke",
              "StartLine": 28
            },
            "Description": "If the \u003ccode\u003eworkload_metadata_config\u003c/code\u003e block within \u003ccode\u003enode_config\u003c/code\u003e is included, the \u003ccode\u003enode_metadata\u003c/code\u003e attribute should be configured securely.\n\nThe attribute should be set to \u003ccode\u003eSECURE\u003c/code\u003e to use metadata concealment, or \u003ccode\u003eGKE_METADATA_SERVER\u003c/code\u003e if workload identity is enabled. This ensures that the VM metadata is not unnecessarily exposed to pods.",
            "ID": "AVD-GCP-0057",
            "Layer": {},
            "Message": "Node pool exposes node metadata.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0057",
            "Query": "data..",
            "References": [
              "https://cloud.google.com/kubernetes-engine/docs/how-to/protecting-cluster-metadata#create-concealed",
              "https://avd.aquasec.com/misconfig/avd-gcp-0057"
            ],
            "Resolution": "Set node metadata to SECURE or GKE_METADATA_SERVER",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Node metadata value disables metadata concealment.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0058",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_container_node_pool\" \"custom_node_pool\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 24,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  cluster  = google_container_cluster.workload_cluster.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 25,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location = var.region",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 26,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 27,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  node_config {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 28,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    image_type = \"Ubuntu\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 29,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 30,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 31,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 31,
              "Provider": "Google",
              "Resource": "google_container_node_pool.custom_node_pool",
              "Service": "gke",
              "StartLine": 24
            },
            "Description": "Automatic updates keep nodes updated with the latest cluster master version.",
            "ID": "AVD-GCP-0058",
            "Layer": {},
            "Message": "Node pool does not have auto-upgraade enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0058",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-gcp-0058"
            ],
            "Resolution": "Enable automatic upgrades",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Kubernetes should have 'Automatic upgrade' enabled",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0059",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_container_cluster\" \"workload_cluster\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name               = \"terragoat-${var.environment}-cluster\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  logging_service    = \"none\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location           = var.region",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  initial_node_count = 1",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 11,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  enable_legacy_abac       = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 12,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  monitoring_service       = \"none\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 13,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  remove_default_node_pool = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 14,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 15,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 22,
              "Provider": "Google",
              "Resource": "google_container_cluster.workload_cluster",
              "Service": "gke",
              "StartLine": 6
            },
            "Description": "Enabling private nodes on a cluster ensures the nodes are only available internally as they will only be assigned internal addresses.",
            "ID": "AVD-GCP-0059",
            "Layer": {},
            "Message": "Cluster does not have private nodes.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0059",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-gcp-0059"
            ],
            "Resolution": "Enable private cluster",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Clusters should be set to private",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0060",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_container_cluster\" \"workload_cluster\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": true
                  },
                  {
                    "Annotation": "\"none\"",
                    "Content": "  logging_service    = \"none\"",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 21,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 22,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 8,
              "Provider": "Google",
              "Resource": "google_container_cluster.workload_cluster",
              "Service": "gke",
              "StartLine": 8
            },
            "Description": "StackDriver logging provides a useful interface to all of stdout/stderr for each container and should be enabled for moitoring, debugging, etc.",
            "ID": "AVD-GCP-0060",
            "Layer": {},
            "Message": "Cluster does not use the logging.googleapis.com/kubernetes StackDriver logging service.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0060",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-gcp-0060"
            ],
            "Resolution": "Enable StackDriver logging",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Stackdriver Logging should be enabled",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0062",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_container_cluster\" \"workload_cluster\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": true
                  },
                  {
                    "Annotation": "true",
                    "Content": "  enable_legacy_abac       = true",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 12,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 21,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 22,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 12,
              "Provider": "Google",
              "Resource": "google_container_cluster.workload_cluster",
              "Service": "gke",
              "StartLine": 12
            },
            "Description": "You should disable Attribute-Based Access Control (ABAC), and instead use Role-Based Access Control (RBAC) in GKE.\n\nRBAC has significant security advantages and is now stable in Kubernetes, so it’s time to disable ABAC.",
            "ID": "AVD-GCP-0062",
            "Layer": {},
            "Message": "Cluster has legacy ABAC enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0062",
            "Query": "data..",
            "References": [
              "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#leave_abac_disabled_default_for_110",
              "https://avd.aquasec.com/misconfig/avd-gcp-0062"
            ],
            "Resolution": "Switch to using RBAC permissions",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Legacy ABAC permissions are enabled.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0063",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_container_node_pool\" \"custom_node_pool\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 24,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  cluster  = google_container_cluster.workload_cluster.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 25,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location = var.region",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 26,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 27,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  node_config {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 28,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    image_type = \"Ubuntu\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 29,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 30,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 31,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 31,
              "Provider": "Google",
              "Resource": "google_container_node_pool.custom_node_pool",
              "Service": "gke",
              "StartLine": 24
            },
            "Description": "Automatic repair will monitor nodes and attempt repair when a node fails multiple subsequent health checks",
            "ID": "AVD-GCP-0063",
            "Layer": {},
            "Message": "Node pool does not have auto-repair enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0063",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-gcp-0063"
            ],
            "Resolution": "Enable automatic repair",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Kubernetes should have 'Automatic repair' enabled",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0050",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_container_cluster\" \"workload_cluster\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name               = \"terragoat-${var.environment}-cluster\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  logging_service    = \"none\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location           = var.region",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  initial_node_count = 1",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 11,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  enable_legacy_abac       = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 12,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  monitoring_service       = \"none\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 13,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  remove_default_node_pool = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 14,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 15,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 22,
              "Provider": "Google",
              "Resource": "google_container_cluster.workload_cluster",
              "Service": "gke",
              "StartLine": 6
            },
            "Description": "You should create and use a minimally privileged service account to run your GKE cluster instead of using the Compute Engine default service account.",
            "ID": "AVD-GCP-0050",
            "Layer": {},
            "Message": "No issues found",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0050",
            "Query": "data..",
            "References": [
              "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#use_least_privilege_sa",
              "https://avd.aquasec.com/misconfig/avd-gcp-0050"
            ],
            "Resolution": "Use limited permissions for service accounts to be effective",
            "Severity": "MEDIUM",
            "Status": "PASS",
            "Title": "Checks for service account defined for GKE nodes",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0055",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_container_cluster\" \"workload_cluster\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name               = \"terragoat-${var.environment}-cluster\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  logging_service    = \"none\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location           = var.region",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  initial_node_count = 1",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 11,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  enable_legacy_abac       = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 12,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  monitoring_service       = \"none\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 13,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  remove_default_node_pool = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 14,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 15,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 22,
              "Provider": "Google",
              "Resource": "google_container_cluster.workload_cluster",
              "Service": "gke",
              "StartLine": 6
            },
            "Description": "CIS GKE Benchmark Recommendation: 6.5.5. Ensure Shielded GKE Nodes are Enabled\n\nShielded GKE Nodes provide strong, verifiable node identity and integrity to increase the security of GKE nodes and should be enabled on all GKE clusters.",
            "ID": "AVD-GCP-0055",
            "Layer": {},
            "Message": "No issues found",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0055",
            "Query": "data..",
            "References": [
              "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#shielded_nodes",
              "https://avd.aquasec.com/misconfig/avd-gcp-0055"
            ],
            "Resolution": "Enable node shielding",
            "Severity": "HIGH",
            "Status": "PASS",
            "Title": "Shielded GKE nodes not enabled.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0061",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_container_cluster\" \"workload_cluster\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name               = \"terragoat-${var.environment}-cluster\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  logging_service    = \"none\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location           = var.region",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  initial_node_count = 1",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 11,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  enable_legacy_abac       = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 12,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  monitoring_service       = \"none\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 13,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  remove_default_node_pool = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 14,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 15,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 22,
              "Provider": "Google",
              "Resource": "google_container_cluster.workload_cluster",
              "Service": "gke",
              "StartLine": 6
            },
            "Description": "Enabling authorized networks means you can restrict master access to a fixed set of CIDR ranges",
            "ID": "AVD-GCP-0061",
            "Layer": {},
            "Message": "No issues found",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0061",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-gcp-0061"
            ],
            "Resolution": "Enable master authorized networks",
            "Severity": "HIGH",
            "Status": "PASS",
            "Title": "Master authorized networks should be configured on GKE clusters",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0064",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_container_cluster\" \"workload_cluster\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name               = \"terragoat-${var.environment}-cluster\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  logging_service    = \"none\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location           = var.region",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  initial_node_count = 1",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 11,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  enable_legacy_abac       = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 12,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  monitoring_service       = \"none\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 13,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  remove_default_node_pool = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 14,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 15,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 22,
              "Provider": "Google",
              "Resource": "google_container_cluster.workload_cluster",
              "Service": "gke",
              "StartLine": 6
            },
            "Description": "It is recommended to use Service Accounts and OAuth as authentication methods for accessing the master in the container cluster. \n\nBasic authentication should be disabled by explicitly unsetting the \u003ccode\u003eusername\u003c/code\u003e and \u003ccode\u003epassword\u003c/code\u003e on the \u003ccode\u003emaster_auth\u003c/code\u003e block.",
            "ID": "AVD-GCP-0064",
            "Layer": {},
            "Message": "No issues found",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0064",
            "Query": "data..",
            "References": [
              "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#restrict_authn_methods",
              "https://avd.aquasec.com/misconfig/avd-gcp-0064"
            ],
            "Resolution": "Use service account or OAuth for authentication",
            "Severity": "HIGH",
            "Status": "PASS",
            "Title": "Legacy client authentication methods utilized.",
            "Type": "Terraform Security Check"
          }
        ],
        "Target": "terraform/gcp/gke.tf",
        "Type": "terraform"
      },
      {
        "Class": "config",
        "Misconfigurations": [
          {
            "AVDID": "AVD-GCP-0030",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_compute_instance\" \"server\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": true
                  },
                  {
                    "Annotation": "false",
                    "Content": "  metadata = {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 19,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    block-project-ssh-keys = false",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 20,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enable-oslogin         = false",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 21,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    serial-port-enable     = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 22,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 23,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 33,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 34,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 23,
              "Provider": "Google",
              "Resource": "google_compute_instance.server",
              "Service": "compute",
              "StartLine": 19
            },
            "Description": "Use of project-wide SSH keys means that a compromise of any one of these key pairs can result in all instances being compromised. It is recommended to use instance-level keys.",
            "ID": "AVD-GCP-0030",
            "Layer": {},
            "Message": "Instance allows use of project-level SSH keys.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0030",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-gcp-0030"
            ],
            "Resolution": "Disable project-wide SSH keys",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Disable project-wide SSH keys for all instances",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0031",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_compute_instance\" \"server\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "    access_config {}",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 15,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 33,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 34,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 15,
              "Provider": "Google",
              "Resource": "google_compute_instance.server",
              "Service": "compute",
              "StartLine": 15
            },
            "Description": "Instances should not be publicly exposed to the internet",
            "ID": "AVD-GCP-0031",
            "Layer": {},
            "Message": "Instance has a public IP allocated.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0031",
            "Query": "data..",
            "References": [
              "https://cloud.google.com/compute/docs/ip-addresses#externaladdresses",
              "https://avd.aquasec.com/misconfig/avd-gcp-0031"
            ],
            "Resolution": "Remove public IP",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Instances should not have public IP addresses",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0032",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_compute_instance\" \"server\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": true
                  },
                  {
                    "Annotation": "true",
                    "Content": "  metadata = {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 19,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    block-project-ssh-keys = false",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 20,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enable-oslogin         = false",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 21,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    serial-port-enable     = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 22,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 23,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 33,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 34,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 23,
              "Provider": "Google",
              "Resource": "google_compute_instance.server",
              "Service": "compute",
              "StartLine": 19
            },
            "Description": "When serial port access is enabled, the access is not governed by network security rules meaning the port can be exposed publicly.",
            "ID": "AVD-GCP-0032",
            "Layer": {},
            "Message": "Instance has serial port enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0032",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-gcp-0032"
            ],
            "Resolution": "Disable serial port access",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Disable serial port connectivity for all instances",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0033",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_compute_instance\" \"server\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "  boot_disk {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    initialize_params {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "      image = \"debian-cloud/debian-9\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    auto_delete = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 11,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 12,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 33,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 34,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 12,
              "Provider": "Google",
              "Resource": "google_compute_instance.server",
              "Service": "compute",
              "StartLine": 7
            },
            "Description": "Using unmanaged keys makes rotation and general management difficult.",
            "ID": "AVD-GCP-0033",
            "Layer": {},
            "Message": "Instance disk encryption does not use a customer managed key.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0033",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-gcp-0033"
            ],
            "Resolution": "Use managed keys ",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "VM disks should be encrypted with Customer Supplied Encryption Keys",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0034",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_compute_disk\" \"unencrypted_disk\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 36,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name = \"terragoat-${var.environment}-disk\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 37,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  labels = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 38,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"2bdc0871a5f4505be58244029cc6485d45d7bb8e\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 39,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_file             = \"terraform__gcp__instances_tf\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 40,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_last_modified_at = \"2022-01-19-17-02-27\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 41,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_last_modified_by = \"jameswoolfenden\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 42,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_modifiers        = \"jameswoolfenden__nimrodkor\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 43,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_org              = \"bridgecrewio\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 44,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 45,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 48,
              "Provider": "Google",
              "Resource": "google_compute_disk.unencrypted_disk",
              "Service": "compute",
              "StartLine": 36
            },
            "Description": "Using unmanaged keys makes rotation and general management difficult.",
            "ID": "AVD-GCP-0034",
            "Layer": {},
            "Message": "Disk is not encrypted with a customer managed key.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0034",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-gcp-0034"
            ],
            "Resolution": "Use managed keys to encrypt disks.",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Disks should be encrypted with customer managed encryption keys",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0036",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_compute_instance\" \"server\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": true
                  },
                  {
                    "Annotation": "false",
                    "Content": "  metadata = {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 19,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    block-project-ssh-keys = false",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 20,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enable-oslogin         = false",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 21,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    serial-port-enable     = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 22,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 23,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 33,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 34,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 23,
              "Provider": "Google",
              "Resource": "google_compute_instance.server",
              "Service": "compute",
              "StartLine": 19
            },
            "Description": "OS Login automatically revokes the relevant SSH keys when an IAM user has their access revoked.",
            "ID": "AVD-GCP-0036",
            "Layer": {},
            "Message": "Instance has OS Login disabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0036",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-gcp-0036"
            ],
            "Resolution": "Enable OS Login at project level and remove instance-level overrides",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Instances should not override the project setting for OS Login",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0041",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_compute_instance\" \"server\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  machine_type = \"n1-standard-1\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name         = \"terragoat-${var.environment}-machine\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  zone         = data.google_compute_zones.zones.names[0]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  boot_disk {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    initialize_params {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "      image = \"debian-cloud/debian-9\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    auto_delete = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 11,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 12,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 34,
              "Provider": "Google",
              "Resource": "google_compute_instance.server",
              "Service": "compute",
              "StartLine": 3
            },
            "Description": "The virtual TPM provides numerous security measures to your VM.",
            "ID": "AVD-GCP-0041",
            "Layer": {},
            "Message": "Instance does not have VTPM for shielded VMs enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0041",
            "Query": "data..",
            "References": [
              "https://cloud.google.com/blog/products/identity-security/virtual-trusted-platform-module-for-shielded-vms-security-in-plaintext",
              "https://avd.aquasec.com/misconfig/avd-gcp-0041"
            ],
            "Resolution": "Enable Shielded VM VTPM",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Instances should have Shielded VM VTPM enabled",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0043",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_compute_instance\" \"server\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": true
                  },
                  {
                    "Annotation": "true",
                    "Content": "  can_ip_forward = true",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 17,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 33,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 34,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 17,
              "Provider": "Google",
              "Resource": "google_compute_instance.server",
              "Service": "compute",
              "StartLine": 17
            },
            "Description": "Disabling IP forwarding ensures the instance can only receive packets addressed to the instance and can only send packets with a source address of the instance.",
            "ID": "AVD-GCP-0043",
            "Layer": {},
            "Message": "Instance has IP forwarding allowed.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0043",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-gcp-0043"
            ],
            "Resolution": "Disable IP forwarding",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Instances should not have IP forwarding enabled",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0045",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_compute_instance\" \"server\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  machine_type = \"n1-standard-1\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name         = \"terragoat-${var.environment}-machine\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  zone         = data.google_compute_zones.zones.names[0]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  boot_disk {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    initialize_params {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "      image = \"debian-cloud/debian-9\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    auto_delete = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 11,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 12,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 34,
              "Provider": "Google",
              "Resource": "google_compute_instance.server",
              "Service": "compute",
              "StartLine": 3
            },
            "Description": "Integrity monitoring helps you understand and make decisions about the state of your VM instances.",
            "ID": "AVD-GCP-0045",
            "Layer": {},
            "Message": "Instance does not have shielded VM integrity monitoring enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0045",
            "Query": "data..",
            "References": [
              "https://cloud.google.com/security/shielded-cloud/shielded-vm#integrity-monitoring",
              "https://avd.aquasec.com/misconfig/avd-gcp-0045"
            ],
            "Resolution": "Enable Shielded VM Integrity Monitoring",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Instances should have Shielded VM integrity monitoring enabled",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0037",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_compute_disk\" \"unencrypted_disk\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 36,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name = \"terragoat-${var.environment}-disk\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 37,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  labels = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 38,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"2bdc0871a5f4505be58244029cc6485d45d7bb8e\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 39,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_file             = \"terraform__gcp__instances_tf\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 40,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_last_modified_at = \"2022-01-19-17-02-27\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 41,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_last_modified_by = \"jameswoolfenden\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 42,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_modifiers        = \"jameswoolfenden__nimrodkor\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 43,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_org              = \"bridgecrewio\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 44,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 45,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 48,
              "Provider": "Google",
              "Resource": "google_compute_disk.unencrypted_disk",
              "Service": "compute",
              "StartLine": 36
            },
            "Description": "Sensitive values such as raw encryption keys should not be included in your Terraform code, and should be stored securely by a secrets manager.",
            "ID": "AVD-GCP-0037",
            "Layer": {},
            "Message": "No issues found",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0037",
            "Query": "data..",
            "References": [
              "https://cloud.google.com/compute/docs/disks/customer-supplied-encryption",
              "https://avd.aquasec.com/misconfig/avd-gcp-0037"
            ],
            "Resolution": "Reference a managed key rather than include the key in raw format.",
            "Severity": "CRITICAL",
            "Status": "PASS",
            "Title": "The encryption key used to encrypt a compute disk has been specified in plaintext.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0044",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_compute_instance\" \"server\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  machine_type = \"n1-standard-1\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name         = \"terragoat-${var.environment}-machine\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  zone         = data.google_compute_zones.zones.names[0]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  boot_disk {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    initialize_params {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "      image = \"debian-cloud/debian-9\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    auto_delete = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 11,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 12,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 34,
              "Provider": "Google",
              "Resource": "google_compute_instance.server",
              "Service": "compute",
              "StartLine": 3
            },
            "Description": "The default service account has full project access. Instances should instead be assigned the minimal access they need.",
            "ID": "AVD-GCP-0044",
            "Layer": {},
            "Message": "No issues found",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0044",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-gcp-0044"
            ],
            "Resolution": "Remove use of default service account",
            "Severity": "CRITICAL",
            "Status": "PASS",
            "Title": "Instances should not use the default service account",
            "Type": "Terraform Security Check"
          }
        ],
        "Target": "terraform/gcp/instances.tf",
        "Type": "terraform"
      },
      {
        "Class": "config",
        "Misconfigurations": [
          {
            "AVDID": "AVD-GCP-0027",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_compute_firewall\" \"allow_all\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 19,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name          = \"terragoat-${var.environment}-firewall\"",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 20,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  network       = google_compute_network.vpc.id",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 21,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  source_ranges = [\"0.0.0.0/0\"]",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 22,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  allow {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 23,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    protocol = \"tcp\"",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 24,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    ports    = [\"0-65535\"]",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 25,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 26,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 27,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 22,
              "Provider": "Google",
              "Resource": "google_compute_firewall.allow_all",
              "Service": "compute",
              "StartLine": 22
            },
            "Description": "Network security rules should not use very broad subnets.\n\nWhere possible, segments should be broken into smaller subnets and avoid using the \u003ccode\u003e/0\u003c/code\u003e subnet.",
            "ID": "AVD-GCP-0027",
            "Layer": {},
            "Message": "Firewall rule allows ingress traffic from multiple addresses on the public internet.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0027",
            "Query": "data..",
            "References": [
              "https://cloud.google.com/vpc/docs/using-firewalls",
              "https://avd.aquasec.com/misconfig/avd-gcp-0027"
            ],
            "Resolution": "Set a more restrictive cidr range",
            "Severity": "CRITICAL",
            "Status": "FAIL",
            "Title": "An inbound firewall rule allows traffic from /0.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0029",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_compute_subnetwork\" \"public-subnetwork\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name          = \"terragoat-${var.environment}-public-subnetwork\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  ip_cidr_range = \"10.0.0.0/24\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  region        = var.region",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  network       = google_compute_network.vpc.id",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 11,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 12,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  secondary_ip_range {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 13,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    range_name    = \"tf-test-secondary-range-update1\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 14,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    ip_cidr_range = \"192.168.10.0/24\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 15,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 16,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 17,
              "Provider": "Google",
              "Resource": "google_compute_subnetwork.public-subnetwork",
              "Service": "compute",
              "StartLine": 7
            },
            "Description": "VPC flow logs record information about all traffic, which is a vital tool in reviewing anomalous traffic.",
            "ID": "AVD-GCP-0029",
            "Layer": {},
            "Message": "Subnetwork does not have VPC flow logs enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0029",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-gcp-0029"
            ],
            "Resolution": "Enable VPC flow logs",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "VPC flow logs should be enabled for all subnetworks",
            "Type": "Terraform Security Check"
          }
        ],
        "Target": "terraform/gcp/networks.tf",
        "Type": "terraform"
      },
      {
        "Class": "config",
        "Misconfigurations": [
          {
            "AVDID": "AVD-AWS-0176",
            "CauseMetadata": {
              "Code": {
                "Lines": null
              },
              "Provider": "AWS",
              "Service": "rds"
            },
            "Description": "Ensure IAM Database Authentication is enabled for RDS database instances to manage database access",
            "ID": "N/A",
            "Layer": {},
            "Message": "No issues found",
            "Namespace": "builtin.aws.rds.aws0176",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/n/a",
            "Query": "data.builtin.aws.rds.aws0176.deny",
            "References": [
              "https://docs.aws.amazon.com/neptune/latest/userguide/iam-auth.html",
              "https://avd.aquasec.com/misconfig/n/a"
            ],
            "Resolution": "Modify the PostgreSQL and MySQL type RDS instances to enable IAM database authentication.",
            "Severity": "MEDIUM",
            "Status": "PASS",
            "Title": "RDS IAM Database Authentication Disabled",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0177",
            "CauseMetadata": {
              "Code": {
                "Lines": null
              },
              "Provider": "AWS",
              "Service": "rds"
            },
            "Description": "Ensure deletion protection is enabled for RDS database instances.",
            "ID": "N/A",
            "Layer": {},
            "Message": "No issues found",
            "Namespace": "builtin.aws.rds.aws0177",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/n/a",
            "Query": "data.builtin.aws.rds.aws0177.deny",
            "References": [
              "https://aws.amazon.com/about-aws/whats-new/2018/09/amazon-rds-now-provides-database-deletion-protection/",
              "https://avd.aquasec.com/misconfig/n/a"
            ],
            "Resolution": "Modify the RDS instances to enable deletion protection.",
            "Severity": "MEDIUM",
            "Status": "PASS",
            "Title": "RDS Deletion Protection Disabled",
            "Type": "Terraform Security Check"
          }
        ],
        "Target": "terraform/oracle",
        "Type": "terraform"
      }
    ],
    "SchemaVersion": 2
  },
  "policy-results": [
    {
      "filename": "root",
      "namespace": "main",
      "successes": 0,
      "failures": [
        {
          "msg": "config.rego failed - Found CRITICAL issues in infrastructure as code: terraform/aws/db-app.tf: A database resource is marked as publicly accessible."
        },
        {
          "msg": "config.rego failed - Found CRITICAL issues in infrastructure as code: terraform/aws/db-app.tf: An egress security group rule allows traffic to /0."
        },
        {
          "msg": "config.rego failed - Found CRITICAL issues in infrastructure as code: terraform/aws/ec2.tf: An egress security group rule allows traffic to /0."
        },
        {
          "msg": "config.rego failed - Found CRITICAL issues in infrastructure as code: terraform/aws/ec2.tf: An ingress security group rule allows traffic from /0."
        },
        {
          "msg": "config.rego failed - Found CRITICAL issues in infrastructure as code: terraform/aws/ec2.tf: User data for EC2 instances must not contain sensitive AWS keys"
        },
        {
          "msg": "config.rego failed - Found CRITICAL issues in infrastructure as code: terraform/aws/eks.tf: EKS Clusters should have the public access disabled"
        },
        {
          "msg": "config.rego failed - Found CRITICAL issues in infrastructure as code: terraform/aws/eks.tf: EKS cluster should not have open CIDR range for public access"
        },
        {
          "msg": "config.rego failed - Found CRITICAL issues in infrastructure as code: terraform/aws/es.tf: Elasticsearch doesn't enforce HTTPS traffic."
        },
        {
          "msg": "config.rego failed - Found CRITICAL issues in infrastructure as code: terraform/azure/aks.tf: Ensure AKS has an API Server Authorized IP Ranges enabled"
        },
        {
          "msg": "config.rego failed - Found CRITICAL issues in infrastructure as code: terraform/azure/key_vault.tf: Key vault should have the network acl block specified"
        },
        {
          "msg": "config.rego failed - Found CRITICAL issues in infrastructure as code: terraform/azure/mssql.tf: The minimum TLS version for Storage Accounts should be TLS1_2"
        },
        {
          "msg": "config.rego failed - Found CRITICAL issues in infrastructure as code: terraform/azure/networking.tf: An inbound network security rule allows traffic from /0."
        },
        {
          "msg": "config.rego failed - Found CRITICAL issues in infrastructure as code: terraform/azure/networking.tf: RDP access should not be accessible from the Internet, should be blocked on port 3389"
        },
        {
          "msg": "config.rego failed - Found CRITICAL issues in infrastructure as code: terraform/azure/networking.tf: SSH access should not be accessible from the Internet, should be blocked on port 22"
        },
        {
          "msg": "config.rego failed - Found CRITICAL issues in infrastructure as code: terraform/azure/storage.tf: The minimum TLS version for Storage Accounts should be TLS1_2"
        },
        {
          "msg": "config.rego failed - Found CRITICAL issues in infrastructure as code: terraform/gcp/big_data.tf: BigQuery datasets should only be accessible within the organisation"
        },
        {
          "msg": "config.rego failed - Found CRITICAL issues in infrastructure as code: terraform/gcp/networks.tf: An inbound firewall rule allows traffic from /0."
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: terraform/aws/db-app.tf: IAM policy should avoid use of wildcards and instead apply the principle of least privilege"
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: terraform/aws/db-app.tf: Instance with unencrypted block device."
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: terraform/aws/db-app.tf: RDS encryption has not been enabled at a DB Instance level."
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: terraform/aws/db-app.tf: aws_instance should activate session tokens for Instance Metadata Service."
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: terraform/aws/ec2.tf: EBS volumes must be encrypted"
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: terraform/aws/ec2.tf: Instance with unencrypted block device."
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: terraform/aws/ec2.tf: Instances in a subnet should not receive a public IP address by default."
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: terraform/aws/ec2.tf: S3 Access Block should Ignore Public Acl"
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: terraform/aws/ec2.tf: S3 Access block should block public ACL"
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: terraform/aws/ec2.tf: S3 Access block should block public policy"
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: terraform/aws/ec2.tf: S3 Access block should restrict public bucket to limit access"
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: terraform/aws/ec2.tf: S3 encryption should use Customer Managed Keys"
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: terraform/aws/ec2.tf: Unencrypted S3 bucket."
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: terraform/aws/ec2.tf: aws_instance should activate session tokens for Instance Metadata Service."
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: terraform/aws/ecr.tf: ECR images tags shouldn't be mutable."
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: terraform/aws/ecr.tf: ECR repository has image scans disabled."
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: terraform/aws/eks.tf: EKS should have the encryption of secrets enabled"
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: terraform/aws/eks.tf: Instances in a subnet should not receive a public IP address by default."
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: terraform/aws/elb.tf: Load balancer is exposed to the internet."
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: terraform/aws/es.tf: Elasticsearch domain endpoint is using outdated TLS policy."
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: terraform/aws/es.tf: Elasticsearch domain isn't encrypted at rest."
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: terraform/aws/es.tf: Elasticsearch domain uses plaintext traffic for node to node communication."
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: terraform/aws/iam.tf: IAM policy should avoid use of wildcards and instead apply the principle of least privilege"
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: terraform/aws/neptune.tf: Neptune encryption should use Customer Managed Keys"
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: terraform/aws/neptune.tf: Neptune storage must be encrypted at rest"
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: terraform/aws/rds.tf: There is no encryption specified or encryption is disabled on the RDS Cluster."
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: terraform/aws/resources/Dockerfile: Image user should not be 'root'"
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: terraform/aws/s3.tf: S3 Access Block should Ignore Public Acl"
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: terraform/aws/s3.tf: S3 Access block should block public ACL"
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: terraform/aws/s3.tf: S3 Access block should block public policy"
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: terraform/aws/s3.tf: S3 Access block should restrict public bucket to limit access"
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: terraform/aws/s3.tf: S3 encryption should use Customer Managed Keys"
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: terraform/aws/s3.tf: Unencrypted S3 bucket."
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: terraform/azure/aks.tf: Ensure AKS cluster has Network Policy configured"
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: terraform/azure/aks.tf: Ensure RBAC is enabled on AKS clusters"
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: terraform/azure/app_service.tf: Web App uses latest TLS version"
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: terraform/azure/instance.tf: Password authentication should be disabled on Azure virtual machines"
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: terraform/azure/storage.tf: Enable disk encryption on managed disk"
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: terraform/azure/storage.tf: Trusted Microsoft Services should have bypass access to Storage accounts"
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: terraform/gcp/big_data.tf: Ensure that Cloud SQL Database Instances are not publicly exposed"
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: terraform/gcp/big_data.tf: SSL connections to a SQL database instance should be enforced."
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: terraform/gcp/gcs.tf: Ensure that Cloud Storage bucket is not anonymously or publicly accessible."
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: terraform/gcp/gke.tf: GKE Control Plane should not be publicly accessible"
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: terraform/gcp/gke.tf: Legacy ABAC permissions are enabled."
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: terraform/gcp/gke.tf: Legacy metadata endpoints enabled."
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: terraform/gcp/gke.tf: Node metadata value disables metadata concealment."
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: terraform/gcp/gke.tf: Pod security policy enforcement not defined."
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: terraform/gcp/instances.tf: Instances should not have IP forwarding enabled"
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: terraform/gcp/instances.tf: Instances should not have public IP addresses"
        },
        {
          "msg": "secret.rego failed - Found CRITICAL secret: terraform/aws/ec2.tf: AWS Access Key ID"
        },
        {
          "msg": "secret.rego failed - Found CRITICAL secret: terraform/aws/ec2.tf: AWS Secret Access Key"
        },
        {
          "msg": "secret.rego failed - Found CRITICAL secret: terraform/aws/lambda.tf: AWS Access Key ID"
        },
        {
          "msg": "secret.rego failed - Found CRITICAL secret: terraform/aws/lambda.tf: AWS Secret Access Key"
        },
        {
          "msg": "secret.rego failed - Found CRITICAL secret: terraform/aws/providers.tf: AWS Access Key ID"
        },
        {
          "msg": "secret.rego failed - Found CRITICAL secret: terraform/aws/providers.tf: AWS Secret Access Key"
        },
        {
          "msg": "vulnerability.rego failed - Found Critical software vulnerability: GHSA-36fh-84j7-cv5h"
        },
        {
          "msg": "vulnerability.rego failed - Found Critical software vulnerability: GHSA-4w2j-2rg4-5mjw"
        },
        {
          "msg": "vulnerability.rego failed - Found Critical software vulnerability: GHSA-6pw2-5hjv-9pf7"
        },
        {
          "msg": "vulnerability.rego failed - Found Critical software vulnerability: GHSA-7rjr-3q55-vv33"
        },
        {
          "msg": "vulnerability.rego failed - Found Critical software vulnerability: GHSA-crh6-fp67-6883"
        },
        {
          "msg": "vulnerability.rego failed - Found Critical software vulnerability: GHSA-hmr4-m2h5-33qx"
        },
        {
          "msg": "vulnerability.rego failed - Found Critical software vulnerability: GHSA-jfh8-c2jp-5v3q"
        },
        {
          "msg": "vulnerability.rego failed - Found Critical software vulnerability: GHSA-mrgp-mrhc-5jrq"
        },
        {
          "msg": "vulnerability.rego failed - Found Critical software vulnerability: GHSA-phwq-j96m-2c2q"
        },
        {
          "msg": "vulnerability.rego failed - Found Critical software vulnerability: GHSA-qm95-pgcg-qqfq"
        },
        {
          "msg": "vulnerability.rego failed - Found Critical software vulnerability: GHSA-vfq6-hq5r-27r6"
        },
        {
          "msg": "vulnerability.rego failed - Found Critical software vulnerability: GHSA-xvch-5gv4-984h"
        },
        {
          "msg": "vulnerability.rego failed - Found High software vulnerability: GHSA-273r-mgr4-v34f"
        },
        {
          "msg": "vulnerability.rego failed - Found High software vulnerability: GHSA-3gh2-xw74-jmcw"
        },
        {
          "msg": "vulnerability.rego failed - Found High software vulnerability: GHSA-3rfm-jhwj-7488"
        },
        {
          "msg": "vulnerability.rego failed - Found High software vulnerability: GHSA-44c6-4v22-4mhx"
        },
        {
          "msg": "vulnerability.rego failed - Found High software vulnerability: GHSA-4rq4-32rv-6wp6"
        },
        {
          "msg": "vulnerability.rego failed - Found High software vulnerability: GHSA-4wf5-vphf-c2xc"
        },
        {
          "msg": "vulnerability.rego failed - Found High software vulnerability: GHSA-53x6-4x5p-rrvv"
        },
        {
          "msg": "vulnerability.rego failed - Found High software vulnerability: GHSA-57j2-w4cx-62h2"
        },
        {
          "msg": "vulnerability.rego failed - Found High software vulnerability: GHSA-5v2h-r2cx-5xgj"
        },
        {
          "msg": "vulnerability.rego failed - Found High software vulnerability: GHSA-74fj-2j2h-c42q"
        },
        {
          "msg": "vulnerability.rego failed - Found High software vulnerability: GHSA-7g9h-c88w-r7h2"
        },
        {
          "msg": "vulnerability.rego failed - Found High software vulnerability: GHSA-7hfm-57qf-j43q"
        },
        {
          "msg": "vulnerability.rego failed - Found High software vulnerability: GHSA-9c47-m6qq-7p4h"
        },
        {
          "msg": "vulnerability.rego failed - Found High software vulnerability: GHSA-cfm4-qjh2-4765"
        },
        {
          "msg": "vulnerability.rego failed - Found High software vulnerability: GHSA-crv7-7245-f45f"
        },
        {
          "msg": "vulnerability.rego failed - Found High software vulnerability: GHSA-f8q6-p94x-37v3"
        },
        {
          "msg": "vulnerability.rego failed - Found High software vulnerability: GHSA-fhg7-m89q-25r3"
        },
        {
          "msg": "vulnerability.rego failed - Found High software vulnerability: GHSA-fwr7-v2mv-hh25"
        },
        {
          "msg": "vulnerability.rego failed - Found High software vulnerability: GHSA-g5mm-vmx4-3rg7"
        },
        {
          "msg": "vulnerability.rego failed - Found High software vulnerability: GHSA-gfwj-fwqj-fp3v"
        },
        {
          "msg": "vulnerability.rego failed - Found High software vulnerability: GHSA-h582-2pch-3xv3"
        },
        {
          "msg": "vulnerability.rego failed - Found High software vulnerability: GHSA-hh26-6xwr-ggv7"
        },
        {
          "msg": "vulnerability.rego failed - Found High software vulnerability: GHSA-hhq3-ff78-jv3g"
        },
        {
          "msg": "vulnerability.rego failed - Found High software vulnerability: GHSA-hrpp-h998-j3pp"
        },
        {
          "msg": "vulnerability.rego failed - Found High software vulnerability: GHSA-jjjh-jjxp-wpff"
        },
        {
          "msg": "vulnerability.rego failed - Found High software vulnerability: GHSA-mc84-pj99-q6hh"
        },
        {
          "msg": "vulnerability.rego failed - Found High software vulnerability: GHSA-p6xc-xr62-6r2g"
        },
        {
          "msg": "vulnerability.rego failed - Found High software vulnerability: GHSA-r683-j2x4-v87g"
        },
        {
          "msg": "vulnerability.rego failed - Found High software vulnerability: GHSA-rgv9-q543-rqg4"
        },
        {
          "msg": "vulnerability.rego failed - Found High software vulnerability: GHSA-rrrm-qjm4-v8hf"
        },
        {
          "msg": "vulnerability.rego failed - Found High software vulnerability: GHSA-v6rh-hp5x-86rv"
        },
        {
          "msg": "vulnerability.rego failed - Found High software vulnerability: GHSA-wh4h-v3f2-r2pp"
        },
        {
          "msg": "vulnerability.rego failed - Found High software vulnerability: GHSA-x4jg-mjrx-434g"
        },
        {
          "msg": "vulnerability.rego failed - Found High software vulnerability: GHSA-xqfj-vm6h-2x34"
        }
      ]
    }
  ],
  "policy-passed": false
}